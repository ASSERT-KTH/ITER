bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");	  int    intLen    =(_inputPtr    <    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  startPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  startPtr);  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  startPtr);	  int    intLen    =(_inputPtr    <    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  0;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  0;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  0;	  int    intLen    =(_inputPtr    <    _inputEnd)?    _inputBuffer.length    :    0;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  int  intLen  =(_inputPtr  >=  _inputEnd)?  _inputBuffer.length  :  0;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputPtr  >=  _inputEnd)?  _inputBuffer.length  :  0;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputPtr  >=  _inputEnd)?  _inputBuffer.length  :  0;	  int    intLen    =(_inputPtr    <    _inputEnd)?    _inputBuffer.length    :    0;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign   ");  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign   ");  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign   ");	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  _inputPtr  =  _inputEnd?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign   ");  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  _inputPtr  =  _inputEnd?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign   ");  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	_inputPtr  =  _inputEnd?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign   ");	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  int  intLen  =  _inputEnd  +  1;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =  _inputEnd  +  1;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =  _inputEnd  +  1;	  int    intLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =  _inputBuffer.length;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =  _inputBuffer.length;	  int    intLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  int  intLen  =  _inputEnd  -  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =  _inputEnd  -  1;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =  _inputEnd  -  1;	  int    intLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  1  :  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  1  :  _inputBuffer[_inputPtr++];  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputPtr  <  _inputEnd)?  1  :  _inputBuffer[_inputPtr++];	  int    intLen    =(_inputPtr    <    _inputEnd)?    0    :    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  char  intLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  char  intLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	char  intLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];	  int    intLen    =(_inputPtr    <    _inputEnd)?    0    :    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  int  intLen  =(_inputPtr  >=  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputPtr  >=  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputPtr  >=  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];	  int    intLen    =(_inputPtr    <    _inputEnd)?    0    :    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  int  intLen  =  _inputPtr  +  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =  _inputPtr  +  1;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =  _inputPtr  +  1;	  int    intLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  int  intLen  =  _inputPtr  -  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =  _inputPtr  -  1;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =  _inputPtr  -  1;	  int    intLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++]  +  1;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++]  +  1;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++]  +  1;	  int    intLen    =(_inputPtr    <    _inputEnd)?    0    :    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  outBuf[outPtr++]  =  '-';  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  outBuf[outPtr++]  =  '-';  }  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  outBuf[outPtr++]  =  '-';  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++].length;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++].length;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++].length;	  int    intLen    =(_inputPtr    <    _inputEnd)?    0    :    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  int  intLen  =(_inputBuffer.length  <  _inputEnd)?  _inputBuffer.length  :  0;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputBuffer.length  <  _inputEnd)?  _inputBuffer.length  :  0;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputBuffer.length  <  _inputEnd)?  _inputBuffer.length  :  0;	  int    intLen    =(_inputPtr    <    _inputEnd)?    _inputBuffer.length    :    0;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer.length  :  1;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer.length  :  1;  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer.length  :  1;	  int    intLen    =(_inputPtr    <    _inputEnd)?    _inputBuffer.length    :    0;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  _reportUnsupportedOperation();  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  _reportUnsupportedOperation();  }  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  _reportUnsupportedOperation();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  c);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  c);  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  c);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  _inputBuffer[_inputPtr++]);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;  char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }      [BUGGY]  int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  _inputBuffer[_inputPtr++]);  [BUGGY]    char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(   "No  digit  following  minus  sign   ");  if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	int  intLen  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  _inputBuffer[_inputPtr++]);	  int    intLen    =(_inputPtr    <    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
