bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  fractLen  =(_inputPtr  <  inputLen)?  0  :  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  char  fractLen  =(_inputPtr  <  inputLen)?  0  :  _inputBuffer[_inputPtr++];  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	char  fractLen  =(_inputPtr  <  inputLen)?  0  :  _inputBuffer[_inputPtr++];	  int    fractLen    =(_inputPtr    <    inputLen)?    0    :    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  int  fractLen  =(_inputPtr  <  len)?  0  :  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  int  fractLen  =(_inputPtr  <  len)?  0  :  _inputBuffer[_inputPtr++];  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	int  fractLen  =(_inputPtr  <  len)?  0  :  _inputBuffer[_inputPtr++];	  int    fractLen    =(_inputPtr    <    inputLen)?    0    :    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  char  c  =  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  char  c  =  _inputBuffer[_inputPtr++];  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	char  c  =  _inputBuffer[_inputPtr++];	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  return  _handleInvalidNumberStart(c,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  return  _handleInvalidNumberStart(c,  startPtr);  }  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  return  _handleInvalidNumberStart(c,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  c  =  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  c  =  _inputBuffer[_inputPtr++];  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	c  =  _inputBuffer[_inputPtr++];	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  int  c  =  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  int  c  =  _inputBuffer[_inputPtr++];  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	int  c  =  _inputBuffer[_inputPtr++];	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  int  fractLen  =  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  int  fractLen  =  _inputBuffer.length;  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	int  fractLen  =  _inputBuffer.length;	  int    fractLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  char  fractLen  =  _inputPtr;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  char  fractLen  =  _inputPtr;  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	char  fractLen  =  _inputPtr;	  int    fractLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  int  fractLen  =  _inputPtr  +  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  int  fractLen  =  _inputPtr  +  1;  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	int  fractLen  =  _inputPtr  +  1;	  int    fractLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  char  fractLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  char  fractLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	char  fractLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];	  int    fractLen    =(_inputPtr    <    _inputEnd)?    0    :    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  int  fractLen  =(_inputPtr  >=  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  int  fractLen  =(_inputPtr  >=  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	int  fractLen  =(_inputPtr  >=  _inputEnd)?  0  :  _inputBuffer[_inputPtr++];	  int    fractLen    =(_inputPtr    <    _inputEnd)?    0    :    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  int  fractLen  =(_inputPtr  <  _inputEnd)?  1  :  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  int  fractLen  =(_inputPtr  <  _inputEnd)?  1  :  _inputBuffer[_inputPtr++];  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	int  fractLen  =(_inputPtr  <  _inputEnd)?  1  :  _inputBuffer[_inputPtr++];	  int    fractLen    =(_inputPtr    <    _inputEnd)?    0    :    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  int  fractLen  =  _inputEnd  +  1;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  int  fractLen  =  _inputEnd  +  1;  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	int  fractLen  =  _inputEnd  +  1;	  int    fractLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  char  fractLen  =  _inputEnd;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  char  fractLen  =  _inputEnd;  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	char  fractLen  =  _inputEnd;	  int    fractLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  String  fractLen  =  0;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  String  fractLen  =  0;  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	String  fractLen  =  0;	  char    fractLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  Char  fractLen  =  0;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  Char  fractLen  =  0;  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	Char  fractLen  =  0;	  char    fractLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  int  fractLen  =  _inputPtr  -  startPtr;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  int  fractLen  =  _inputPtr  -  startPtr;  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	int  fractLen  =  _inputPtr  -  startPtr;	  int    fractLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  return  _handleInvalidNumberStart(neg,  startPtr);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  return  _handleInvalidNumberStart(neg,  startPtr);  }  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  return  _handleInvalidNumberStart(neg,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  return  _handleInvalidNumberStart(negate,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  return  _handleInvalidNumberStart(negate,  startPtr);  }  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  return  _handleInvalidNumberStart(negate,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  int  fractLen  =  _inputEnd  -  startPtr;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  int  fractLen  =  _inputEnd  -  startPtr;  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	int  fractLen  =  _inputEnd  -  startPtr;	  int    fractLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
21	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(!loadMore())  {  break  fract_loop;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(!loadMore())  {  break  fract_loop;  }  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	if(_inputPtr  >=  _inputEnd)  {  if(!loadMore())  {  break  fract_loop;  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  return  _handleInvalidNumberStart(ch,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  return  _handleInvalidNumberStart(ch,  startPtr);  }  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  return  _handleInvalidNumberStart(ch,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  int  fractLen  =  _inputEnd  -  _inputPtr;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }    [BUGGY]  int  fractLen  =  _inputEnd  -  _inputPtr;  [BUGGY]      if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  fract_loop:  while  (true)  {  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  eof  =  true;  break  fract_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	int  fractLen  =  _inputEnd  -  _inputPtr;	  int    fractLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
