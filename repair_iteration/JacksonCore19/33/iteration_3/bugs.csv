bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);	  char    c    =(_inputPtr    <    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign       ");    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsArray().toCharArray();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsArray().toCharArray();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsArray().toCharArray();	  char[]    outBuf    =    _textBuffer.contentsAsString().toCharArray();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
3	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr  +  1);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr  +  1);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  _inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  _inputPtr);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  startPtr);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  startPtr);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  endPtr);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  endPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  endPtr);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  String  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  empty  value ");  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  String  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  empty  value ");  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	String  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  empty  value ");	  char    c    =(_inputPtr    <    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    empty    value   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
8	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.endCurrentSegment(startPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.endCurrentSegment(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.endCurrentSegment(startPtr);	  char[]    outBuf    =    _textBuffer.endCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
9	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsBooleanValue();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsBooleanValue();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsBooleanValue();	  char[]    outBuf    =    _textBuffer.contentsAsCharacters();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsCharacters(true);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsCharacters(true);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsCharacters(true);	  char[]    outBuf    =    _textBuffer.contentsAsCharacters();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
11	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSize(_inputPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSize(_inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultSize(_inputPtr);	  char[]    outBuf    =    _textBuffer.defaultSize();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.length();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.length();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.length();	  char[]    outBuf    =    _textBuffer.defaultSize();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharacterStart();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharacterStart();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentCharacterStart();	  char[]    outBuf    =    _textBuffer.getCurrentStart();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentEnd();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentEnd();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentEnd();	  char[]    outBuf    =    _textBuffer.getCurrentStart();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentCharacter();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentCharacter();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentCharacter();	  char[]    outBuf    =    _textBuffer.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.startCharacter();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.startCharacter();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.startCharacter();	  char[]    outBuf    =    _textBuffer.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getOutputBuffer(startPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getOutputBuffer(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getOutputBuffer(startPtr);	  char[]    outBuf    =    _textBuffer.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.toCharArray();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.toCharArray();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.toCharArray();	  char[]    outBuf    =    _textBuffer.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.outputBuffer(startPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.outputBuffer(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.outputBuffer(startPtr);	  char[]    outBuf    =    _textBuffer.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentStartOffset(startPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentStartOffset(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentStartOffset(startPtr);	  char[]    outBuf    =    _textBuffer.getCurrentStartOffset();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentEndOffset();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentEndOffset();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentEndOffset();	  char[]    outBuf    =    _textBuffer.getCurrentStartOffset();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharOffset();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharOffset();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentCharOffset();	  char[]    outBuf    =    _textBuffer.getCurrentStartOffset();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsArray();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsArray();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsArray();	  char[]    outBuf    =    _textBuffer.contentsAsCharArray();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
24	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsBoolean();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsBoolean();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsBoolean();	  char[]    outBuf    =    _textBuffer.contentsAsCharArray();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
25	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.startAndStart();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.startAndStart();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.startAndStart();	  char[]    outBuf    =    _textBuffer.resetAndStart();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
26	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.resetAndStart(startPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.resetAndStart(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.resetAndStart(startPtr);	  char[]    outBuf    =    _textBuffer.resetAndStart();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
27	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getChars(startPtr,  startPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getChars(startPtr,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getChars(startPtr,  startPtr);	  char[]    outBuf    =    _textBuffer.resetAndStart();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
28	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.startSegment(startPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.startSegment(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.startSegment(startPtr);	  char[]    outBuf    =    _textBuffer.startSegment();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr  +  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr  +  1);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr  +  1);	  char[]    outBuf    =    _textBuffer.contentsAsString(_inputBuffer,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
30	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr,  _inputEnd);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr,  _inputEnd);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr,  _inputEnd);	  char[]    outBuf    =    _textBuffer.contentsAsString(_inputBuffer,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
31	[BUG]  [BUGGY]  char[]  outBuf  =  _inputBuffer.contentsAsString(_inputBuffer,  startPtr  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _inputBuffer.contentsAsString(_inputBuffer,  startPtr  +  1);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _inputBuffer.contentsAsString(_inputBuffer,  startPtr  +  1);	  char[]    outBuf    =    _textBuffer.contentsAsString(_inputBuffer,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
32	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr,  c);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr,  c);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr,  c);	  char[]    outBuf    =    _textBuffer.contentsAsString(_inputBuffer,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
33	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishString();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishString();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishString();	  char[]    outBuf    =    _textBuffer.finishSegment();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.startCurrentSegment(startPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.startCurrentSegment(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.startCurrentSegment(startPtr);	  char[]    outBuf    =    _textBuffer.startCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment(startPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentSegment(startPtr);	  char[]    outBuf    =    _textBuffer.getCurrentSegment(_inputPtr);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
36	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment(startPtr,  _inputPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment(startPtr,  _inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentSegment(startPtr,  _inputPtr);	  char[]    outBuf    =    _textBuffer.getCurrentSegment(_inputPtr);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
37	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment(_inputPtr  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment(_inputPtr  +  1);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentSegment(_inputPtr  +  1);	  char[]    outBuf    =    _textBuffer.getCurrentSegment(_inputPtr);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
38	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment(_inputPtr,  startPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentSegment(_inputPtr,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentSegment(_inputPtr,  startPtr);	  char[]    outBuf    =    _textBuffer.getCurrentSegment(_inputPtr);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
39	[BUG]  [BUGGY]  String  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign.   ");  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  String  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign.   ");  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	String  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign.   ");	  char    c    =(_inputPtr    <    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign.   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.length  -  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.length  -  1;  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.length  -  1;	  char[]    outBuf    =    _textBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
41	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.length  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.length  +  1;  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.length  +  1;	  char[]    outBuf    =    _textBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
42	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentChar();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentChar();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentChar();	  char[]    outBuf    =    _textBuffer.getCurrentLength();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
43	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharBuffer();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharBuffer();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentCharBuffer();	  char[]    outBuf    =    _textBuffer.getCurrentLength();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
44	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentChars();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentChars();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentChars();	  char[]    outBuf    =    _textBuffer.getCurrentLength();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(startPtr  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(startPtr  +  1);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultSegment(startPtr  +  1);	  char[]    outBuf    =    _textBuffer.defaultSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  _inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  _inputPtr);	  char[]    outBuf    =    _textBuffer.defaultSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  endPtr);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  endPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  endPtr);	  char[]    outBuf    =    _textBuffer.defaultSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  startPtr);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  startPtr);	  char[]    outBuf    =    _textBuffer.defaultSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
49	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsChars(0,  startPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsChars(0,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsChars(0,  startPtr);	  char[]    outBuf    =    _textBuffer.contentsAsChars();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsChars(startPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsChars(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsChars(startPtr);	  char[]    outBuf    =    _textBuffer.contentsAsChars();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentStart(startPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentStart(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentStart(startPtr);	  char[]    outBuf    =    _textBuffer.getCurrentStart();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
52	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentStart();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentStart();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentStart();	  char[]    outBuf    =    _textBuffer.getCurrentStart();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  outputPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  outputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultSegment(startPtr,  outputPtr);	  char[]    outBuf    =    _textBuffer.defaultSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr-1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr-1);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr-1);	  char[]    outBuf    =    _textBuffer.contentsAsString(_inputBuffer,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
55	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr  +  1,  endPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr  +  1,  endPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsString(_inputBuffer,  startPtr  +  1,  endPtr);	  char[]    outBuf    =    _textBuffer.contentsAsString(_inputBuffer,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
56	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  _inputStart)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  empty  value ");  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char  c  =(_inputPtr  <  _inputStart)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  empty  value ");  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char  c  =(_inputPtr  <  _inputStart)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  empty  value ");	  char    c    =(_inputPtr    <    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    empty    value   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
57	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[0]  :  getNextChar( "No  empty  value ");  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[0]  :  getNextChar( "No  empty  value ");  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[0]  :  getNextChar( "No  empty  value ");	  char    c    =(_inputPtr    <    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    empty    value   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
58	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  outPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  outPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(startPtr,  outPtr);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
60	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsCharacters(startPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsCharacters(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsCharacters(startPtr);	  char[]    outBuf    =    _textBuffer.contentsAsCharacters();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
61	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentStartOffset();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentStartOffset();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentStartOffset();	  char[]    outBuf    =    _textBuffer.getCurrentStartOffset();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharIndex();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharIndex();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentCharIndex();	  char[]    outBuf    =    _textBuffer.getCurrentLength();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.resetAndStart(1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.resetAndStart(1);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.resetAndStart(1);	  char[]    outBuf    =    _textBuffer.resetAndStart();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
64	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  startPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  startPtr);	  char    c    =(_inputPtr    <    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign       ");    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
65	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharacter(startPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharacter(startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentCharacter(startPtr);	  char[]    outBuf    =    _textBuffer.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCharacterEncoding();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCharacterEncoding();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCharacterEncoding();	  char[]    outBuf    =    _textBuffer.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(_inputPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(_inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(_inputPtr);	  char[]    outBuf    =    _textBuffer.getCurrentSegment(_inputPtr);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
68	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(_inputPtr,  startPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(_inputPtr,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultSegment(_inputPtr,  startPtr);	  char[]    outBuf    =    _textBuffer.defaultSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(_inputPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(_inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultSegment(_inputPtr);	  char[]    outBuf    =    _textBuffer.defaultSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
70	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(buf,  startPtr);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(buf,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultSegment(buf,  startPtr);	  char[]    outBuf    =    _textBuffer.defaultSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
71	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(_inputBuffer,  startPtr);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultSegment(_inputBuffer,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultSegment(_inputBuffer,  startPtr);	  char[]    outBuf    =    _textBuffer.defaultSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
72	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentStart(_inputPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentStart(_inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentStart(_inputPtr);	  char[]    outBuf    =    _textBuffer.getCurrentStart();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentStartOffset(_inputPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentStartOffset(_inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentStartOffset(_inputPtr);	  char[]    outBuf    =    _textBuffer.getCurrentStartOffset();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
74	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsCharArray(buf,  startPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsCharArray(buf,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsCharArray(buf,  startPtr);	  char[]    outBuf    =    _textBuffer.contentsAsCharArray();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
75	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharacter(_inputPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getCurrentCharacter(_inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getCurrentCharacter(_inputPtr);	  char[]    outBuf    =    _textBuffer.getCurrentCharacter();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.defaultOutputBuffer();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.defaultOutputBuffer();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.defaultOutputBuffer();	  char[]    outBuf    =    _textBuffer.defaultSize();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
77	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contents;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contents;  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contents;	  char[]    outBuf    =    _textBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.endCurrentSegment(_inputPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.endCurrentSegment(_inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.endCurrentSegment(_inputPtr);	  char[]    outBuf    =    _textBuffer.endCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
79	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsChars().toCharArray();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsChars().toCharArray();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsChars().toCharArray();	  char[]    outBuf    =    _textBuffer.contentsAsString().toCharArray();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
80	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString().toCharArray(buf,  startPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsString().toCharArray(buf,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsString().toCharArray(buf,  startPtr);	  char[]    outBuf    =    _textBuffer.contentsAsString().toCharArray();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
81	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsChars(16);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsChars(16);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsChars(16);	  char[]    outBuf    =    _textBuffer.contentsAsChars();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
82	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsChars(_inputBuffer,  startPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsChars(_inputBuffer,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsChars(_inputBuffer,  startPtr);	  char[]    outBuf    =    _textBuffer.contentsAsString(_inputBuffer,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
83	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsCharacters(_inputPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.contentsAsCharacters(_inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.contentsAsCharacters(_inputPtr);	  char[]    outBuf    =    _textBuffer.contentsAsCharacters();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
84	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.getOutputBuffer(buf,  startPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.getOutputBuffer(buf,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.getOutputBuffer(buf,  startPtr);	  char[]    outBuf    =    _textBuffer.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
85	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.emptyOutputBuffer();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.emptyOutputBuffer();  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.emptyOutputBuffer();	  char[]    outBuf    =    _textBuffer.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
86	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.startCurrentSegment(_inputPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.startCurrentSegment(_inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.startCurrentSegment(_inputPtr);	  char[]    outBuf    =    _textBuffer.startCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
87	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.resetAndStart(neg);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.resetAndStart(neg);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.resetAndStart(neg);	  char[]    outBuf    =    _textBuffer.resetAndStart();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
88	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(_inputPtr,  startPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(_inputPtr,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(_inputPtr,  startPtr);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
89	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr,  startPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr,  startPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr,  startPtr);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment(startPtr);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
90	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  fractLen);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  fractLen);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  fractLen);	  char    c    =(_inputPtr    <    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign       ");    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
91	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.startSegment(_inputPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {  _inputPtr  =  neg  ?  (startPtr+1)  :  startPtr;      [BUGGY]  char[]  outBuf  =  _textBuffer.startSegment(_inputPtr);  [BUGGY]      int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;  char  c  =  (_inputPtr  <  _inputEnd)  ?  _inputBuffer[_inputPtr++]  :  getNextChar(     "No  digit  following  minus  sign     ");  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	char[]  outBuf  =  _textBuffer.startSegment(_inputPtr);	  char[]    outBuf    =    _textBuffer.startSegment();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
