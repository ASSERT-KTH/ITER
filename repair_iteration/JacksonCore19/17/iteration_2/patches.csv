bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  true);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  true);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_parseFloat(ch,  startPtr,  ptr,  true);	  _parseFloat(ch,    startPtr,    ptr,    false);    	non-compiled	[CE]  ';'  expected	7	None	replace
2	[BUG]  [BUGGY]  _parseInt(ch,  startPtr,  ptr,  false);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _parseInt(ch,  startPtr,  ptr,  false);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_parseInt(ch,  startPtr,  ptr,  false);	  _parseFloat(ch,    startPtr,    ptr,    false);    	non-compiled	[CE]  ';'  expected	7	None	replace
3	[BUG]  [BUGGY]  _inputPtr  =  ptr  +  1;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _inputPtr  =  ptr  +  1;  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_inputPtr  =  ptr  +  1;	  _inputPtr    =    startPtr    +    1;    	non-compiled	[CE]  ';'  expected	10	None	replace
4	[BUG]  [BUGGY]  _inputPtr  =  ptr-startPtr-1;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _inputPtr  =  ptr-startPtr-1;  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_inputPtr  =  ptr-startPtr-1;	  _inputPtr    =    startPtr-1;    	non-compiled	[CE]  ';'  expected	1	None	replace
5	[BUG]  [BUGGY]  ptr  =  _parseInt(ch,  startPtr,  len);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseInt(ch,  startPtr,  len);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseInt(ch,  startPtr,  len);	  ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  ';'  expected	11	None	replace
6	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseFloat(ch,  startPtr);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseFloat(ch,  startPtr);	  ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  ';'  expected	11	None	replace
7	[BUG]  [BUGGY]  ptr  =  _parseInt(ch,  startPtr  +  1);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseInt(ch,  startPtr  +  1);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseInt(ch,  startPtr  +  1);	  ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  ';'  expected	11	None	replace
8	[BUG]  [BUGGY]  _inputPtr  =  startPtr  +  ptr;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _inputPtr  =  startPtr  +  ptr;  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_inputPtr  =  startPtr  +  ptr;	  _inputPtr    =    startPtr    +    len;    	non-compiled	[CE]  ';'  expected	4	None	replace
9	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  len);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  len);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_parseFloat(ch,  startPtr,  ptr,  len);	  _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  ';'  expected	6	None	replace
10	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  intLen);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  intLen);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_parseFloat(ch,  startPtr,  ptr,  intLen);	  _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  ';'  expected	6	None	replace
11	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  len);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _parseFloat(ch,  startPtr,  len);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_parseFloat(ch,  startPtr,  len);	  _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_parseFloat(ch,  startPtr,  ptr,  true,  intLen);	  _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  false,  intLen  +  1);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  false,  intLen  +  1);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_parseFloat(ch,  startPtr,  ptr,  false,  intLen  +  1);	  _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    	non-compiled	[CE]  ';'  expected	5	None	replace
14	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  false,  len);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  false,  len);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_parseFloat(ch,  startPtr,  ptr,  false,  len);	  _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    	non-compiled	[CE]  ';'  expected	5	None	replace
15	[BUG]  [BUGGY]  int  ptr  =  _parseInt(ch,  startPtr  +  1);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  int  ptr  =  _parseInt(ch,  startPtr  +  1);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	int  ptr  =  _parseInt(ch,  startPtr  +  1);	  int    ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  ';'  expected	13	None	replace
16	[BUG]  [BUGGY]  char  ptr  =  _parseInt(ch,  startPtr);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  char  ptr  =  _parseInt(ch,  startPtr);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	char  ptr  =  _parseInt(ch,  startPtr);	  int    ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  ';'  expected	13	None	replace
17	[BUG]  [BUGGY]  int  ptr  =  _parseInt(ch,  startPtr,  len);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  int  ptr  =  _parseInt(ch,  startPtr,  len);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	int  ptr  =  _parseInt(ch,  startPtr,  len);	  int    ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  ';'  expected	13	None	replace
18	[BUG]  [BUGGY]  _inputPtr  =  startPtr-startPtr  +  1;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _inputPtr  =  startPtr-startPtr  +  1;  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_inputPtr  =  startPtr-startPtr  +  1;	  _inputPtr    =    startPtr-startPtr;    	non-compiled	[CE]  ';'  expected	3	None	replace
19	[BUG]  [BUGGY]  _inputPtr  =  len-startPtr;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _inputPtr  =  len-startPtr;  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_inputPtr  =  len-startPtr;	  _inputPtr    =    startPtr-startPtr;    	non-compiled	[CE]  ';'  expected	3	None	replace
20	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  len);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  len);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseFloat(ch,  startPtr,  len);	  ptr    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  ';'  expected	8	None	replace
21	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  ptr  +  1);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  ptr  +  1);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseFloat(ch,  startPtr,  ptr  +  1);	  ptr    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  ';'  expected	8	None	replace
22	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  true,  intLen);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  true,  intLen);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseFloat(ch,  startPtr,  true,  intLen);	  ptr    =    _parseFloat(ch,    startPtr,    false,    intLen);    	non-compiled	[CE]  ';'  expected	12	None	replace
23	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  false,  intLen  +  1);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  false,  intLen  +  1);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseFloat(ch,  startPtr,  false,  intLen  +  1);	  ptr    =    _parseFloat(ch,    startPtr,    false,    intLen);    	non-compiled	[CE]  ';'  expected	12	None	replace
24	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  false,  len);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  false,  len);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseFloat(ch,  startPtr,  false,  len);	  ptr    =    _parseFloat(ch,    startPtr,    false,    intLen);    	non-compiled	[CE]  ';'  expected	12	None	replace
25	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  len,  intLen);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  len,  intLen);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseFloat(ch,  startPtr,  len,  intLen);	  ptr    =    _parseFloat(ch,    startPtr,    false,    intLen);    	non-compiled	[CE]  ';'  expected	12	None	replace
26	[BUG]  [BUGGY]  _inputPtr  =  startPtr-startPtr  +  len;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _inputPtr  =  startPtr-startPtr  +  len;  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_inputPtr  =  startPtr-startPtr  +  len;	  _inputPtr    =    ptr-startPtr    +    len;    	non-compiled	[CE]  ';'  expected	14	None	replace
27	[BUG]  [BUGGY]  int  ptr  =  _parseInt(ch,  startPtr-startPtr);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  int  ptr  =  _parseInt(ch,  startPtr-startPtr);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	int  ptr  =  _parseInt(ch,  startPtr-startPtr);	  int    ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  ';'  expected	13	None	replace
28	[BUG]  [BUGGY]  ptr  =  _parseInt(ch,  startPtr,  false,  intLen);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseInt(ch,  startPtr,  false,  intLen);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseInt(ch,  startPtr,  false,  intLen);	  ptr    =    _parseFloat(ch,    startPtr,    false,    intLen);    	non-compiled	[CE]  ';'  expected	12	None	replace
29	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  ptr-outputPtr);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  ptr-outputPtr);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseFloat(ch,  startPtr,  ptr-outputPtr);	  ptr    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  ';'  expected	8	None	replace
30	[BUG]  [BUGGY]  ptr  =  _parseInt(ch,  startPtr-startPtr);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseInt(ch,  startPtr-startPtr);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseInt(ch,  startPtr-startPtr);	  ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  ';'  expected	11	None	replace
31	[BUG]  [BUGGY]  _inputPtr  =  startPtr-outputPtr;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _inputPtr  =  startPtr-outputPtr;  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_inputPtr  =  startPtr-outputPtr;	  _inputPtr    =    startPtr-startPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  _inputPtr  =  ptr  +  len;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _inputPtr  =  ptr  +  len;  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_inputPtr  =  ptr  +  len;	  _inputPtr    =    startPtr    +    len;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  int  ptr  =  _parseInt(ch,  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  int  ptr  =  _parseInt(ch,  1);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	int  ptr  =  _parseInt(ch,  1);	  int    ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
34	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  null,  intLen);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  null,  intLen);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_parseFloat(ch,  startPtr,  ptr,  null,  intLen);	  _parseFloat(ch,    startPtr,    ptr,    false);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  ptr  =  _parseInt(ch,  startPtr  +  len);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseInt(ch,  startPtr  +  len);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseInt(ch,  startPtr  +  len);	  ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  ptr  =  _parseInt(ch,  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseInt(ch,  1);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseInt(ch,  1);	  ptr    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  _inputPtr  =  ptr-startPtr  +  intLen;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  _inputPtr  =  ptr-startPtr  +  intLen;  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	_inputPtr  =  ptr-startPtr  +  intLen;	  _inputPtr    =    ptr-startPtr    +    len;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
38	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  ptr,  intLen);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  ptr,  intLen);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseFloat(ch,  startPtr,  ptr,  intLen);	  ptr    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  ptr,  false);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {      [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  ptr,  false);  [BUGGY]      return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	ptr  =  _parseFloat(ch,  startPtr,  ptr,  false);	  ptr    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
