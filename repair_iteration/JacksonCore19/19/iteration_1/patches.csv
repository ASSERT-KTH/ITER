bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  inputLen  =  _inputBuffer.length  +  1;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputBuffer.length  +  1;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputBuffer.length  +  1;	  final    int    inputLen    =    _inputEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  final  int  inputLen  =  _inputBuffer[_inputEnd  +  1];  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputBuffer[_inputEnd  +  1];  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputBuffer[_inputEnd  +  1];	  final    int    inputLen    =    _inputEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  final  int  inputLen  =  _inputEnd  -  startPtr  +  1;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputEnd  -  startPtr  +  1;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputEnd  -  startPtr  +  1;	  final    int    inputLen    =    _inputEnd    -    startPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  final  int  inputLen  =  ptr  -  startPtr;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  ptr  -  startPtr;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  ptr  -  startPtr;	  final    int    inputLen    =    _inputEnd    -    startPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  final  int  inputLen  =  _inputBuffer.length  -  startPtr;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputBuffer.length  -  startPtr;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputBuffer.length  -  startPtr;	  final    int    inputLen    =    _inputEnd    -    startPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  final  int  inputLen  =  startPtr  -  _inputEnd;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  startPtr  -  _inputEnd;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  startPtr  -  _inputEnd;	  final    int    inputLen    =    _inputEnd    -    startPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  final  int  inputLen  =  _inputBuffer.length  -  1;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputBuffer.length  -  1;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputBuffer.length  -  1;	  final    int    inputLen    =    _inputBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  final  int  inputLen  =  _inputBuffer.length  -  2;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputBuffer.length  -  2;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputBuffer.length  -  2;	  final    int    inputLen    =    _inputBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(inputLen  >  0)  {  return  _parseFloat(neg,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  if(ch  ==  '.')  {  if(inputLen  >  0)  {  return  _parseFloat(neg,  startPtr);  }  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	if(ch  ==  '.')  {  if(inputLen  >  0)  {  return  _parseFloat(neg,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(inputLen  <  =  0)  {  return  _parseFloat(neg,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  if(ch  ==  '.')  {  if(inputLen  <  =  0)  {  return  _parseFloat(neg,  startPtr);  }  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	if(ch  ==  '.')  {  if(inputLen  <  =  0)  {  return  _parseFloat(neg,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(inputLen  <  2)  {  return  _parseFloat(neg,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  if(ch  ==  '.')  {  if(inputLen  <  2)  {  return  _parseFloat(neg,  startPtr);  }  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	if(ch  ==  '.')  {  if(inputLen  <  2)  {  return  _parseFloat(neg,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(neg  >  0)  {  return  _parseFloat(neg,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  if(ch  ==  '.')  {  if(neg  >  0)  {  return  _parseFloat(neg,  startPtr);  }  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	if(ch  ==  '.')  {  if(neg  >  0)  {  return  _parseFloat(neg,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  final  int  inputLen  =  _inputPtr  -  1;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputPtr  -  1;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputPtr  -  1;	  final    int    inputLen    =    _inputEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  final  int  inputLen  =  _parseFloat(neg,  startPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _parseFloat(neg,  startPtr);  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _parseFloat(neg,  startPtr);	  final    int    inputLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  final  int  inputLen  =  _inputBuffer[ptr];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputBuffer[ptr];  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputBuffer[ptr];	  final    int    inputLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  final  int  fractLen  =  0;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  fractLen  =  0;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  fractLen  =  0;	  final    int    inputLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  final  char  inputLen  =  0;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  char  inputLen  =  0;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  char  inputLen  =  0;	  final    int    inputLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  final  int  inputLen  =  _inputPtr  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputPtr  +  1;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputPtr  +  1;	  final    int    inputLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  final  int  inputLen  =  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputBuffer[_inputPtr++];  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputBuffer[_inputPtr++];	  final    int    inputLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(_inputPtr  >=  inputLen)  {  return  _parseFloat(neg,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  if(ch  ==  '.')  {  if(_inputPtr  >=  inputLen)  {  return  _parseFloat(neg,  startPtr);  }  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	if(ch  ==  '.')  {  if(_inputPtr  >=  inputLen)  {  return  _parseFloat(neg,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(_inputPtr  >=  inputEnd)  {  return  _parseFloat(neg,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  if(ch  ==  '.')  {  if(_inputPtr  >=  inputEnd)  {  return  _parseFloat(neg,  startPtr);  }  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	if(ch  ==  '.')  {  if(_inputPtr  >=  inputEnd)  {  return  _parseFloat(neg,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  if(ch  ==  '.')  {  return  _parseFloat(neg,  startPtr);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  if(ch  ==  '.')  {  return  _parseFloat(neg,  startPtr);  }  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	if(ch  ==  '.')  {  return  _parseFloat(neg,  startPtr);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(neg,  startPtr);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  Integer  ptr  =  _parseInt(neg,  startPtr);  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	Integer  ptr  =  _parseInt(neg,  startPtr);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  int  ptr  =  _parseInt(ch,  startPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  int  ptr  =  _parseInt(ch,  startPtr);  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	int  ptr  =  _parseInt(ch,  startPtr);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  int  ptr  =  _parseInt(neg,  startPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  int  ptr  =  _parseInt(neg,  startPtr);  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	int  ptr  =  _parseInt(neg,  startPtr);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  startPtr);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  Integer  ptr  =  _parseInt(ch,  startPtr);  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	Integer  ptr  =  _parseInt(ch,  startPtr);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  final  int  inputLen  =  _inputEnd  -  ptr;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputEnd  -  ptr;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputEnd  -  ptr;	  final    int    inputLen    =    _inputEnd    -    startPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  final  int  inputLen  =  _inputEnd  -  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputEnd  -  _inputBuffer.length;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputEnd  -  _inputBuffer.length;	  final    int    inputLen    =    _inputEnd    -    startPtr;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  final  int  inputLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputPtr;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputPtr;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =(_inputPtr  <  _inputEnd)?  0  :  _inputPtr;	  final    int    inputLen    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  final  int  inputLen  =  _inputBuffer.length  -  10;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    {    [BUGGY]  final  int  inputLen  =  _inputBuffer.length  -  10;  [BUGGY]    int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  return  _parseNumber2(neg,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseFloat  [RETURN_TYPE]  JsonToken  int  ch  int  startPtr  int  ptr  boolean  neg  int  intLen  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  neg  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	final  int  inputLen  =  _inputBuffer.length  -  10;	  final    int    inputLen    =    _inputBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
