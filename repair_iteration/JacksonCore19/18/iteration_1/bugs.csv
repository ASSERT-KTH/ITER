bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  [BUGGY]  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  [BUGGY]  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1241	1241	1	replace	return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);	return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
2	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  [BUGGY]  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1241	1241	1	replace	_parseFloat(ch,  startPtr,  ptr,  true,  intLen);	return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
3	[BUG]  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  [BUGGY]  ptr  =  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  [BUGGY]  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1241	1241	1	replace	ptr  =  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);	return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
4	[BUG]  [BUGGY]  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  [BUGGY]  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen  +  1);  [BUGGY]  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1241	1241	1	replace	return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen  +  1);	return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  [BUGGY]    [BUGGY]  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1241	1241	1	replace	  	return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
6	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  false,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  false,  intLen  +  1);  [BUGGY]  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1241	1241	1	replace	_parseFloat(ch,  startPtr,  ptr,  false,  intLen  +  1);	return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
7	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  [BUGGY]  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1241	1241	1	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);	return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
8	[BUG]  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  return  _parseNumber2(false,  startPtr);  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  [BUGGY]  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  [BUGGY]  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1241	1241	1	replace	_parseFloat(ch,  startPtr,  ptr,  false,  intLen);	return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
