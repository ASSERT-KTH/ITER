bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  c  =  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  _inputBuffer[_inputPtr++];  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  _inputBuffer[_inputPtr++];	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    false;    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
2	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  c  =  CHAR_NULL;  eof  =  false;  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  c  =  CHAR_NULL;  eof  =  false;  break  int_loop;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  c  =  CHAR_NULL;  eof  =  false;  break  int_loop;  }	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    false;    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
3	[BUG]  [BUGGY]  eof  =  false;  break  int_loop;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  eof  =  false;  break  int_loop;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	eof  =  false;  break  int_loop;	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    false;    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
4	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  _inputEnd);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  _inputEnd);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  _inputEnd);	  outBuf[outPtr++]    =    Character.toUpperCase(c,    _inputBuffer);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
5	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  _inputPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  _inputPtr);	  outBuf[outPtr++]    =    Character.toUpperCase(c,    _inputBuffer);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
6	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  startPtr);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  startPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  startPtr);	  outBuf[outPtr++]    =    Character.toUpperCase(c,    _inputBuffer);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
7	[BUG]  [BUGGY]  outBuf[_inputPtr++]  =  ',';  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[_inputPtr++]  =  ',';  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[_inputPtr++]  =  ',';	  outBuf[_inputPtr++]    =    'n';    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c)+  2;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c)+  2;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c)+  2;	  outBuf[outPtr++]    =    Character.toLowerCase(c)+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
9	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c)+  4;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c)+  4;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c)+  4;	  outBuf[outPtr++]    =    Character.toLowerCase(c)+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
10	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c)+  3;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c)+  3;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c)+  3;	  outBuf[outPtr++]    =    Character.toLowerCase(c)+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
11	[BUG]  [BUGGY]  outBuf[_inputPtr++]  =  c;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[_inputPtr++]  =  c;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[_inputPtr++]  =  c;	  outBuf[_inputPtr++]    =    eof;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  outBuf[_inputPtr++]  =  neg;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[_inputPtr++]  =  neg;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[_inputPtr++]  =  neg;	  outBuf[_inputPtr++]    =    eof;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  endPtr  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  endPtr  +  1);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c,  endPtr  +  1);	  outBuf[outPtr++]    =    Character.toLowerCase(c,    endPtr);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  endPtr  -  startPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  endPtr  -  startPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c,  endPtr  -  startPtr);	  outBuf[outPtr++]    =    Character.toLowerCase(c,    endPtr);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.startCurrentSegment();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  char[]  outBuf  =  _textBuffer.startCurrentSegment();  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	char[]  outBuf  =  _textBuffer.startCurrentSegment();	  char[]    outBuf    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	char[]  outBuf  =  _textBuffer.finishCurrentSegment(outPtr);	  char[]    outBuf    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  >>  _inputEnd?  1  :  _inputBuffer[outPtr++]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  >>  _inputEnd?  1  :  _inputBuffer[outPtr++]);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +(_inputPtr  >>  _inputEnd?  1  :  _inputBuffer[outPtr++]);	  outBuf[outPtr++]    =    '0'    +(_inputPtr    >=    _inputEnd?    1    :    _inputBuffer[outPtr++]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
18	[BUG]  [BUGGY]  outBuf[_inputPtr++]  =  CharacterEscapes.UNEXPECTED;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[_inputPtr++]  =  CharacterEscapes.UNEXPECTED;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[_inputPtr++]  =  CharacterEscapes.UNEXPECTED;	  outBuf[outPtr++]    =    CharacterEscapes.UNEXPECTED;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
19	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNDEFINED;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNDEFINED;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  CharacterEscapes.UNDEFINED;	  outBuf[outPtr++]    =    CharacterEscapes.UNEXPECTED;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
20	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +  c  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +  c  +  1;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +  c  +  1;	  outBuf[outPtr++]    =    '0'    +    c;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +  intLen;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +  intLen;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +  intLen;	  outBuf[outPtr++]    =    '0'    +    c;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  String  c  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  String  c  =  _textBuffer.finishCurrentSegment();  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	String  c  =  _textBuffer.finishCurrentSegment();	  char    c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  Char  c  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  Char  c  =  _textBuffer.finishCurrentSegment();  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	Char  c  =  _textBuffer.finishCurrentSegment();	  char    c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  >>  _inputEnd)?  -1  :  _inputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  >>  _inputEnd)?  -1  :  _inputBuffer[outPtr++];  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +(_inputPtr  >>  _inputEnd)?  -1  :  _inputBuffer[outPtr++];	  outBuf[outPtr++]    =    '0'    +(_inputPtr    >=    _inputEnd)?    -1    :    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  <  _inputEnd)?  -1  :  _inputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  <  _inputEnd)?  -1  :  _inputBuffer[outPtr++];  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +(_inputPtr  <  _inputEnd)?  -1  :  _inputBuffer[outPtr++];	  outBuf[outPtr++]    =    '0'    +(_inputPtr    >=    _inputEnd)?    -1    :    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
26	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  >=  _inputEnd)?  1  :  _inputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  >=  _inputEnd)?  1  :  _inputBuffer[outPtr++];  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +(_inputPtr  >=  _inputEnd)?  1  :  _inputBuffer[outPtr++];	  outBuf[outPtr++]    =    '0'    +(_inputPtr    >=    _inputEnd)?    -1    :    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
27	[BUG]  [BUGGY]  outBuf[_inputPtr++]  =  ':';  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[_inputPtr++]  =  ':';  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[_inputPtr++]  =  ':';	  outBuf[_inputPtr++]    =    ';';    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  c  =  _textBuffer.finishCurrentSegment()  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  _textBuffer.finishCurrentSegment()  +  1;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  _textBuffer.finishCurrentSegment()  +  1;	  c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  c  =  _textBuffer.finishCurrentSegment(outPtr);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  _textBuffer.finishCurrentSegment(outPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  _textBuffer.finishCurrentSegment(outPtr);	  c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  _inputEnd);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  _inputEnd);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  _inputEnd);	  outBuf[outPtr++]    =    Character.toUpperCase(_inputBuffer,    c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
31	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  _inputEnd,  c);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  _inputEnd,  c);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  _inputEnd,  c);	  outBuf[outPtr++]    =    Character.toUpperCase(_inputBuffer,    c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
32	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;	  outBuf[outPtr++]    =    neg;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  JsonToken.END_OBJECT;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  JsonToken.END_OBJECT;	  outBuf[outPtr++]    =    neg;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '+';';  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '+';';  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '+';';	  outBuf[outPtr++]    =    c;';    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
35	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  endPtr  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  endPtr  +  1);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c,  endPtr  +  1);	  outBuf[outPtr++]    =    Character.toUpperCase(c,    endPtr);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
36	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  c  =  CHAR_NULL;  eof  =  true;  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  c  =  CHAR_NULL;  eof  =  true;  break  intLen;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  c  =  CHAR_NULL;  eof  =  true;  break  intLen;  }	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    true;    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  c  =  CHAR_NULL;  eof  =  true;  break  intLen;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  CHAR_NULL;  eof  =  true;  break  intLen;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  CHAR_NULL;  eof  =  true;  break  intLen;	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    true;    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c)+  2;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c)+  2;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c)+  2;	  outBuf[outPtr++]    =    Character.toUpperCase(c)+    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
39	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c)+  4;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c)+  4;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c)+  4;	  outBuf[outPtr++]    =    Character.toUpperCase(c)+    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
40	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    true;    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  CHAR_NULL;  eof  =  true;  break  int_loop;	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    true;    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
42	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  break  int_loop;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(_inputPtr  >=  _inputEnd)  {  if(c  ==  '.')  {  break  int_loop;  }	  if(c    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
43	[BUG]  [BUGGY]  if(eof)  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(eof)  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(eof)  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }	  if(c    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
44	[BUG]  [BUGGY]  if(eof)  {  if(c  ==  '.')  {  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(eof)  {  if(c  ==  '.')  {  break  int_loop;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(eof)  {  if(c  ==  '.')  {  break  int_loop;  }	  if(c    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
45	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  fractLen);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  fractLen);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c,  fractLen);	  outBuf[outPtr++]    =    Character.toUpperCase(c,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  startPtr  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  startPtr  +  1);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c,  startPtr  +  1);	  outBuf[outPtr++]    =    Character.toUpperCase(c,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  off);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  off);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c,  off);	  outBuf[outPtr++]    =    Character.toUpperCase(c,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
48	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  _inputBuffer);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  _inputBuffer);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c,  _inputBuffer);	  outBuf[outPtr++]    =    Character.toLowerCase(_inputBuffer,    c);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
49	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  c,  eof);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  c,  eof);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  c,  eof);	  outBuf[outPtr++]    =    Character.toLowerCase(_inputBuffer,    c);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
50	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  _inputEnd,  c);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  _inputEnd,  c);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  _inputEnd,  c);	  outBuf[outPtr++]    =    Character.toLowerCase(_inputBuffer,    c);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
51	[BUG]  [BUGGY]  outBuf[_inputPtr++]  =  '0'  ||  c  <  =  '9';  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[_inputPtr++]  =  '0'  ||  c  <  =  '9';  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[_inputPtr++]  =  '0'  ||  c  <  =  '9';	  outBuf[_inputPtr++]    =    '0';    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
52	[BUG]  [BUGGY]  _inputBuffer[_inputPtr++]  =  '0';  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  _inputBuffer[_inputPtr++]  =  '0';  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	_inputBuffer[_inputPtr++]  =  '0';	  outBuf[_inputPtr++]    =    '0';    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  fractLen);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  fractLen);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c,  fractLen);	  outBuf[outPtr++]    =    Character.toLowerCase(c,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  off);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  off);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c,  off);	  outBuf[outPtr++]    =    Character.toLowerCase(c,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  startPtr  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  startPtr  +  1);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c,  startPtr  +  1);	  outBuf[outPtr++]    =    Character.toLowerCase(c,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(outBuf.length);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  _textBuffer.setCurrentLength(outBuf.length);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	_textBuffer.setCurrentLength(outBuf.length);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
57	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(outPtr  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  _textBuffer.setCurrentLength(outPtr  +  1);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	_textBuffer.setCurrentLength(outPtr  +  1);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
58	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(intLen);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  _textBuffer.setCurrentLength(intLen);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	_textBuffer.setCurrentLength(intLen);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
59	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(outBuf,  startPtr);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  _textBuffer.setCurrentLength(outBuf,  startPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	_textBuffer.setCurrentLength(outBuf,  startPtr);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
60	[BUG]  [BUGGY]  c  =  _inputBuffer[_inputPtr++];  eof  =  true;  break  int_loop;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  _inputBuffer[_inputPtr++];  eof  =  true;  break  int_loop;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  _inputBuffer[_inputPtr++];  eof  =  true;  break  int_loop;	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    true;    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  c  =  '0';  eof  =  true;  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  c  =  '0';  eof  =  true;  break  int_loop;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(_inputPtr  >=  _inputEnd)  {  c  =  '0';  eof  =  true;  break  int_loop;  }	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    true;    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  char  c  =  _textBuffer.finishCurrentSegment()  +  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  char  c  =  _textBuffer.finishCurrentSegment()  +  1;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	char  c  =  _textBuffer.finishCurrentSegment()  +  1;	  char    c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  c  =  _inputBuffer[_inputPtr++];  eof  =  true;  break  intLen;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  _inputBuffer[_inputPtr++];  eof  =  true;  break  intLen;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  _inputBuffer[_inputPtr++];  eof  =  true;  break  intLen;	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    true;    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  c  =  '0';  eof  =  true;  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  c  =  '0';  eof  =  true;  break  intLen;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(_inputPtr  >=  _inputEnd)  {  c  =  '0';  eof  =  true;  break  intLen;  }	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    true;    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
65	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  outPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  outPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c,  _inputBuffer,  outPtr);	  outBuf[outPtr++]    =    Character.toUpperCase(c,    _inputBuffer);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
66	[BUG]  [BUGGY]  outBuf  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf  =  _textBuffer.finishCurrentSegment();  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf  =  _textBuffer.finishCurrentSegment();	  outBuf[_inputPtr++]    =    ';';    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  outputPtr);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c,  outputPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c,  outputPtr);	  outBuf[outPtr++]    =    Character.toLowerCase(c,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
68	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(outBuf,  outPtr);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  _textBuffer.setCurrentLength(outBuf,  outPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	_textBuffer.setCurrentLength(outBuf,  outPtr);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
69	[BUG]  [BUGGY]  c  =  _textBuffer.finishCurrentSegment()  +  outPtr;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  _textBuffer.finishCurrentSegment()  +  outPtr;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  _textBuffer.finishCurrentSegment()  +  outPtr;	  c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
70	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  _inputPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  _inputPtr);	  outBuf[outPtr++]    =    Character.toUpperCase(_inputBuffer,    c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
71	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  <  =  _inputEnd)?  -1  :  _inputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  <  =  _inputEnd)?  -1  :  _inputBuffer[outPtr++];  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +(_inputPtr  <  =  _inputEnd)?  -1  :  _inputBuffer[outPtr++];	  outBuf[outPtr++]    =    '0'    +(_inputPtr    >=    _inputEnd)?    -1    :    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
72	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  >  _inputEnd)?  -1  :  _inputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  >  _inputEnd)?  -1  :  _inputBuffer[outPtr++];  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +(_inputPtr  >  _inputEnd)?  -1  :  _inputBuffer[outPtr++];	  outBuf[outPtr++]    =    '0'    +(_inputPtr    >=    _inputEnd)?    -1    :    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
73	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  _inputEnd);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  _inputEnd);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  _inputEnd);	  outBuf[outPtr++]    =    Character.toLowerCase(_inputBuffer,    c);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
74	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  _inputPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(_inputBuffer,  _inputPtr);	  outBuf[outPtr++]    =    Character.toLowerCase(_inputBuffer,    c);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
75	[BUG]  [BUGGY]  char[]  outBuf  =  _textBuffer.endCurrentSegment();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  char[]  outBuf  =  _textBuffer.endCurrentSegment();  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	char[]  outBuf  =  _textBuffer.endCurrentSegment();	  char[]    outBuf    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '';  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '';  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '';	  outBuf[outPtr++]    =    c;';    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
77	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  outputPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c,  outputPtr);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c,  outputPtr);	  outBuf[outPtr++]    =    Character.toUpperCase(c,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
78	[BUG]  [BUGGY]  outBuf[_inputPtr++]  =  '0'  ||  _inputPtr  >=  _inputEnd;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[_inputPtr++]  =  '0'  ||  _inputPtr  >=  _inputEnd;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[_inputPtr++]  =  '0'  ||  _inputPtr  >=  _inputEnd;	  outBuf[_inputPtr++]    =    '0';    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
79	[BUG]  [BUGGY]  if(!eof)  {  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(!eof)  {  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(!eof)  {  if(c  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }	  if(c    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
80	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  'e')  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(c  ==  '.'  ||  c  ==  'e')  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(c  ==  '.'  ||  c  ==  'e')  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }	  if(c    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
81	[BUG]  [BUGGY]  c  =  _inputBuffer[_inputPtr++];  eof  =  false;  break  int_loop;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  _inputBuffer[_inputPtr++];  eof  =  false;  break  int_loop;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  _inputBuffer[_inputPtr++];  eof  =  false;  break  int_loop;	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    false;    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
82	[BUG]  [BUGGY]  c  =  CHAR_NULL;  eof  =  false;  break  int_loop;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  CHAR_NULL;  eof  =  false;  break  int_loop;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  CHAR_NULL;  eof  =  false;  break  int_loop;	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    false;    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
83	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  ==  _inputEnd?  1  :  _inputBuffer[outPtr++]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  ==  _inputEnd?  1  :  _inputBuffer[outPtr++]);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +(_inputPtr  ==  _inputEnd?  1  :  _inputBuffer[outPtr++]);	  outBuf[outPtr++]    =    '0'    +(_inputPtr    >=    _inputEnd?    1    :    _inputBuffer[outPtr++]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
84	[BUG]  [BUGGY]  outBuf[outPtr++]  =  ':'  +  c;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  ':'  +  c;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  ':'  +  c;	  outBuf[outPtr++]    =    ':';    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
85	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c)/  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c)/  1;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c)/  1;	  outBuf[outPtr++]    =    Character.toLowerCase(c)+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
86	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c)+  fractLen;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c)+  fractLen;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toLowerCase(c)+  fractLen;	  outBuf[outPtr++]    =    Character.toLowerCase(c)+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
87	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c)/  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(c)/  1;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(c)/  1;	  outBuf[outPtr++]    =    Character.toUpperCase(c)+    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
88	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  >  _inputEnd?  1  :  _inputBuffer[outPtr++]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  >  _inputEnd?  1  :  _inputBuffer[outPtr++]);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +(_inputPtr  >  _inputEnd?  1  :  _inputBuffer[outPtr++]);	  outBuf[outPtr++]    =    '0'    +(_inputPtr    >=    _inputEnd?    1    :    _inputBuffer[outPtr++]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
89	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  c,  _inputEnd);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  c,  _inputEnd);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  Character.toUpperCase(_inputBuffer,  c,  _inputEnd);	  outBuf[outPtr++]    =    Character.toUpperCase(_inputBuffer,    c);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
90	[BUG]  [BUGGY]  outBuf[_inputPtr++]  =  '.';  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[_inputPtr++]  =  '.';  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[_inputPtr++]  =  '.';	  outBuf[_inputPtr++]    =    'n';    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
91	[BUG]  [BUGGY]  eof  =  true;  break  int_loop;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  eof  =  true;  break  int_loop;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	eof  =  true;  break  int_loop;	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    true;    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
92	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.EMPTY;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.EMPTY;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  CharacterEscapes.EMPTY;	  outBuf[outPtr++]    =    neg;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
93	[BUG]  [BUGGY]  eof  =  true;  break  intLen;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  eof  =  true;  break  intLen;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	eof  =  true;  break  intLen;	  if(_inputPtr    >=    _inputEnd)    {    c    =    CHAR_NULL;    eof    =    true;    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
94	[BUG]  [BUGGY]  outBuf[_inputPtr++]  =  '';  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[_inputPtr++]  =  '';  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[_inputPtr++]  =  '';	  outBuf[_inputPtr++]    =    ';';    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
95	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNKNOWN;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNKNOWN;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  CharacterEscapes.UNKNOWN;	  outBuf[outPtr++]    =    CharacterEscapes.UNEXPECTED;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
96	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  +  1)?  -1  :  _inputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +(_inputPtr  +  1)?  -1  :  _inputBuffer[outPtr++];  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +(_inputPtr  +  1)?  -1  :  _inputBuffer[outPtr++];	  outBuf[outPtr++]    =    '0'    +(_inputPtr    >=    _inputEnd)?    -1    :    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
97	[BUG]  [BUGGY]  c  =  _textBuffer.startCurrentSegment();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  _textBuffer.startCurrentSegment();  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  _textBuffer.startCurrentSegment();	  c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
98	[BUG]  [BUGGY]  c  =  _textBuffer.getCurrentSegment();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  c  =  _textBuffer.getCurrentSegment();  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	c  =  _textBuffer.getCurrentSegment();	  c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
99	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '';';  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '';';  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '';';	  outBuf[outPtr++]    =    c;';    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
100	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0';';  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0';';  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0';';	  outBuf[outPtr++]    =    c;';    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
101	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(outPtr++);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  _textBuffer.setCurrentLength(outPtr++);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	_textBuffer.setCurrentLength(outPtr++);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
102	[BUG]  [BUGGY]  _textBuffer.setCurrentLength(outPtr  +  1,  outBuf.length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  _textBuffer.setCurrentLength(outPtr  +  1,  outBuf.length);  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	_textBuffer.setCurrentLength(outPtr  +  1,  outBuf.length);	  _textBuffer.setCurrentLength(outPtr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
103	[BUG]  [BUGGY]  outBuf[outPtr++]  =  '0'  +  len;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  outBuf[outPtr++]  =  '0'  +  len;  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	outBuf[outPtr++]  =  '0'  +  len;	  outBuf[outPtr++]    =    '0'    +    c;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
104	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }      [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }  [BUGGY]      if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  c  =  _inputBuffer[_inputPtr++];  }  if  (intLen  ==  0)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	if(c  ==  '.'  ||  c  ==  ',')  {  if(_inputPtr  >=  _inputEnd)  {  break  int_loop;  }	  if(c    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
