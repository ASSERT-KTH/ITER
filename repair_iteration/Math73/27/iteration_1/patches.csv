bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(dx  ==  x1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  if(dx  ==  x1)  {  [BUGGY]      p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	if(dx  ==  x1)  {	  if(x0    ==    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  if(x0!=  x1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  if(x0!=  x1)  {  [BUGGY]      p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	if(x0!=  x1)  {	  if(x0    ==    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  if(dx  ==  x0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  if(dx  ==  x0)  {  [BUGGY]      p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	if(dx  ==  x0)  {	  if(x1    ==    x0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  if(x1  <  =  x0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  if(x1  <  =  x0)  {  [BUGGY]      p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	if(x1  <  =  x0)  {	  if(x1    ==    x0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  double  r2  =  dx  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  dx  *  r3  +  1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  dx  *  r3  +  1;	      double    r2    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
6	[BUG]  [BUGGY]  double  r2  =  dx  *  r1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  dx  *  r1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  dx  *  r1;	      double    r2    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
7	[BUG]  [BUGGY]  double  r2  =  dx  *  r3,  p;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  dx  *  r3,  p;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  dx  *  r3,  p;	      double    r2    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  double  x0  =  dx  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  x0  =  dx  *  r3  +  1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  x0  =  dx  *  r3  +  1;	      double    x0    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  double  x0  =  dx  *  r1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  x0  =  dx  *  r1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  x0  =  dx  *  r1;	      double    x0    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  double  r3  =  dx  *  r3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r3  =  dx  *  r3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r3  =  dx  *  r3;	      double    x0    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  double  p  =  dx  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p  =  dx  *  r3  +  1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p  =  dx  *  r3  +  1;	      double    p    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  double  p  =  dx  *  r1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p  =  dx  *  r1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p  =  dx  *  r1;	      double    p    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  double  p  =  dx  *  r2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p  =  dx  *  r2;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p  =  dx  *  r2;	      double    p    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  double  p1  =  1.0  -  dx  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p1  =  1.0  -  dx  *  r3  +  1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p1  =  1.0  -  dx  *  r3  +  1;	      double    p1    =    1.0    -    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  double  p1  =  1.0  -  dx  *  r2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p1  =  1.0  -  dx  *  r2;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p1  =  1.0  -  dx  *  r2;	      double    p1    =    1.0    -    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  double  p1  =  1.0  -  r3  *  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p1  =  1.0  -  r3  *  dx;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p1  =  1.0  -  r3  *  dx;	      double    p1    =    1.0    -    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  p  =  dx  *  r3;  p1  =  1.0  -  r3;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  p  =  dx  *  r3;  p1  =  1.0  -  r3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	p  =  dx  *  r3;  p1  =  1.0  -  r3;	      if(x0    ==    x1)    {    p    =    dx    *    r3;    p1    =    1.0    -    r3;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  p  =  dx  *  r3;  p1  =  1.0  /  r3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  p  =  dx  *  r3;  p1  =  1.0  /  r3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	p  =  dx  *  r3;  p1  =  1.0  /  r3;	      if(x0    ==    x1)    {    p    =    dx    *    r3;    p1    =    1.0    -    r3;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  p  =  dx  *  r2;  p1  =  1.0  -  r3;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  p  =  dx  *  r2;  p1  =  1.0  -  r3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	p  =  dx  *  r2;  p1  =  1.0  -  r3;	      if(x0    ==    x1)    {    p    =    dx    *    r3;    p1    =    1.0    -    r3;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  if(x1  ==  x1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  if(x1  ==  x1)  {  [BUGGY]      p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	if(x1  ==  x1)  {	  if(x1    ==    x2)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
21	[BUG]  [BUGGY]  double  x0  =  oldDelta  *  x1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  x0  =  oldDelta  *  x1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  x0  =  oldDelta  *  x1;	      double    x0    =    x1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  double  x0  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  x0  =  dx  *  oldDelta;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  x0  =  dx  *  oldDelta;	      double    x0    =    x1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  double  p1  =  x1  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p1  =  x1  *  oldDelta;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p1  =  x1  *  oldDelta;	      double    x0    =    x1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  double  x0  =  delta  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  x0  =  delta  *  oldDelta;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  x0  =  delta  *  oldDelta;	      double    x0    =    x1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  double  r2  =  oldDelta  /  y0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  oldDelta  /  y0;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  oldDelta  /  y0;	      double    r2    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  double  r2  =  y1  /  y3;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  y1  /  y3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  y1  /  y3;	      double    r2    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  double  x2  =  dx  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  x2  =  dx  *  r3  +  1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  x2  =  dx  *  r3  +  1;	      double    x2    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  double  p2  =  dx  *  r3;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p2  =  dx  *  r3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p2  =  dx  *  r3;	      double    x2    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  y0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r3  =  oldDelta  /  y0;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r3  =  oldDelta  /  y0;	      double    r3    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  double  r3  =  y0  /  y1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r3  =  y0  /  y1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r3  =  y0  /  y1;	      double    r3    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  double  r3  =  y1  /  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r3  =  y1  /  y2;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r3  =  y1  /  y2;	      double    r3    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  double  r2  =  oldDelta  /  y1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  oldDelta  /  y1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  oldDelta  /  y1;	      double    r2    =    y0    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  double  r2  =  y3  /  y1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  y3  /  y1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  y3  /  y1;	      double    r2    =    y0    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  double  p1  =  dx  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p1  =  dx  *  r3  +  1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p1  =  dx  *  r3  +  1;	      double    p1    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  double  p1  =  dx  *  r2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p1  =  dx  *  r2;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p1  =  dx  *  r2;	      double    p1    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  double  p1  =  dx  *  r3  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p1  =  dx  *  r3  +  2;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p1  =  dx  *  r3  +  2;	      double    p1    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  double  x0  =  oldDelta  *  r3;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  x0  =  oldDelta  *  r3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  x0  =  oldDelta  *  r3;	      double    x0    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  if(x1  ==  x0)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  if(x1  ==  x0)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	if(x1  ==  x0)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }	      if(x0    ==    x1)    {    p    =    dx    *    r3;    p1    =    1.0    -    r3;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  double  r2  =  oldDelta  *  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  oldDelta  *  dx;  [BUGGY]      p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  oldDelta  *  dx;	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  r3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p1  =  oldDelta  *  r3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p1  =  oldDelta  *  r3;	      double    p1    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  double  r3  =  y1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r3  =  y1  /  oldDelta;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r3  =  y1  /  oldDelta;	      double    r3    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  double  x2  =  dx  *  r1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  x2  =  dx  *  r1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  x2  =  dx  *  r1;	      double    x2    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  double  p  =  oldDelta  *  r3;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p  =  oldDelta  *  r3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p  =  oldDelta  *  r3;	      double    p    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  double  r2  =  y0  /  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  y0  /  y2;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  y0  /  y2;	      double    r2    =    y0    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  if(x0  ==  oldDelta)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  if(x0  ==  oldDelta)  {  [BUGGY]      p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	if(x0  ==  oldDelta)  {	  if(x0    ==    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
46	[BUG]  [BUGGY]  double  r2  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  dx  *  oldDelta;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  dx  *  oldDelta;	      double    r2    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
47	[BUG]  [BUGGY]  double  r2  =  y1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  y1  /  oldDelta;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  y1  /  oldDelta;	      double    r2    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  if(x1  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  if(x1  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	if(x1  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }	      if(x0    ==    x2)    {    p    =    dx    *    r3;    p1    =    1.0    -    r3;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  double  xx0  =  oldDelta  *  x1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  xx0  =  oldDelta  *  x1;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  xx0  =  oldDelta  *  x1;	      double    x0    =    x1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  double  x0  =  oldDelta  *  x2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  x0  =  oldDelta  *  x2;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  x0  =  oldDelta  *  x2;	      double    x0    =    x1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  if(x0  ==  x3)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  if(x0  ==  x3)  {  [BUGGY]      p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	if(x0  ==  x3)  {	  if(x0    ==    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  double  r2  =  oldDelta  *  r3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  oldDelta  *  r3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  oldDelta  *  r3;	      double    r2    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  p1  =  1.0  -  r3;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  p1  =  1.0  -  r3;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	p1  =  1.0  -  r3;	      if(x0    ==    x2)    {    p    =    dx    *    r3;    p1    =    1.0    -    r3;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  double  p  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p  =  dx  *  oldDelta;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p  =  dx  *  oldDelta;	      double    p    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  double  r2  =  oldDelta  *  x0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  oldDelta  *  x0;  [BUGGY]      p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  oldDelta  *  x0;	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  double  p1  =  1.0  -  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  p1  =  1.0  -  dx  *  oldDelta;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  p1  =  1.0  -  dx  *  oldDelta;	      double    p1    =    1.0    -    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  double  r2  =  y0  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;        [BUGGY]  double  r2  =  y0  /  oldDelta;  [BUGGY]    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	265	265	1	replace	double  r2  =  y0  /  oldDelta;	      double    r2    =    y0    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
