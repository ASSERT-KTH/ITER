bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  delta  =  0.5  *  oldDelta  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  delta  =  0.5  *  oldDelta  -  Math.abs(tolerance  *  p1);  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  delta  =  0.5  *  oldDelta  -  Math.abs(tolerance  *  p1);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
2	[BUG]  [BUGGY]    double  delta  =  0.5  *  dx;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  delta  =  0.5  *  dx;  oldDelta  =  p  /  p1;  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  delta  =  0.5  *  dx;  oldDelta  =  p  /  p1;		non-compiled	[CE]  illegal  start  of  expression	30	None	add
3	[BUG]  [BUGGY]    double  delta  =  tolerance  /  p1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  delta  =  tolerance  /  p1;  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  delta  =  tolerance  /  p1;		non-compiled	[CE]  illegal  start  of  expression	30	None	add
4	[BUG]  [BUGGY]    double  delta  =  0.5  *  dx;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  delta  =  0.5  *  dx;  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  delta  =  0.5  *  dx;		non-compiled	[CE]  illegal  start  of  expression	30	None	add
5	[BUG]  [BUGGY]    double  delta  =  0.5  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  delta  =  0.5  *  oldDelta;  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  delta  =  0.5  *  oldDelta;		non-compiled	[CE]  illegal  start  of  expression	30	None	add
6	[BUG]  [BUGGY]  delta  =  0.5  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]  delta  =  0.5  *  oldDelta;  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  oldDelta;	delta  =  0.5  *  dx;  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
7	[BUG]  [BUGGY]  delta  =  0.5  *  p;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]  delta  =  0.5  *  p;  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p;	delta  =  0.5  *  dx;  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
8	[BUG]  [BUGGY]  delta  =  0.5  *  p1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]  delta  =  0.5  *  p1;  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p1;	delta  =  0.5  *  dx;  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
9	[BUG]  [BUGGY]  delta  =  0.5  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]  delta  =  0.5  *  dx  +  1;  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  dx  +  1;	delta  =  0.5  *  dx;  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
10	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
11	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  p  =  tolerance  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  p  =  tolerance  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
12	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
13	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1.doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  p  =  tolerance  *  p1.doubleValue();  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  p  =  tolerance  *  p1.doubleValue();		non-compiled	[CE]  illegal  start  of  expression	30	None	add
14	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1);  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
15	[BUG]  [BUGGY]    double  p  =  tolerance  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  p  =  tolerance  -  Math.abs(tolerance  *  p1);  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  p  =  tolerance  -  Math.abs(tolerance  *  p1);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
16	[BUG]  [BUGGY]    double  p  =  tolerance  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  p  =  tolerance  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  p  =  tolerance  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
17	[BUG]  [BUGGY]    double  p  =  tolerance  -  Math.sqrt(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  p  =  tolerance  -  Math.sqrt(tolerance  *  p1);  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  p  =  tolerance  -  Math.sqrt(tolerance  *  p1);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
18	[BUG]  [BUGGY]    double  p  =  tolerance  -  Math.abs(tolerance  *  p1);  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  p  =  tolerance  -  Math.abs(tolerance  *  p1);  oldDelta  =  p  /  p1;  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  p  =  tolerance  -  Math.abs(tolerance  *  p1);  oldDelta  =  p  /  p1;		non-compiled	[CE]  illegal  start  of  expression	30	None	add
19	[BUG]  [BUGGY]    double  p  =  tolerance  -  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]    double  p  =  tolerance  -  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	    double  p  =  tolerance  -  Math.abs(0.5  *  oldDelta  *  p1);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
20	[BUG]  [BUGGY]  delta  =  0.5  *  dx  /  p1;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {      [BUGGY]  delta  =  0.5  *  dx  /  p1;  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  dx  /  p1;	delta  =  0.5  *  dx;  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
