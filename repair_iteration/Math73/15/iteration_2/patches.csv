bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  delta  =  0.5  *  oldDelta  *  p1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  oldDelta  *  p1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  oldDelta  *  p1;	  delta    =    0.5    *    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  delta  =  0.5  *  p  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p  /  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p  /  oldDelta;	  delta    =    0.5    *    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  delta  =  1.5  *  oldDelta  /  p1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  oldDelta  /  p1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  oldDelta  /  p1;	  delta    =    0.5    *    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  double  delta  =  0.5  *  oldDelta  *  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  oldDelta  *  p1  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  oldDelta  *  p1  +  1;	  double    delta    =    0.5    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
5	[BUG]  [BUGGY]  double  delta  =  1.5  *  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  oldDelta  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  oldDelta  +  1;	  double    delta    =    0.5    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]  double  p  =  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  double  p  =  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  double  p  =  p1  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  double  p  =  oldDelta  *  Math.abs(0.5  *  dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  Math.abs(0.5  *  dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  Math.abs(0.5  *  dx  *  p1);	  double    p    =    oldDelta    -    Math.abs(0.5    *    dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  double  p  =  oldDelta  /  Math.abs(0.5  *  dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  /  Math.abs(0.5  *  dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  /  Math.abs(0.5  *  dx  *  p1);	  double    p    =    oldDelta    -    Math.abs(0.5    *    dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    -    Math.abs(0.5    *    dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1.doubleValue()  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1.doubleValue()  +  1;	  double    p    =    oldDelta    *    p1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
13	[BUG]  [BUGGY]  double  p  =  p  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  oldDelta.doubleValue();  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  oldDelta.doubleValue();	  double    p    =    oldDelta    *    p1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
14	[BUG]  [BUGGY]  double  p  =  dx  *  p1.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  dx  *  p1.doubleValue();  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  dx  *  p1.doubleValue();	  double    p    =    oldDelta    *    p1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
15	[BUG]  [BUGGY]  double  p  =  p  /  Math.sqrt(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  /  Math.sqrt(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  /  Math.sqrt(tolerance  *  p1);	  double    p    =    p    -    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
16	[BUG]  [BUGGY]  double  p  =  p  -  Math.sqrt(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.sqrt(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.sqrt(tolerance  *  p1)+  1;	  double    p    =    p    -    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
17	[BUG]  [BUGGY]  oldDelta  =  delta  /  p1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  oldDelta  =  delta  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	oldDelta  =  delta  /  p1;	  oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
18	[BUG]  [BUGGY]  oldDelta  =  p  /  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  oldDelta  =  p  /  p1  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	oldDelta  =  p  /  p1  +  1;	  oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
19	[BUG]  [BUGGY]  oldDelta  =  p  /  p1  +  tolerance;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  oldDelta  =  p  /  p1  +  tolerance;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	oldDelta  =  p  /  p1  +  tolerance;	  oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
20	[BUG]  [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p1    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
21	[BUG]  [BUGGY]  double  p  =  tolerance  *  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  *  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  *  Math.abs(tolerance  *  p1);	  double    p    =    delta    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
22	[BUG]  [BUGGY]  double  p  =  0.5  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  0.5  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  0.5  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    dx    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
23	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  dx  *  p1);	  double    p    =    p    *    dx    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
24	[BUG]  [BUGGY]  delta  =  0.5  *  oldDelta  *  p1  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  oldDelta  *  p1  +  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  oldDelta  *  p1  +  1;	  delta    =    0.5    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  delta  =  1.5  *  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  oldDelta  +  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  oldDelta  +  1;	  delta    =    0.5    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  double  delta  =  p  /  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  p  /  p1  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  p  /  p1  +  1;	  double    delta    =    tolerance    /    p1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
27	[BUG]  [BUGGY]  double  delta  =  oldDelta  /  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  oldDelta  /  p1  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  oldDelta  /  p1  +  1;	  double    delta    =    tolerance    /    p1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
28	[BUG]  [BUGGY]  double  delta  =  dx  /  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  dx  /  p1  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  dx  /  p1  +  1;	  double    delta    =    tolerance    /    p1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
29	[BUG]  [BUGGY]  double  delta  =  1  *  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1  *  dx;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1  *  dx;	  double    delta    =    1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
30	[BUG]  [BUGGY]  double  delta  =  1  *  oldDelta  /  p1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1  *  oldDelta  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1  *  oldDelta  /  p1;	  double    delta    =    1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
31	[BUG]  [BUGGY]  double  delta  =  1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1  /  oldDelta;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1  /  oldDelta;	  double    delta    =    1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
32	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  delta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  delta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
33	[BUG]  [BUGGY]  double  p  =  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
34	[BUG]  [BUGGY]  delta  =  0.5  *  p  *  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p  *  dx;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p  *  dx;	  delta    =    0.5    *    dx    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
35	[BUG]  [BUGGY]  delta  =  0.5  *  dx  *  oldDelta  *  p1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  dx  *  oldDelta  *  p1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  dx  *  oldDelta  *  p1;	  delta    =    0.5    *    dx    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
36	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);	  double    p    =    delta    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
37	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  dx  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  dx  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
38	[BUG]  [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
39	[BUG]  [BUGGY]  double  p  =  0.5  *  dx  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  0.5  *  dx  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  0.5  *  dx  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
40	[BUG]  [BUGGY]  double  p  =  p  -  Math.abs(tolerance  *  p1)+  1;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.abs(tolerance  *  p1)+  1;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.abs(tolerance  *  p1)+  1;  oldDelta  =  p  /  p1;	  double    p    =    p    -    Math.abs(tolerance    *    p1);    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
41	[BUG]  [BUGGY]  double  p  =  p  *  p1.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  p1.doubleValue()  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  p1.doubleValue()  +  1;	  double    p    =    p    *    p1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
42	[BUG]  [BUGGY]  double  p  =  p  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1));  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1));	  double    p    =    tolerance    -    Math.sqrt(Math.pow(10,    oldDelta    *    p1));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
43	[BUG]  [BUGGY]  double  p  =  tolerance  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1),  delta);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1),  delta);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1),  delta);	  double    p    =    tolerance    -    Math.sqrt(Math.pow(10,    oldDelta    *    p1));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
44	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.sqrt(Math.pow(10,  tolerance  *  p1));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.sqrt(Math.pow(10,  tolerance  *  p1));  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.sqrt(Math.pow(10,  tolerance  *  p1));	  double    p    =    tolerance    -    Math.sqrt(Math.pow(10,    oldDelta    *    p1));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
45	[BUG]  [BUGGY]  double  p  =  delta  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  delta  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1));  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  delta  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1));	  double    p    =    tolerance    -    Math.sqrt(Math.pow(10,    oldDelta    *    p1));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
46	[BUG]  [BUGGY]  double  p  =  dx  *  tolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  dx  *  tolerance.doubleValue();  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  dx  *  tolerance.doubleValue();	  double    p    =    p    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
47	[BUG]  [BUGGY]  double  p  =  p  *  dx.doubleValue();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  dx.doubleValue();  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  dx.doubleValue();	  double    p    =    p    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
48	[BUG]  [BUGGY]  double  delta  =  0.5  *  p  *  dx  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p  *  dx  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p  *  dx  -  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    dx    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
49	[BUG]  [BUGGY]  double  delta  =  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    dx    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
50	[BUG]  [BUGGY]  double  delta  =  0.5  *  p  -  Math.abs(tolerance  *  dx);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p  -  Math.abs(tolerance  *  dx);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p  -  Math.abs(tolerance  *  dx);	  double    delta    =    0.5    *    dx    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
51	[BUG]  [BUGGY]  delta  =  0.5  *  oldDelta  /  dx;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  oldDelta  /  dx;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  oldDelta  /  dx;	  delta    =    0.5    *    p    /    dx;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
52	[BUG]  [BUGGY]  double  delta  =  p  /  dx;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  p  /  dx;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  p  /  dx;	  double    delta    =    dx    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
53	[BUG]  [BUGGY]  double  delta  =  dx  *  p1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  dx  *  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  dx  *  p1;	  double    delta    =    dx    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
54	[BUG]  [BUGGY]  delta  =  1.5  *  p  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  p  +  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  p  +  1;	  delta    =    0.5    *    p    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
55	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(dx  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
56	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
57	[BUG]  [BUGGY]  delta  =  1.5  *  dx  *  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  dx  *  p1  +  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  dx  *  p1  +  1;	  delta    =    1.5    *    dx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
58	[BUG]  [BUGGY]  double  delta  =  0.5  *  oldDelta  *  p1  -  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  oldDelta  *  p1  -  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  oldDelta  *  p1  -  Math.abs(0.5  *  oldDelta  *  p1);	  double    delta    =    0.5    *    oldDelta    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
59	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  *  oldDelta  *  p1  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  *  oldDelta  *  p1  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  *  oldDelta  *  p1  -  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    oldDelta    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
60	[BUG]  [BUGGY]  double  delta  =  1.5  *  oldDelta  *  p1  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  oldDelta  *  p1  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  oldDelta  *  p1  -  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    oldDelta    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
61	[BUG]  [BUGGY]  double  delta  =  0.5  *  p  -  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p  -  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p  -  Math.abs(dx  *  p1);	  double    delta    =    0.5    *    p    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
62	[BUG]  [BUGGY]  double  p  =  p  /  Math.abs(0.5  *  oldDelta  *  tolerance);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  /  Math.abs(0.5  *  oldDelta  *  tolerance);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  /  Math.abs(0.5  *  oldDelta  *  tolerance);	  double    p    =    p    -    Math.abs(0.5    *    oldDelta    *    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
63	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);	  double    p    =    delta    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
64	[BUG]  [BUGGY]  double  p  =  p  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  double  p  =  p  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  double  p  =  p  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    p    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
67	[BUG]  [BUGGY]  double  p  =  p  *  dx  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  dx  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  dx  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
68	[BUG]  [BUGGY]  delta  =  0.5  *  oldDelta  /  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  oldDelta  /  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  oldDelta  /  1;	  delta    =    0.5    *    dx    /    1;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
69	[BUG]  [BUGGY]  delta  =  0.5  *  p  /  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p  /  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p  /  1;	  delta    =    0.5    *    dx    /    1;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
70	[BUG]  [BUGGY]  delta  =  0.5  *  dx  *  p1  /  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  dx  *  p1  /  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  dx  *  p1  /  1;	  delta    =    0.5    *    dx    /    1;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
71	[BUG]  [BUGGY]  double  p  =  oldDelta  *  tolerance  *  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  tolerance  *  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  tolerance  *  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    tolerance    *    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
72	[BUG]  [BUGGY]  double  p  =  p  *  Math.abs(0.5  *  oldDelta  *  tolerance);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  Math.abs(0.5  *  oldDelta  *  tolerance);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  Math.abs(0.5  *  oldDelta  *  tolerance);	  double    p    =    tolerance    *    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
73	[BUG]  [BUGGY]  double  p  =  oldDelta  *  tolerance  *  Math.abs(0.5  *  dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  tolerance  *  Math.abs(0.5  *  dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  tolerance  *  Math.abs(0.5  *  dx  *  p1);	  double    p    =    tolerance    *    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
74	[BUG]  [BUGGY]  delta  =  1.5  *  dx  *  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  dx  *  p1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  dx  *  p1;	  delta    =    1.5    *    dx    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
75	[BUG]  [BUGGY]  delta  =  1.5  *  p  /  dx;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  p  /  dx;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  p  /  dx;	  delta    =    1.5    *    dx    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
76	[BUG]  [BUGGY]  double  p  =  0.5  *  dx  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  0.5  *  dx  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  0.5  *  dx  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
77	[BUG]  [BUGGY]  dx  =  0.5  *  dx  +  1;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  dx  =  0.5  *  dx  +  1;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	dx  =  0.5  *  dx  +  1;  oldDelta  =  p  /  p1;	  double    delta    =    0.5    *    dx    +    1;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
78	[BUG]  [BUGGY]  p  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  p  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	p  =  p  /  p1;	  double    delta    =    0.5    *    dx    +    1;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
79	[BUG]  [BUGGY]  dx  =  0.5  *  p1;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  dx  =  0.5  *  p1;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	dx  =  0.5  *  p1;  oldDelta  =  p  /  p1;	  double    delta    =    0.5    *    p1;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
80	[BUG]  [BUGGY]  double  p  =  dx  -  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  dx  -  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  dx  -  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p1    -    Math.abs(0.5    *    oldDelta    *    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
81	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.abs(0.5  *  p1  *  tolerance);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.abs(0.5  *  p1  *  tolerance);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.abs(0.5  *  p1  *  tolerance);	  double    p    =    p1    -    Math.abs(0.5    *    oldDelta    *    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
82	[BUG]  [BUGGY]  double  p  =  oldDelta  *  Math.sqrt(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  Math.sqrt(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  Math.sqrt(tolerance  *  p1);	  double    p    =    oldDelta    -    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
83	[BUG]  [BUGGY]  double  p  =  oldDelta  /  Math.sqrt(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  /  Math.sqrt(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  /  Math.sqrt(tolerance  *  p1);	  double    p    =    oldDelta    -    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
84	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.sqrt(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.sqrt(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.sqrt(tolerance  *  p1)+  1;	  double    p    =    oldDelta    -    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
85	[BUG]  [BUGGY]  double  delta  =  p  /  p1.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  p  /  p1.doubleValue();  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  p  /  p1.doubleValue();	  double    delta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
86	[BUG]  [BUGGY]  double  p  =  p  *  dx  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  dx  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  dx  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
87	[BUG]  [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
88	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  *  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  *  p1  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  *  p1  +  1;	  double    delta    =    0.5    *    dx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
89	[BUG]  [BUGGY]  double  p  =  oldDelta  *  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
90	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
91	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
92	[BUG]  [BUGGY]  dx  =  0.5  *  p;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  dx  =  0.5  *  p;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	dx  =  0.5  *  p;  oldDelta  =  p  /  p1;	  dx    =    0.5    *    dx;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
93	[BUG]  [BUGGY]  dx  =  0.5  *  dx;  oldDelta  =  delta  /  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  dx  =  0.5  *  dx;  oldDelta  =  delta  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	dx  =  0.5  *  dx;  oldDelta  =  delta  /  p1;	  dx    =    0.5    *    dx;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
94	[BUG]  [BUGGY]  delta  =  1.5  *  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  dx;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  dx;	  delta    =    1.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
95	[BUG]  [BUGGY]  delta  =  1.5  *  oldDelta  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  oldDelta  -  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  oldDelta  -  1;	  delta    =    1.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
96	[BUG]  [BUGGY]  double  delta  =  p  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  p  /  oldDelta;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  p  /  oldDelta;	  double    delta    =    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
97	[BUG]  [BUGGY]  double  delta  =  oldDelta  *  p1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  oldDelta  *  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  oldDelta  *  p1;	  double    delta    =    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
98	[BUG]  [BUGGY]  double  p  =  oldDelta  /  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  /  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  /  Math.abs(tolerance  *  p1);	  double    p    =    oldDelta    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
99	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.abs(dx  *  p1);	  double    p    =    oldDelta    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
100	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(dx  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(dx  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(dx  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
101	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
102	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
103	[BUG]  [BUGGY]  double  p  =  p  /  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  /  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  /  Math.abs(tolerance  *  p1);	  double    p    =    p    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
104	[BUG]  [BUGGY]  double  p  =  p  -  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.abs(dx  *  p1);	  double    p    =    p    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
105	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  +  p1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  +  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  +  p1;	  double    delta    =    0.5    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
106	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  +  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  +  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  +  p  /  p1;	  double    delta    =    0.5    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
107	[BUG]  [BUGGY]  double  delta  =  0.5  *  oldDelta  +  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  oldDelta  +  dx;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  oldDelta  +  dx;	  double    delta    =    0.5    *    dx    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
108	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  +  oldDelta  *  p1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  +  oldDelta  *  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  +  oldDelta  *  p1;	  double    delta    =    0.5    *    dx    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
109	[BUG]  [BUGGY]  p  =  p  -  Math.abs(tolerance  *  p1)+  1;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  p  =  p  -  Math.abs(tolerance  *  p1)+  1;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	p  =  p  -  Math.abs(tolerance  *  p1)+  1;  oldDelta  =  p  /  p1;	  p    =    p    -    Math.abs(tolerance    *    p1);    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
110	[BUG]  [BUGGY]  p  =  p  -  Math.abs(dx  *  p1);  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  p  =  p  -  Math.abs(dx  *  p1);  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	p  =  p  -  Math.abs(dx  *  p1);  oldDelta  =  p  /  p1;	  p    =    p    -    Math.abs(tolerance    *    p1);    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
111	[BUG]  [BUGGY]  double  p  =  p  *  Math.sqrt(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  Math.sqrt(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  Math.sqrt(tolerance  *  p1);	  double    p    =    tolerance    *    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
112	[BUG]  [BUGGY]  double  p  =  tolerance  *  Math.log(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  *  Math.log(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  *  Math.log(tolerance  *  p1);	  double    p    =    tolerance    *    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
113	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
114	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
115	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
116	[BUG]  [BUGGY]  double  p  =  0.5  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  0.5  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  0.5  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p1    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
117	[BUG]  [BUGGY]  double  delta  =  1.5  *  dx  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  dx  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  dx  -  Math.abs(tolerance  *  p1);	  double    delta    =    1.5    *    oldDelta    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
118	[BUG]  [BUGGY]  double  delta  =  1.5  *  oldDelta  -  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  oldDelta  -  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  oldDelta  -  Math.abs(0.5  *  oldDelta  *  p1);	  double    delta    =    1.5    *    oldDelta    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
119	[BUG]  [BUGGY]  double  delta  =  1.5  *  oldDelta  -  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  oldDelta  -  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  oldDelta  -  Math.abs(dx  *  p1);	  double    delta    =    1.5    *    oldDelta    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
120	[BUG]  [BUGGY]  Double  delta  =  0.5  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  Double  delta  =  0.5  *  oldDelta;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	Double  delta  =  0.5  *  oldDelta;	  Double    delta    =    0.5    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
121	[BUG]  [BUGGY]  Double  delta  =  0.5  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  Double  delta  =  0.5  *  dx  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	Double  delta  =  0.5  *  dx  +  1;	  Double    delta    =    0.5    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
122	[BUG]  [BUGGY]  double  p  =  p1  -  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.abs(dx  *  p1);	  double    p    =    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
123	[BUG]  [BUGGY]  double  p  =  tolerance  *  p1  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  *  p1  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  *  p1  -  Math.abs(tolerance  *  p1);	  double    p    =    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
124	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  dx  *  p1);	  double    p    =    dx    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
125	[BUG]  [BUGGY]  double  p  =  0.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  0.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  0.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    dx    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
126	[BUG]  [BUGGY]  double  p  =  dx  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  dx  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  dx  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    dx    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
127	[BUG]  [BUGGY]  delta  =  0.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1);	  delta    =    0.5    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
128	[BUG]  [BUGGY]  delta  =  1.5  *  p1  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  p1  -  Math.abs(tolerance  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  p1  -  Math.abs(tolerance  *  p1);	  delta    =    0.5    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
129	[BUG]  [BUGGY]  delta  =  0.5  *  p  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p  -  Math.abs(tolerance  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p  -  Math.abs(tolerance  *  p1);	  delta    =    0.5    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
130	[BUG]  [BUGGY]  delta  =  0.5  *  oldDelta  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  oldDelta  -  Math.abs(tolerance  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  oldDelta  -  Math.abs(tolerance  *  p1);	  delta    =    0.5    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
131	[BUG]  [BUGGY]  delta  =  0.5  *  dx  *  p1  -  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  dx  *  p1  -  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  dx  *  p1  -  Math.abs(0.5  *  oldDelta  *  p1);	  delta    =    0.5    *    p1    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
132	[BUG]  [BUGGY]  delta  =  1.5  *  p1  -  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  p1  -  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  p1  -  Math.abs(0.5  *  oldDelta  *  p1);	  delta    =    0.5    *    p1    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
133	[BUG]  [BUGGY]  delta  =  0.5  *  p  -  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p  -  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p  -  Math.abs(0.5  *  oldDelta  *  p1);	  delta    =    0.5    *    p1    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
134	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.abs(0.5  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.abs(0.5  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.abs(0.5  *  p1);	  double    p    =    p1    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
135	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(0.5  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(0.5  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(0.5  *  p1);	  double    p    =    p1    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
136	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  *  p1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  *  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  *  p1;	  double    delta    =    0.5    *    oldDelta    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
137	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  *  oldDelta  *  p1;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  *  oldDelta  *  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  *  oldDelta  *  p1;	  double    delta    =    0.5    *    oldDelta    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
138	[BUG]  [BUGGY]  delta  =  0.5  *  p  +  dx;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p  +  dx;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p  +  dx;	  delta    =    0.5    *    dx    +    p1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
139	[BUG]  [BUGGY]  delta  =  0.5  *  oldDelta  +  p1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  oldDelta  +  p1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  oldDelta  +  p1;	  delta    =    0.5    *    dx    +    p1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
140	[BUG]  [BUGGY]  delta  =  1.5  *  dx  +  p1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  dx  +  p1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  dx  +  p1;	  delta    =    0.5    *    dx    +    p1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
141	[BUG]  [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
142	[BUG]  [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(p  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(p  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  *  p1  +  Math.abs(p  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
143	[BUG]  [BUGGY]  p  =  0.5  *  dx;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  p  =  0.5  *  dx;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	p  =  0.5  *  dx;  oldDelta  =  p  /  p1;	  delta    =    0.5    *    dx;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
144	[BUG]  [BUGGY]  delta  =  0.5  *  p;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p;  oldDelta  =  p  /  p1;	  delta    =    0.5    *    dx;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
145	[BUG]  [BUGGY]  delta  =  0.5  *  p1;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p1;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p1;  oldDelta  =  p  /  p1;	  delta    =    0.5    *    dx;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
146	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
147	[BUG]  [BUGGY]  double  p  =  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
148	[BUG]  [BUGGY]  double  delta  =  p  /  p1.tolerance;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  p  /  p1.tolerance;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  p  /  p1.tolerance;	  double    delta    =    p    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
149	[BUG]  [BUGGY]  double  delta  =  p  /  p2;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  p  /  p2;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  p  /  p2;	  double    delta    =    p    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
150	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  /  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  /  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  /  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    oldDelta    /    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
151	[BUG]  [BUGGY]  double  delta  =  0.5  *  oldDelta  *  p1  /  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  oldDelta  *  p1  /  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  oldDelta  *  p1  /  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    oldDelta    /    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
152	[BUG]  [BUGGY]  double  delta  =  0.5  *  oldDelta  /  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  oldDelta  /  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  oldDelta  /  Math.abs(dx  *  p1);	  double    delta    =    0.5    *    oldDelta    /    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
153	[BUG]  [BUGGY]  double  delta  =  1.5  *  oldDelta  /  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  oldDelta  /  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  oldDelta  /  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    oldDelta    /    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
154	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  -  Math.abs(oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  -  Math.abs(oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  -  Math.abs(oldDelta  *  p1);	  double    delta    =    0.5    *    oldDelta    -    Math.abs(dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
155	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  -  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  -  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  -  Math.abs(dx  *  p1);	  double    delta    =    0.5    *    oldDelta    -    Math.abs(dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
156	[BUG]  [BUGGY]  double  p  =  p  *  dx  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  dx  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  dx  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
157	[BUG]  [BUGGY]  double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
158	[BUG]  [BUGGY]  double  p  =  p  /  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  /  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  /  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
159	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.abs(0.5  *  p1,  p1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.abs(0.5  *  p1,  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.abs(0.5  *  p1,  p1);	  double    p    =    p    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
160	[BUG]  [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    dx    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
161	[BUG]  [BUGGY]  double  p  =  0.5  *  dx  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  0.5  *  dx  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  0.5  *  dx  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    dx    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
162	[BUG]  [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  *  p1  +  Math.abs(dx  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
163	[BUG]  [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p2);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p2);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
164	[BUG]  [BUGGY]  double  p  =  p1  -  Math.sqrt(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.sqrt(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.sqrt(tolerance  *  p1)+  1;	  double    p    =    p1    -    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
165	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
166	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
167	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p2)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p2)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p2)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
168	[BUG]  [BUGGY]  double  delta  =  p  *  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  p  *  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  p  *  p1;	  double    delta    =    tolerance    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
169	[BUG]  [BUGGY]  double  delta  =  p  *  tolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  p  *  tolerance;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  p  *  tolerance;	  double    delta    =    tolerance    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
170	[BUG]  [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(dx  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(dx  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  *  p1  +  Math.abs(dx  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p1    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
171	[BUG]  [BUGGY]  double  p  =  p  -  Math.abs(dx  *  p1);  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.abs(dx  *  p1);  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.abs(dx  *  p1);  oldDelta  =  p  /  p1;	  double    p    =    tolerance    -    Math.abs(dx    *    p1);    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
172	[BUG]  [BUGGY]  delta  =  0.5  *  p  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p  *  dx  +  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p  *  dx  +  1;	  delta    =    0.5    *    dx    *    p1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
173	[BUG]  [BUGGY]  double  delta  =  1.5  *  p1  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  p1  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  p1  -  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
174	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.abs(0.5  *  delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.abs(0.5  *  delta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.abs(0.5  *  delta  *  p1);	  double    p    =    delta    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
175	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(0.5  *  delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(0.5  *  delta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(0.5  *  delta  *  p1);	  double    p    =    delta    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
176	[BUG]  [BUGGY]  double  p  =  oldDelta  *  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  Math.abs(dx  *  p1);	  double    p    =    oldDelta    *    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
177	[BUG]  [BUGGY]  double  p  =  dx  *  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  dx  *  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  dx  *  Math.abs(tolerance  *  p1);	  double    p    =    oldDelta    *    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
178	[BUG]  [BUGGY]  double  p  =  oldDelta  *  Math.log(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  Math.log(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  Math.log(tolerance  *  p1);	  double    p    =    oldDelta    *    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
179	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  /  p1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  /  p1;	  double    delta    =    0.5    *    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
180	[BUG]  [BUGGY]  double  delta  =  0.5  *  p  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p  /  oldDelta;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p  /  oldDelta;	  double    delta    =    0.5    *    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
181	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  +  p1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  +  p1  /  oldDelta;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  +  p1  /  oldDelta;	  double    delta    =    0.5    *    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
182	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  *  p1  -  Math.abs(tolerance  *  p2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  *  p1  -  Math.abs(tolerance  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  *  p1  -  Math.abs(tolerance  *  p2);	  double    delta    =    0.5    *    dx    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
183	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  *  p1  -  Math.sqrt(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  *  p1  -  Math.sqrt(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  *  p1  -  Math.sqrt(tolerance  *  p1);	  double    delta    =    0.5    *    dx    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
184	[BUG]  [BUGGY]  double  p  =  p  -  Math.abs(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.abs(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.abs(tolerance  *  p1)+  1;	  double    p    =    p    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
185	[BUG]  [BUGGY]  double  p  =  tolerance  *  Math.abs(dx  *  p1);  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  *  Math.abs(dx  *  p1);  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  *  Math.abs(dx  *  p1);  oldDelta  =  p  /  p1;	  double    p    =    tolerance    -    Math.abs(dx    *    p1);    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
186	[BUG]  [BUGGY]  double  p  =  p  -  Math.sqrt(delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.sqrt(delta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.sqrt(delta  *  p1);	  double    p    =    p    -    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
187	[BUG]  [BUGGY]  double  delta  =  0.5  *  p1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p1  /  oldDelta;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p1  /  oldDelta;	  double    delta    =    0.5    *    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
188	[BUG]  [BUGGY]  double  delta  =  0.5  *  p  *  p1  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p  *  p1  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p  *  p1  -  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    oldDelta    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
189	[BUG]  [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  *  p1  +  Math.abs(oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
190	[BUG]  [BUGGY]  double  p  =  delta  *  Math.sqrt(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  delta  *  Math.sqrt(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  delta  *  Math.sqrt(tolerance  *  p1);	  double    p    =    tolerance    *    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
191	[BUG]  [BUGGY]  double  p  =  tolerance  *  Math.sqrt(delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  *  Math.sqrt(delta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  *  Math.sqrt(delta  *  p1);	  double    p    =    tolerance    *    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
192	[BUG]  [BUGGY]  double  p  =  tolerance  *  Math.sqrt(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  *  Math.sqrt(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  *  Math.sqrt(tolerance  *  p1)+  1;	  double    p    =    tolerance    *    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
193	[BUG]  [BUGGY]  double  p  =  p  -  Math.abs(0.5  *  oldDelta  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.abs(0.5  *  oldDelta  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.abs(0.5  *  oldDelta  *  p1)+  1;	  double    p    =    p    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
194	[BUG]  [BUGGY]  double  p  =  p  -  Math.abs(0.5  *  oldDelta  *  p1)+  delta;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.abs(0.5  *  oldDelta  *  p1)+  delta;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.abs(0.5  *  oldDelta  *  p1)+  delta;	  double    p    =    p    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
195	[BUG]  [BUGGY]  double  p  =  p  *  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  Math.abs(tolerance  *  p1);	  double    p    =    oldDelta    *    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
196	[BUG]  [BUGGY]  double  p  =  delta  *  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  delta  *  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  delta  *  Math.abs(tolerance  *  p1);	  double    p    =    oldDelta    *    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
197	[BUG]  [BUGGY]  double  p  =  oldDelta  *  Math.abs(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  Math.abs(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  Math.abs(tolerance  *  p1)+  1;	  double    p    =    oldDelta    *    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
198	[BUG]  [BUGGY]  double  p  =  delta  -  Math.sqrt(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  delta  -  Math.sqrt(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  delta  -  Math.sqrt(tolerance  *  p1)+  1;	  double    p    =    delta    -    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
199	[BUG]  [BUGGY]  double  p  =  oldDelta  *  tolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  tolerance.doubleValue();  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  tolerance.doubleValue();	  double    p    =    p    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
200	[BUG]  [BUGGY]  double  p  =  delta  -  Math.abs(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  delta  -  Math.abs(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  delta  -  Math.abs(tolerance  *  p1)+  1;	  double    p    =    delta    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
201	[BUG]  [BUGGY]  delta  =  1.5  *  dx  /  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  dx  /  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  dx  /  1;	  delta    =    1.5    *    dx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
202	[BUG]  [BUGGY]  delta  =  0.5  *  p1  -  Math.abs(0.5  *  oldDelta  *  dx);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p1  -  Math.abs(0.5  *  oldDelta  *  dx);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p1  -  Math.abs(0.5  *  oldDelta  *  dx);	  delta    =    0.5    *    p1    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
203	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    oldDelta    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
204	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.sqrt(delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.sqrt(delta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.sqrt(delta  *  p1);	  double    p    =    oldDelta    -    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
205	[BUG]  [BUGGY]  double  delta  =  tolerance  *  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  tolerance  *  p1  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  tolerance  *  p1  +  1;	  double    delta    =    tolerance    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
206	[BUG]  [BUGGY]  double  delta  =  0.5  *  p1  -  Math.abs(dx  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p1  -  Math.abs(dx  *  oldDelta);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p1  -  Math.abs(dx  *  oldDelta);	  double    delta    =    0.5    *    oldDelta    -    Math.abs(dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
207	[BUG]  [BUGGY]  double  delta  =  0.5  *  p  -  Math.abs(dx  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p  -  Math.abs(dx  *  oldDelta);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p  -  Math.abs(dx  *  oldDelta);	  double    delta    =    0.5    *    oldDelta    -    Math.abs(dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
208	[BUG]  [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta  /  p1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  dx;  oldDelta  =  delta  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  dx;  oldDelta  =  delta  /  p1;	  delta    =    0.5    *    dx;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
209	[BUG]  [BUGGY]  delta  =  1.5  *  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  p  /  p1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  p  /  p1;	  delta    =    1.5    *    dx    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
210	[BUG]  [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)+  1;	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
211	[BUG]  [BUGGY]  double  p  =  p1  -  Math.abs(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.abs(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.abs(tolerance  *  p1)+  1;	  double    p    =    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
212	[BUG]  [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    p1    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
213	[BUG]  [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
214	[BUG]  [BUGGY]  double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  delta);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  delta);	  double    p    =    delta    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
215	[BUG]  [BUGGY]  double  delta  =  0.5  *  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p1  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p1  +  1;	  double    delta    =    0.5    *    dx    +    1;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
216	[BUG]  [BUGGY]  delta  =  0.5  *  p  *  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p  *  p1  +  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p  *  p1  +  1;	  delta    =    0.5    *    dx    *    p1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
217	[BUG]  [BUGGY]  double  delta  =  1.5  *  p  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  p  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  p  -  Math.abs(tolerance  *  p1);	  double    delta    =    1.5    *    oldDelta    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
218	[BUG]  [BUGGY]  double  delta  =  p  /  p1  +  tolerance;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  p  /  p1  +  tolerance;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  p  /  p1  +  tolerance;	  double    delta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
219	[BUG]  [BUGGY]  dx  =  0.5  *  p1;  oldDelta  =  delta  /  p1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  dx  =  0.5  *  p1;  oldDelta  =  delta  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	dx  =  0.5  *  p1;  oldDelta  =  delta  /  p1;	  dx    =    0.5    *    dx;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
220	[BUG]  [BUGGY]  double  p  =  oldDelta  -  Math.abs(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  -  Math.abs(tolerance  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  -  Math.abs(tolerance  *  p1)+  1;	  double    p    =    oldDelta    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
221	[BUG]  [BUGGY]  double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    p    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
222	[BUG]  [BUGGY]  double  delta  =  0.5  *  p1  -  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p1  -  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p1  -  Math.abs(dx  *  p1);	  double    delta    =    0.5    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
223	[BUG]  [BUGGY]  delta  =  0.5  *  p1  /  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p1  /  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p1  /  1;	  delta    =    0.5    *    dx    /    1;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
224	[BUG]  [BUGGY]  double  p  =  p1  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p1    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
225	[BUG]  [BUGGY]  double  p  =  p1  -  Math.sqrt(tolerance  *  dx);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.sqrt(tolerance  *  dx);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.sqrt(tolerance  *  dx);	  double    p    =    p1    -    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
226	[BUG]  [BUGGY]  double  p  =  delta  *  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  delta  *  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  delta  *  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    tolerance    *    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
227	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
228	[BUG]  [BUGGY]  delta  =  0.5  *  p1  +  dx;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p1  +  dx;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p1  +  dx;	  delta    =    0.5    *    dx    +    p1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
229	[BUG]  [BUGGY]  Double  delta  =  0.5  *  dx;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  Double  delta  =  0.5  *  dx;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	Double  delta  =  0.5  *  dx;  oldDelta  =  p  /  p1;	  double    delta    =    0.5    *    p1;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
230	[BUG]  [BUGGY]  p1  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  p1  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	p1  =  p  /  p1;	  double    delta    =    0.5    *    p1;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
231	[BUG]  [BUGGY]  double  p  =  delta  *  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  delta  *  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  delta  *  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    delta    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
232	[BUG]  [BUGGY]  double  delta  =  1  *  p1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1  *  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1  *  p1;	  double    delta    =    1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
233	[BUG]  [BUGGY]  double  delta  =  0.5  *  p  /  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p  /  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p  /  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    p    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
234	[BUG]  [BUGGY]  double  p  =  p1  *  dx  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  *  dx  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  *  dx  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p1    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
235	[BUG]  [BUGGY]  delta  =  0.5  *  p1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p1  /  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p1  /  oldDelta;	  delta    =    0.5    *    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
236	[BUG]  [BUGGY]  delta  =  0.5  *  p1  -  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  p1  -  Math.abs(dx  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  p1  -  Math.abs(dx  *  p1);	  delta    =    0.5    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
237	[BUG]  [BUGGY]  delta  =  1.5  *  p1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  p1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  p1;	  delta    =    1.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
238	[BUG]  [BUGGY]  delta  =  1.5  *  p;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  1.5  *  p;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  1.5  *  p;	  delta    =    1.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
239	[BUG]  [BUGGY]  double  delta  =  0.5  *  p1  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p1  *  oldDelta;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p1  *  oldDelta;	  double    delta    =    0.5    *    oldDelta    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
240	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  *  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  *  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  *  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    oldDelta    /    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
241	[BUG]  [BUGGY]  double  delta  =  0.5  *  oldDelta  *  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  oldDelta  *  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  oldDelta  *  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    oldDelta    /    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
242	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  /  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  /  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  /  1;	  double    delta    =    0.5    *    dx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
243	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(0.5  *  dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(0.5  *  dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(0.5  *  dx  *  p1);	  double    p    =    p1    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
244	[BUG]  [BUGGY]  double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  p1)+  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  p1)+  1;	  double    p    =    p1    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
245	[BUG]  [BUGGY]  double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  dx);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  dx);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  dx);	  double    p    =    p1    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
246	[BUG]  [BUGGY]  double  delta  =  1.5  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  dx  +  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  dx  +  1;	  double    delta    =    0.5    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
247	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.sqrt(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.sqrt(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.sqrt(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
248	[BUG]  [BUGGY]  double  delta  =  0.5  *  p  *  oldDelta  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p  *  oldDelta  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p  *  oldDelta  -  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    oldDelta    *    p1    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
249	[BUG]  [BUGGY]  double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    p1    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
250	[BUG]  [BUGGY]  double  p  =  tolerance  *  Math.cos(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  *  Math.cos(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  *  Math.cos(tolerance  *  p1);	  double    p    =    tolerance    *    Math.sqrt(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
251	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  *  p1  /  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  *  p1  /  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  *  p1  /  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    oldDelta    /    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
252	[BUG]  [BUGGY]  double  p  =  p  -  Math.sqrt(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.sqrt(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.sqrt(0.5  *  oldDelta  *  p1);	  double    p    =    p    -    Math.abs(0.5    *    oldDelta    *    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
253	[BUG]  [BUGGY]  double  p  =  p  -  Math.abs(0.5  *  oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.abs(0.5  *  oldDelta  *  delta);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.abs(0.5  *  oldDelta  *  delta);	  double    p    =    delta    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
254	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  +  p;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  +  p;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  +  p;	  double    delta    =    0.5    *    dx    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
255	[BUG]  [BUGGY]  double  p  =  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  delta);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  delta);	  double    p    =    delta    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
256	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  *  p  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  *  p  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  *  p  -  Math.abs(tolerance  *  p1);	  double    delta    =    0.5    *    p    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
257	[BUG]  [BUGGY]  double  p  =  p  /  tolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  /  tolerance.doubleValue();  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  /  tolerance.doubleValue();	  double    p    =    p    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
258	[BUG]  [BUGGY]  double  p  =  p  -  Math.exp(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.exp(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.exp(0.5  *  oldDelta  *  p1);	  double    p    =    p    -    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
259	[BUG]  [BUGGY]  p  =  p  -  Math.min(tolerance  *  p1);  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  p  =  p  -  Math.min(tolerance  *  p1);  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	p  =  p  -  Math.min(tolerance  *  p1);  oldDelta  =  p  /  p1;	  p    =    p    -    Math.abs(tolerance    *    p1);    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
260	[BUG]  [BUGGY]  delta  =  0.5  *  dx  +  1;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  dx  +  1;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  dx  +  1;  oldDelta  =  p  /  p1;	  delta    =    0.5    *    dx;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
261	[BUG]  [BUGGY]  double  delta  =  1.5  *  dx  *  oldDelta  -  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  1.5  *  dx  *  oldDelta  -  Math.abs(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  1.5  *  dx  *  oldDelta  -  Math.abs(tolerance  *  p1);	  double    delta    =    1.5    *    oldDelta    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
262	[BUG]  [BUGGY]  Double  delta  =  0.5  *  dx  +  1;  oldDelta  =  p  /  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  Double  delta  =  0.5  *  dx  +  1;  oldDelta  =  p  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	Double  delta  =  0.5  *  dx  +  1;  oldDelta  =  p  /  p1;	  double    delta    =    0.5    *    dx    +    1;    oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
263	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  +  p1  /  p1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  +  p1  /  p1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  +  p1  /  p1;	  double    delta    =    0.5    *    oldDelta    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
264	[BUG]  [BUGGY]  double  p  =  p  -  Math.log(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.log(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.log(tolerance  *  p1);	  double    p    =    p    -    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
265	[BUG]  [BUGGY]  double  p  =  p  *  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  *  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  *  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    tolerance    *    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
266	[BUG]  [BUGGY]  double  delta  =  0.5  *  p1  -  Math.abs(dx  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  p1  -  Math.abs(dx  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  p1  -  Math.abs(dx  *  oldDelta  *  p1);	  double    delta    =    0.5    *    oldDelta    -    Math.abs(dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
267	[BUG]  [BUGGY]  double  delta  =  0.5  *  dx  *  p1  -  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  0.5  *  dx  *  p1  -  Math.abs(dx  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  0.5  *  dx  *  p1  -  Math.abs(dx  *  p1);	  double    delta    =    0.5    *    oldDelta    -    Math.abs(dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
268	[BUG]  [BUGGY]  double  p  =  p  /  p1.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  /  p1.doubleValue();  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  /  p1.doubleValue();	  double    p    =    p    *    p1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
269	[BUG]  [BUGGY]  double  p  =  p  -  Math.sqrt(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.sqrt(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.sqrt(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
270	[BUG]  [BUGGY]  double  p  =  p  -  Math.log(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p  -  Math.log(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p  -  Math.log(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
271	[BUG]  [BUGGY]  delta  =  2.0  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  2.0  *  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  2.0  *  oldDelta;	  delta    =    1.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
272	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  dx  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
273	[BUG]  [BUGGY]  double  p  =  dx  *  p1  +  Math.sqrt(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  dx  *  p1  +  Math.sqrt(tolerance  *  p1);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  dx  *  p1  +  Math.sqrt(tolerance  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
274	[BUG]  [BUGGY]  double  delta  =  2  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  delta  =  2  *  oldDelta;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  delta  =  2  *  oldDelta;	  double    delta    =    1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
275	[BUG]  [BUGGY]  oldDelta  =  p  /  dx;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  oldDelta  =  p  /  dx;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	oldDelta  =  p  /  dx;	  oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
276	[BUG]  [BUGGY]  double  p  =  tolerance  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1),  dx);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1),  dx);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1),  dx);	  double    p    =    tolerance    -    Math.sqrt(Math.pow(10,    oldDelta    *    p1));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
277	[BUG]  [BUGGY]  double  p  =  p1  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  p1  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1));  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  p1  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1));	  double    p    =    tolerance    -    Math.sqrt(Math.pow(10,    oldDelta    *    p1));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
278	[BUG]  [BUGGY]  double  p  =  tolerance  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1),  0.5);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  tolerance  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1),  0.5);  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  tolerance  -  Math.sqrt(Math.pow(10,  oldDelta  *  p1),  0.5);	  double    p    =    tolerance    -    Math.sqrt(Math.pow(10,    oldDelta    *    p1));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
279	[BUG]  [BUGGY]  delta  =  2.0  *  dx  /  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  2.0  *  dx  /  p1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  2.0  *  dx  /  p1;	  delta    =    1.5    *    dx    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
280	[BUG]  [BUGGY]  delta  =  0.5  *  dx  /  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  delta  =  0.5  *  dx  /  2;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	delta  =  0.5  *  dx  /  2;	  delta    =    0.5    *    dx    /    1;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
281	[BUG]  [BUGGY]  double  p  =  oldDelta  *  Math.abs(tolerance  *  p1)-  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {          [BUGGY]  double  p  =  oldDelta  *  Math.abs(tolerance  *  p1)-  1;  [BUGGY]      delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	286	286	1	replace	double  p  =  oldDelta  *  Math.abs(tolerance  *  p1)-  1;	  double    p    =    oldDelta    *    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
