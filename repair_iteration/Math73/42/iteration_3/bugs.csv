bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  i  =  Math.max(delta,  oldDelta  -  i);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta,  oldDelta  -  i);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta,  oldDelta  -  i);	  i    =    Math.max(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
2	[BUG]  [BUGGY]  i  =  Math.max(delta,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta,  oldDelta  -  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta,  oldDelta  -  delta);	  i    =    Math.max(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
3	[BUG]  [BUGGY]  i  =  Math.max(i,  delta  -  oldDelta);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(i,  delta  -  oldDelta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(i,  delta  -  oldDelta);	  i    =    Math.max(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
4	[BUG]  [BUGGY]  double  oldDelta  =  f.value(y2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(y2);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(y2);	  double    oldDelta    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
5	[BUG]  [BUGGY]  double  oldDelta  =  f.value(y1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(y1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(y1);	  double    oldDelta    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
6	[BUG]  [BUGGY]  double  oldDelta  =  x2  -  x1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  x2  -  x1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  x2  -  x1;	  double    oldDelta    =    x1    -    x2;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  double  oldDelta  =  delta  -  x1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  delta  -  x1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  delta  -  x1;	  double    oldDelta    =    x1    -    x2;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  double  oldDelta  =  y1  -  x2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  y1  -  x2;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  y1  -  x2;	  double    oldDelta    =    x1    -    x2;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
9	[BUG]  [BUGGY]  delta  =  x2  -  delta.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  delta.doubleValue();  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  delta.doubleValue();	  delta    =    x1    -    delta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
10	[BUG]  [BUGGY]  delta  =  x1  -  oldDelta.doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  oldDelta.doubleValue();  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  oldDelta.doubleValue();	  delta    =    x1    -    delta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
11	[BUG]  [BUGGY]  delta  =  y2  -  delta.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y2  -  delta.doubleValue();  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y2  -  delta.doubleValue();	  delta    =    x1    -    delta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
12	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta,  delta);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    nativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
13	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  delta,  nativeAccuracy);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  delta,  nativeAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  delta,  nativeAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    nativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
14	[BUG]  [BUGGY]  i  =  Math.max(nativeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(nativeAccuracy  *  oldDelta,  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(nativeAccuracy  *  oldDelta,  delta);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    nativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
15	[BUG]  [BUGGY]  i  =  Math.max(delta  *  oldDelta,  nativeAccuracy);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta  *  oldDelta,  nativeAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta  *  oldDelta,  nativeAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    nativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
16	[BUG]  [BUGGY]  delta  =  oldDelta  -  dx;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  oldDelta  -  dx;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  oldDelta  -  dx;	  delta    =    dx    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
17	[BUG]  [BUGGY]  delta  =  dx  -  oldDelta  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  dx  -  oldDelta  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  dx  -  oldDelta  +  1;	  delta    =    dx    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
18	[BUG]  [BUGGY]  delta  =  dx  /  oldDelta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  dx  /  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  dx  /  oldDelta;	  delta    =    dx    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
19	[BUG]  [BUGGY]  delta  =  dx  *  oldDelta;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  dx  *  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  dx  *  oldDelta;	  delta    =    dx    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
20	[BUG]  [BUGGY]  delta  =  x1  -  y2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  y2;	  delta    =    y2    -    x1;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
21	[BUG]  [BUGGY]  delta  =  x2  -  y1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  y1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  y1;	  delta    =    y2    -    x1;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
22	[BUG]  [BUGGY]  delta  =  y1  -  x1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y1  -  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y1  -  x1;	  delta    =    y2    -    x1;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
23	[BUG]  [BUGGY]  delta  =  y2  -  x1  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y2  -  x1  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y2  -  x1  +  1;	  delta    =    y2    -    x1;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
24	[BUG]  [BUGGY]  double  i  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  i  =  f.value(x2);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  i  =  f.value(x2);	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
25	[BUG]  [BUGGY]  double  i  =  f.value(x1)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  i  =  f.value(x1)+  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  i  =  f.value(x1)+  1;	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  double  i  =  f.value(x1)-  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  i  =  f.value(x1)-  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  i  =  f.value(x1)-  1;	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  i  =  Math.max(delta,  oldDelta  +  i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta,  oldDelta  +  i);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta,  oldDelta  +  i);	  i    =    Math.max(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
28	[BUG]  [BUGGY]  i  =  Math.max(i,  oldDelta  *  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(i,  oldDelta  *  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(i,  oldDelta  *  delta);	  i    =    Math.max(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
29	[BUG]  [BUGGY]  i  =  Math.max(delta,  oldDelta  +  i1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta,  oldDelta  +  i1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta,  oldDelta  +  i1);	  i    =    Math.max(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
30	[BUG]  [BUGGY]  i  =  Math.max(delta,  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta,  oldDelta  +  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta,  oldDelta  +  delta);	  i    =    Math.max(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
31	[BUG]  [BUGGY]  x1  =  x1  +  0.5  *  oldDelta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x1  +  0.5  *  oldDelta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x1  +  0.5  *  oldDelta;	  x1    =    x1    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  x1  =  x1  +  0.5  *  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x1  +  0.5  *  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x1  +  0.5  *  delta;	  x1    =    x1    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
33	[BUG]  [BUGGY]  x1  =  x2  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x2  +  0.5  *  tolerance;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x2  +  0.5  *  tolerance;	  x1    =    x1    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
34	[BUG]  [BUGGY]  delta  =  delta  -  y2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  delta  -  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  delta  -  y2;	  delta    =    y2    -    delta;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
35	[BUG]  [BUGGY]  delta  =  y1  -  delta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y1  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y1  -  delta;	  delta    =    y2    -    delta;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
36	[BUG]  [BUGGY]  x1  =  x0  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x0  +  0.5  *  tolerance;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x0  +  0.5  *  tolerance;	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
37	[BUG]  [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  <  =  0.0))  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  <  =  0.0))  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  <  =  0.0  &&  oldDelta  <  =  0.0))  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
38	[BUG]  [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  ==  y1))  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  ==  y1))  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  <  =  0.0  &&  oldDelta  ==  y1))  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
39	[BUG]  [BUGGY]  delta  =  x2  -  x1  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  x1  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  x1  +  1;	  delta    =    x1    -    x2    +    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
40	[BUG]  [BUGGY]  delta  =  x1  -  x2  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  x2  *  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  x2  *  1;	  delta    =    x1    -    x2    +    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
41	[BUG]  [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  >  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  >  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  <  =  0.0  &&  oldDelta  >  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  ||(delta    <    =    0.0    &&    oldDelta!=    x2))    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
42	[BUG]  [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  >=  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  >=  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  <  =  0.0  &&  oldDelta  >=  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  ||(delta    <    =    0.0    &&    oldDelta!=    x2))    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
43	[BUG]  [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  >=  y1))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  >=  y1))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  <  =  0.0  &&  oldDelta  >=  y1))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  ||(delta    <    =    0.0    &&    oldDelta!=    x2))    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
44	[BUG]  [BUGGY]  delta  =  x2  -  x1  +  delta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  x1  +  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  x1  +  delta;	  delta    =    x1    -    x2    +    delta;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
45	[BUG]  [BUGGY]  delta  =  x1  -  x2  +  tolerance;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  x2  +  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  x2  +  tolerance;	  delta    =    x1    -    x2    +    delta;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
46	[BUG]  [BUGGY]  delta  =  x1  -  x2  +  y0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  x2  +  y0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  x2  +  y0;	  delta    =    x1    -    x2    +    delta;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
47	[BUG]  [BUGGY]  delta  =  x1  -  x2  *  delta;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  x2  *  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  x2  *  delta;	  delta    =    x1    -    x2    +    delta;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
48	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    delta;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
49	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  oldDelta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  oldDelta;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  oldDelta;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    delta;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
50	[BUG]  [BUGGY]  delta  =  y1  -  tolerance;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y1  -  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y1  -  tolerance;	  delta    =    y2    -    tolerance;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
51	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x1)+  x2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x1)+  x2;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x1)+  x2;	  double    oldDelta    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
52	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x1)/  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x1)/  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x1)/  delta;	  double    oldDelta    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
53	[BUG]  [BUGGY]  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
54	[BUG]  [BUGGY]  i  =  Math.max(delta,  oldDelta  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta,  oldDelta  +  1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta,  oldDelta  +  1);	  i    =    Math.max(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
55	[BUG]  [BUGGY]  i  =  Math.max(x1,  oldDelta  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(x1,  oldDelta  +  1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(x1,  oldDelta  +  1);	  i    =    Math.max(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
56	[BUG]  [BUGGY]  i  =  Math.max(i,  oldDelta  *  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(i,  oldDelta  *  1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(i,  oldDelta  *  1);	  i    =    Math.max(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
57	[BUG]  [BUGGY]  i  =  Math.max(y1,  oldDelta  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(y1,  oldDelta  +  1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(y1,  oldDelta  +  1);	  i    =    Math.max(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
58	[BUG]  [BUGGY]  i  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  f.value(x1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  f.value(x1);	  i    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
59	[BUG]  [BUGGY]  i  =  f.value(x2)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  f.value(x2)+  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  f.value(x2)+  1;	  i    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
60	[BUG]  [BUGGY]  delta  =  x1  /  x2  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  /  x2  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  /  x2  +  1;	  delta    =    x1    /    x2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
61	[BUG]  [BUGGY]  delta  =  y1  /  x2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y1  /  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y1  /  x2;	  delta    =    x1    /    x2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
62	[BUG]  [BUGGY]  delta  =  oldDelta  -  x1  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  oldDelta  -  x1  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  oldDelta  -  x1  +  1;	  delta    =    x1    -    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
63	[BUG]  [BUGGY]  delta  =  x2  -  oldDelta  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  oldDelta  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  oldDelta  +  1;	  delta    =    x1    -    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
64	[BUG]  [BUGGY]  delta  =  y2  -  oldDelta  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y2  -  oldDelta  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y2  -  oldDelta  +  1;	  delta    =    x1    -    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
65	[BUG]  [BUGGY]  delta  =  x1  -  x0  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  x0  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  x0  +  1;	  delta    =    x2    -    x0    +    1;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
66	[BUG]  [BUGGY]  delta  =  x0  -  x2  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x0  -  x2  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x0  -  x2  +  1;	  delta    =    x2    -    x0    +    1;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
67	[BUG]  [BUGGY]  delta  =  x2  /  y1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  /  y1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  /  y1;	  delta    =    x1    /    y2;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
68	[BUG]  [BUGGY]  delta  =  y2  /  x1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y2  /  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y2  /  x1;	  delta    =    x1    /    y2;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
69	[BUG]  [BUGGY]  ||(delta  >  0.0)&&(y1  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  >  0.0)&&(y1  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  >  0.0)&&(y1  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
70	[BUG]  [BUGGY]  if(delta  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  delta;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  delta;  }	  if(delta    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
71	[BUG]  [BUGGY]  delta  =  x1  -  x2,  y0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  x2,  y0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  x2,  y0;	  delta    =    x1    -    x2,    tolerance;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
72	[BUG]  [BUGGY]  delta  =  x1  -  x2,  y2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  x2,  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  x2,  y2;	  delta    =    x1    -    x2,    tolerance;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
73	[BUG]  [BUGGY]  delta  =  x2  -  x1,  tolerance;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  x1,  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  x1,  tolerance;	  delta    =    x1    -    x2,    tolerance;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
74	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  oldDelta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  oldDelta;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  oldDelta;  }	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
75	[BUG]  [BUGGY]  int  i  =  f.value(x2)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  int  i  =  f.value(x2)+  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	int  i  =  f.value(x2)+  1;	  int    i    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
76	[BUG]  [BUGGY]  int  i  =  f.value(x1)+  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  int  i  =  f.value(x1)+  2;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	int  i  =  f.value(x1)+  2;	  int    i    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
77	[BUG]  [BUGGY]  delta  =  oldDelta  -  x2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  oldDelta  -  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  oldDelta  -  x2;	  delta    =    x2    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
78	[BUG]  [BUGGY]  delta  =  x2  /  oldDelta;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  /  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  /  oldDelta;	  delta    =    x2    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
79	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }	  if(delta    >    0.0)    {    i++;    }    else    {    System.arraycopy(x2,    oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
80	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  if(delta  >  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  if(delta  >  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  if(delta  >  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }	  if(delta    >    0.0)    {    i++;    }    else    {    System.arraycopy(x2,    oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
81	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }	  if(delta    >    0.0)    {    i++;    }    else    {    System.arraycopy(x2,    oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
82	[BUG]  [BUGGY]  if(dx  >  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  >  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  >  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }	  if(delta    >    0.0)    {    i++;    }    else    {    System.arraycopy(x2,    oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
83	[BUG]  [BUGGY]  delta  =  x2  -  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  0.5  *  tolerance;	  delta    =    x1    -    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
84	[BUG]  [BUGGY]  x1  =  x1  -  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x1  -  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x1  -  0.5  *  tolerance;	  delta    =    x1    -    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
85	[BUG]  [BUGGY]  y1  =  x1  -  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  y1  =  x1  -  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	y1  =  x1  -  0.5  *  tolerance;	  delta    =    x1    -    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
86	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  int  i  =  oldDelta.length()  -  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	int  i  =  oldDelta.length()  -  1;	  int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
87	[BUG]  [BUGGY]  double  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  i  =  oldDelta.length();  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  i  =  oldDelta.length();	  int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
88	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  int  i  =  oldDelta.length()  +  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	int  i  =  oldDelta.length()  +  1;	  int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
89	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  -  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  int  i  =  oldDelta.length()  -  2;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	int  i  =  oldDelta.length()  -  2;	  int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
90	[BUG]  [BUGGY]  delta  =  y1  /  x0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y1  /  x0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y1  /  x0;	  delta    =    x0    /    x1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
91	[BUG]  [BUGGY]  delta  =  y1  -  delta2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y1  -  delta2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y1  -  delta2;	  delta    =    x1    -    delta2;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
92	[BUG]  [BUGGY]  delta  =  x2  -  delta1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  delta1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  delta1;	  delta    =    x1    -    delta2;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
93	[BUG]  [BUGGY]  double  oldDelta  =  x1  -  x0  +  tolerance;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  x1  -  x0  +  tolerance;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  x1  -  x0  +  tolerance;	  double    oldDelta    =    x1    -    x0    +    delta;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
94	[BUG]  [BUGGY]  double  oldDelta  =  x2  -  x0  +  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  x2  -  x0  +  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  x2  -  x0  +  delta;	  double    oldDelta    =    x1    -    x0    +    delta;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
95	[BUG]  [BUGGY]  double  oldDelta  =  x0  -  x1  +  delta;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  x0  -  x1  +  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  x0  -  x1  +  delta;	  double    oldDelta    =    x1    -    x0    +    delta;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
96	[BUG]  [BUGGY]  delta  =  y2  -  x0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y2  -  x0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y2  -  x0;	  delta    =    x0    -    x2;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
97	[BUG]  [BUGGY]  delta  =  y1  -  x2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y1  -  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y1  -  x2;	  delta    =    x0    -    x2;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
98	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  delta,  relativeAccuracy);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  delta,  relativeAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  delta,  relativeAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
99	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  x1,  relativeAccuracy);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  x1,  relativeAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  x1,  relativeAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
100	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x2);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x2);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta,  x2);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
101	[BUG]  [BUGGY]  double  i++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  i++;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  i++;	  int    i++;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
102	[BUG]  [BUGGY]  int  i  =  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  int  i  =  0;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	int  i  =  0;	  int    i++;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
103	[BUG]  [BUGGY]  long  i++;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  long  i++;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	long  i++;	  int    i++;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
104	[BUG]  [BUGGY]  x1  =  x1  -  x0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x1  -  x0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x1  -  x0;	  x1    =    x0    -    x1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
105	[BUG]  [BUGGY]  x1  =  x2  -  x1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x2  -  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x2  -  x1;	  x1    =    x0    -    x1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
106	[BUG]  [BUGGY]  x1  =  x0  -  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x0  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x0  -  delta;	  x1    =    x0    -    x1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
107	[BUG]  [BUGGY]  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
108	[BUG]  [BUGGY]  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
109	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
110	[BUG]  [BUGGY]  luate(x0,  oldDelta,  y1))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  luate(x0,  oldDelta,  y1))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	luate(x0,  oldDelta,  y1))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
111	[BUG]  [BUGGY]  i  =  oldDelta  -  x1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  oldDelta  -  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  oldDelta  -  x1;	  i    =    x1    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
112	[BUG]  [BUGGY]  i  =  x2  -  oldDelta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  x2  -  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  x2  -  oldDelta;	  i    =    x1    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
113	[BUG]  [BUGGY]  i  =  y2  -  oldDelta;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  y2  -  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  y2  -  oldDelta;	  i    =    x1    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
114	[BUG]  [BUGGY]  i  =  x1  -  delta;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  x1  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  x1  -  delta;	  i    =    x1    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
115	[BUG]  [BUGGY]  delta  =  x0  -  y1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x0  -  y1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x0  -  y1;	  delta    =    y1    -    x0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
116	[BUG]  [BUGGY]  delta  =  x1  -  y0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  y0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  y0;	  delta    =    y1    -    x0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
117	[BUG]  [BUGGY]  else  if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  else  if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	else  if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x0    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
118	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x0    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
119	[BUG]  [BUGGY]  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x0    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
120	[BUG]  [BUGGY]  delta  =  dx  /  x1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  dx  /  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  dx  /  x1;	  delta    =    x1    /    dx;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
121	[BUG]  [BUGGY]  delta  =  x2  /  dx;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  /  dx;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  /  dx;	  delta    =    x1    /    dx;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
122	[BUG]  [BUGGY]  delta  =  x1  /  dx  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  /  dx  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  /  dx  +  1;	  delta    =    x1    /    dx;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
123	[BUG]  [BUGGY]  delta  =  y1  /  dx;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y1  /  dx;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y1  /  dx;	  delta    =    x1    /    dx;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
124	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  delta,  absoluteAccuracy);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  delta,  absoluteAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  delta,  absoluteAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
125	[BUG]  [BUGGY]  i  =  Math.max(delta  *  oldDelta,  absoluteAccuracy);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta  *  oldDelta,  absoluteAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta  *  oldDelta,  absoluteAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
126	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)/  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x2)/  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x2)/  1;	  double    oldDelta    =    f.value(x2)+    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
127	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)+  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x2)+  2;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x2)+  2;	  double    oldDelta    =    f.value(x2)+    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
128	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)+  3;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x2)+  3;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x2)+  3;	  double    oldDelta    =    f.value(x2)+    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
129	[BUG]  [BUGGY]  ||(delta  <  0.0  &&  oldDelta  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  <  0.0  &&  oldDelta  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  <  0.0  &&  oldDelta  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  ||(delta    <    =    0.0    &&    oldDelta    <    =    0.0))    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
130	[BUG]  [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  >=  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  >=  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  <  =  0.0  &&  oldDelta  >=  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  ||(delta    <    =    0.0    &&    oldDelta    <    =    0.0))    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
131	[BUG]  [BUGGY]  ||(dx  <  =  0.0  &&  oldDelta  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(dx  <  =  0.0  &&  oldDelta  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(dx  <  =  0.0  &&  oldDelta  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  ||(delta    <    =    0.0    &&    oldDelta    <    =    0.0))    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
132	[BUG]  [BUGGY]  i  =  Math.max(y2,  oldDelta);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(y2,  oldDelta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(y2,  oldDelta);	  i    =    Math.max(y1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
133	[BUG]  [BUGGY]  i  =  Math.max(y1,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(y1,  oldDelta  -  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(y1,  oldDelta  -  delta);	  i    =    Math.max(y1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
134	[BUG]  [BUGGY]  delta  =  x2  /  x1  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  /  x1  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  /  x1  +  1;	  delta    =    x2    /    x1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
135	[BUG]  [BUGGY]  i  =  Math.max(delta  *  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta  *  oldDelta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta  *  oldDelta);	  i    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
136	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  delta);	  i    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
137	[BUG]  [BUGGY]  i  =  Math.max(delta  *  relativeAccuracy);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta  *  relativeAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta  *  relativeAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
138	[BUG]  [BUGGY]  else  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  else  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	else  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  else    if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
139	[BUG]  [BUGGY]  else  if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  else  if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	else  if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }	  else    if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
140	[BUG]  [BUGGY]  else  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  else  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	else  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }	  else    if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
141	[BUG]  [BUGGY]  double  oldDelta  =  x0  -  delta;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  x0  -  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  x0  -  delta;	  double    oldDelta    =    delta    -    x0;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
142	[BUG]  [BUGGY]  else  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  else  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	else  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(delta    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
143	[BUG]  [BUGGY]  if(delta  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }	  if(delta    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
144	[BUG]  [BUGGY]  else  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  else  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	else  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
145	[BUG]  [BUGGY]  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
146	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x0  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x0  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  delta  =  x0  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
147	[BUG]  [BUGGY]  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x0  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
148	[BUG]  [BUGGY]  x2  =  x1  -  x0;  y2  =  y0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x2  =  x1  -  x0;  y2  =  y0;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x2  =  x1  -  x0;  y2  =  y0;	  x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
149	[BUG]  [BUGGY]  i  =  Math.min(i,  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.min(i,  oldDelta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.min(i,  oldDelta);	  i    =    Math.max(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
150	[BUG]  [BUGGY]  i  =  Math.max(delta,  oldDelta,  x1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta,  oldDelta,  x1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta,  oldDelta,  x1);	  i    =    Math.max(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
151	[BUG]  [BUGGY]  Double  oldDelta  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  Double  oldDelta  =  f.value(x1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	Double  oldDelta  =  f.value(x1);	  Double    oldDelta    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
152	[BUG]  [BUGGY]  Double  oldDelta  =  f.value(x2)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  Double  oldDelta  =  f.value(x2)+  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	Double  oldDelta  =  f.value(x2)+  1;	  Double    oldDelta    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
153	[BUG]  [BUGGY]  Double  oldDelta  =  f.value(x2)+  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  Double  oldDelta  =  f.value(x2)+  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	Double  oldDelta  =  f.value(x2)+  delta;	  Double    oldDelta    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
154	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  dx  -  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  dx  -  delta;	  double    oldDelta    =    dx;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
155	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  dx  -  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  dx  -  1;	  double    oldDelta    =    dx;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
156	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  x1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  dx  -  x1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  dx  -  x1;	  double    oldDelta    =    dx;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
157	[BUG]  [BUGGY]  delta  =  oldDelta  -  y2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  oldDelta  -  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  oldDelta  -  y2;	  delta    =    y2    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
158	[BUG]  [BUGGY]  delta  =  y2  /  oldDelta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y2  /  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y2  /  oldDelta;	  delta    =    y2    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
159	[BUG]  [BUGGY]  if(i  >  0.0)  {  if(dx  >  0.0)  {  i++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(i  >  0.0)  {  if(dx  >  0.0)  {  i++;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(i  >  0.0)  {  if(dx  >  0.0)  {  i++;  }	  if(dx    >    0.0)    {    i++;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
160	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  <  =  0.0)  {  i++;  }	  if(dx    >    0.0)    {    i++;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
161	[BUG]  [BUGGY]  ||(dx  <  =  0.0  &&  dx  <  =  tolerance))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(dx  <  =  0.0  &&  dx  <  =  tolerance))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(dx  <  =  0.0  &&  dx  <  =  tolerance))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
162	[BUG]  [BUGGY]  ||(dx  <  =  0.0  &&  dx  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(dx  <  =  0.0  &&  dx  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(dx  <  =  0.0  &&  dx  <  =  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
163	[BUG]  [BUGGY]  double  oldDelta  =  x0  -  x2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  x0  -  x2;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  x0  -  x2;	  double    oldDelta    =    x2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
164	[BUG]  [BUGGY]  delta  =  delta  -  x2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  delta  -  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  delta  -  x2;	  delta    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
165	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)+  x0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x2)+  x0;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x2)+  x0;	  double    oldDelta    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
166	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)/  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x2)/  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x2)/  delta;	  double    oldDelta    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
167	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)+  x1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x2)+  x1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x2)+  x1;	  double    oldDelta    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
168	[BUG]  [BUGGY]  i  =  Math.max(x2,  oldDelta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(x2,  oldDelta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(x2,  oldDelta);	  i    =    Math.max(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
169	[BUG]  [BUGGY]  i  =  Math.max(x1,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(x1,  oldDelta  -  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(x1,  oldDelta  -  delta);	  i    =    Math.max(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
170	[BUG]  [BUGGY]  int  i  =  f.value(x2)-  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  int  i  =  f.value(x2)-  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	int  i  =  f.value(x2)-  1;	  int    i    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
171	[BUG]  [BUGGY]  int  i  =  f.value(x1)/  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  int  i  =  f.value(x1)/  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	int  i  =  f.value(x1)/  1;	  int    i    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
172	[BUG]  [BUGGY]  delta  =  x0  /  x2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x0  /  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x0  /  x2;	  delta    =    x2    /    x0;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
173	[BUG]  [BUGGY]  delta  =  y2  -  delta1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y2  -  delta1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y2  -  delta1;	  delta    =    y2    -    delta;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
174	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
175	[BUG]  [BUGGY]  if(delta  >  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
176	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  delta  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
177	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  x2,  absoluteAccuracy);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  x2,  absoluteAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  x2,  absoluteAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
178	[BUG]  [BUGGY]  if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
179	[BUG]  [BUGGY]  i  =  Math.max(delta,  oldDelta  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(delta,  oldDelta  -  1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(delta,  oldDelta  -  1);	  i    =    Math.max(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
180	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  i++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  >=  0.0)  {  i++;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  >=  0.0)  {  i++;  }	  if(dx    >    0.0)    {    i++;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
181	[BUG]  [BUGGY]  delta  =  x1  -  delta  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  delta  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  delta  +  1;	  delta    =    x1    -    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
182	[BUG]  [BUGGY]  delta  =  tolerance  -  y2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  tolerance  -  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  tolerance  -  y2;	  delta    =    y2    -    tolerance;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
183	[BUG]  [BUGGY]  x1  =  x1  -  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x1  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x1  -  delta;	  x1    =    x0    -    x1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
184	[BUG]  [BUGGY]  x1  =  x2  -  x0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x2  -  x0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x2  -  x0;	  x1    =    x0    -    x1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
185	[BUG]  [BUGGY]  i  =  Math.max(i,  oldDelta  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(i,  oldDelta  -  1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(i,  oldDelta  -  1);	  i    =    Math.max(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
186	[BUG]  [BUGGY]  double  i  =  f.value(x1)+  delta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  i  =  f.value(x1)+  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  i  =  f.value(x1)+  delta;	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
187	[BUG]  [BUGGY]  delta  =  x1  /  dx2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  /  dx2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  /  dx2;	  delta    =    x1    /    dx;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
188	[BUG]  [BUGGY]  i  =  Math.max(i,  oldDelta  -  delta-1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(i,  oldDelta  -  delta-1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(i,  oldDelta  -  delta-1);	  i    =    Math.max(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
189	[BUG]  [BUGGY]  i  =  Math.max(i,  oldDelta  -  delta0);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(i,  oldDelta  -  delta0);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(i,  oldDelta  -  delta0);	  i    =    Math.max(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
190	[BUG]  [BUGGY]  if(delta  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(delta    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
191	[BUG]  [BUGGY]  if(delta  >  0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >  0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >  0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(delta    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
192	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x1)+  delta  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x1)+  delta  +  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x1)+  delta  +  1;	  double    oldDelta    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
193	[BUG]  [BUGGY]  delta  =  oldDelta  -  delta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  oldDelta  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  oldDelta  -  delta;	  delta    =    oldDelta    -    x1;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
194	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  else    if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
195	[BUG]  [BUGGY]  else  if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  else  if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	else  if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  else    if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
196	[BUG]  [BUGGY]  delta  =  x1  -  y2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  y2);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  y2);	  delta    =    y2    -    x1;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
197	[BUG]  [BUGGY]  double  oldDelta  =  y1  -  x0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  y1  -  x0;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  y1  -  x0;	  double    oldDelta    =    x0    -    x1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
198	[BUG]  [BUGGY]  if(delta  >=  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >=  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >=  0.0)  {  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }	  if(delta    >    0.0)    {    i++;    }    else    {    System.arraycopy(x2,    oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
199	[BUG]  [BUGGY]  delta  =  x2  -  delta  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  delta  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  delta  +  1;	  delta    =    x2    -    x0    +    1;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
200	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)+  delta  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x2)+  delta  +  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x2)+  delta  +  1;	  double    oldDelta    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
201	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
202	[BUG]  [BUGGY]  double  oldDelta  =  x1  +  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  x1  +  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  x1  +  delta;	  double    oldDelta    =    x1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
203	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x0    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
204	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y3;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y3;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y3;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x0    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
205	[BUG]  [BUGGY]  i  =  f.value(x2)+  delta;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  f.value(x2)+  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  f.value(x2)+  delta;	  i    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
206	[BUG]  [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  >  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  >  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  <  =  0.0  &&  oldDelta  >  0.0))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  ||(delta    <    =    0.0    &&    oldDelta    <    =    0.0))    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
207	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  x2,  relativeAccuracy);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  x2,  relativeAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  x2,  relativeAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
208	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(delta    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
209	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  x2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  x2);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  x2);	  i    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
210	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  x2,  oldDelta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  x2,  oldDelta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  x2,  oldDelta);	  i    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
211	[BUG]  [BUGGY]  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
212	[BUG]  [BUGGY]  if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
213	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
214	[BUG]  [BUGGY]  if(delta  >  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
215	[BUG]  [BUGGY]  delta  =  dx  -  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  dx  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  dx  -  delta;	  delta    =    dx    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
216	[BUG]  [BUGGY]  delta  =  x2  -  delta0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  delta0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  delta0;	  delta    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
217	[BUG]  [BUGGY]  x1  =  x1  +  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x1  +  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x1  +  delta;	  x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
218	[BUG]  [BUGGY]  if(dx  >  0.0)  {  x1  =  x1  +  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  >  0.0)  {  x1  =  x1  +  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  >  0.0)  {  x1  =  x1  +  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
219	[BUG]  [BUGGY]  x1  =  x1  +  delta;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  x1  =  x1  +  delta;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	x1  =  x1  +  delta;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
220	[BUG]  [BUGGY]  delta  =  x1  -  0.5  *  oldDelta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  0.5  *  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  0.5  *  oldDelta;	  delta    =    x1    -    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
221	[BUG]  [BUGGY]  delta  =  y2  -  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  y2  -  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  y2  -  0.5  *  tolerance;	  delta    =    x1    -    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
222	[BUG]  [BUGGY]  double  oldDelta  =  x1  -  x2  +  delta;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  x1  -  x2  +  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  x1  -  x2  +  delta;	  double    oldDelta    =    x1    -    x0    +    delta;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
223	[BUG]  [BUGGY]  luate(x1,  y0)  {  if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  luate(x1,  y0)  {  if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	luate(x1,  y0)  {  if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(oldDelta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
224	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    delta;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
225	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x1  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x1  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  <  =  0.0)  {  delta  =  x1  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
226	[BUG]  [BUGGY]  delta  =  x1  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  +  0.5  *  tolerance;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  +  0.5  *  tolerance;	  if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
227	[BUG]  [BUGGY]  ||(delta  >=  0.0  &&  oldDelta!=  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  >=  0.0  &&  oldDelta!=  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  >=  0.0  &&  oldDelta!=  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  ||(delta    <    =    0.0    &&    oldDelta!=    x2))    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
228	[BUG]  [BUGGY]  ||(delta!=  0.0  &&  oldDelta!=  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta!=  0.0  &&  oldDelta!=  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta!=  0.0  &&  oldDelta!=  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  ||(delta    <    =    0.0    &&    oldDelta!=    x2))    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
229	[BUG]  [BUGGY]  if(delta  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
230	[BUG]  [BUGGY]  if(delta  >  0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >  0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >  0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
231	[BUG]  [BUGGY]  double  oldDelta  =  y2  -  x1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  y2  -  x1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  y2  -  x1;	  double    oldDelta    =    x1    -    x2;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
232	[BUG]  [BUGGY]  double  oldDelta  =  dx  +  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  dx  +  delta;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  dx  +  delta;	  double    oldDelta    =    dx;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
233	[BUG]  [BUGGY]  delta  =  x2  /  x1  +  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  /  x1  +  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  /  x1  +  delta;	  delta    =    x2    /    x1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
234	[BUG]  [BUGGY]  delta  =  x1  /  x2  +  delta;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  /  x2  +  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  /  x2  +  delta;	  delta    =    x1    /    x2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
235	[BUG]  [BUGGY]  delta  =  x2  -  delta2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  delta2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  delta2;	  delta    =    x1    -    delta2;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
236	[BUG]  [BUGGY]  delta  =  delta  -  x1.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  delta  -  x1.doubleValue();  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  delta  -  x1.doubleValue();	  delta    =    x1    -    delta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
237	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x3);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  f.value(x3);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  f.value(x3);	  double    oldDelta    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
238	[BUG]  [BUGGY]  if(i  >  0.0)  {  dx++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(i  >  0.0)  {  dx++;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(i  >  0.0)  {  dx++;  }	  if(dx    >    0.0)    {    i++;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
239	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x2  +  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x2  +  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta,  x2  +  delta);	  i    =    Math.max(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
240	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x1  +  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x1  +  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta,  x1  +  delta);	  i    =    Math.max(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
241	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta  +  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta  +  delta);	  i    =    Math.max(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
242	[BUG]  [BUGGY]  delta  =  x2  -  x1,  y2  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  x1,  y2  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  x1,  y2  +  1;	  delta    =    x2    -    x0    +    1;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
243	[BUG]  [BUGGY]  if(x1  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(x1  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(x1  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(oldDelta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
244	[BUG]  [BUGGY]  double  oldDelta  =  x3  -  x0;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  x3  -  x0;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  x3  -  x0;	  double    oldDelta    =    delta    -    x0;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
245	[BUG]  [BUGGY]  delta  =  x1  -  oldDelta  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  oldDelta  *  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  oldDelta  *  1;	  delta    =    x1    -    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
246	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
247	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
248	[BUG]  [BUGGY]  if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  <  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
249	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
250	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta,  x1);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
251	[BUG]  [BUGGY]  if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  delta;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    delta;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
252	[BUG]  [BUGGY]  delta  =  x3  -  x0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x3  -  x0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x3  -  x0;	  delta    =    y1    -    x0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
253	[BUG]  [BUGGY]  Class  <?>  oldDelta  =  f.value(oldDelta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  Class  <?>  oldDelta  =  f.value(oldDelta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	Class  <?>  oldDelta  =  f.value(oldDelta);	  if(delta    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
254	[BUG]  [BUGGY]  delta  =  x2  /  y2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  /  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  /  y2;	  delta    =    x1    /    y2;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
255	[BUG]  [BUGGY]  if(x1  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(x1  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(x1  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(oldDelta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
256	[BUG]  [BUGGY]  if(i  >  0)  {  if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(i  >  0)  {  if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(i  >  0)  {  if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x1  -  x0;  y2  =  y0;  }	  if(oldDelta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x1    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
257	[BUG]  [BUGGY]  delta  =  x1  -  x1,  y2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  x1,  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  x1,  y2;	  delta    =    x1    -    x2,    tolerance;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
258	[BUG]  [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  ==  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  ||(delta  <  =  0.0  &&  oldDelta  ==  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	||(delta  <  =  0.0  &&  oldDelta  ==  x2))  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  ||(delta    <    =    0.0    &&    oldDelta!=    x2))    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
259	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  x1,  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  x1,  oldDelta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  x1,  oldDelta);	  i    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
260	[BUG]  [BUGGY]  delta  =  x1  -  oldDelta  +  delta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  oldDelta  +  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  oldDelta  +  delta;	  delta    =    x1    -    x2    +    delta;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
261	[BUG]  [BUGGY]  delta  =  x1  /  x2  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  /  x2  +  2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  /  x2  +  2;	  delta    =    x1    /    x2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
262	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x1  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x1  +  1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta,  x1  +  1);	  i    =    Math.max(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
263	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x2  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  x2  +  1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta,  x2  +  1);	  i    =    Math.max(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
264	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta  +  1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta  +  1);	  i    =    Math.max(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
265	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(dx    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
266	[BUG]  [BUGGY]  i  =  f.value(x3);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  f.value(x3);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  f.value(x3);	  i    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
267	[BUG]  [BUGGY]  if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(oldDelta  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x0    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
268	[BUG]  [BUGGY]  if(x1  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(x1  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(x1  <  =  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  {  x2  =  x0  -  x0;  y2  =  y0;  }	  if(delta    <    =    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    else    {    x2    =    x0    -    x0;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
269	[BUG]  [BUGGY]  delta  =  x2  -  x1,  y2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x2  -  x1,  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x2  -  x1,  y2;	  delta    =    x2    -    tolerance;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
270	[BUG]  [BUGGY]  delta  =  dx  -  x1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  dx  -  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  dx  -  x1;	  delta    =    oldDelta    -    x1;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
271	[BUG]  [BUGGY]  double  oldDelta  =  dx  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  oldDelta  =  dx  +  1;  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  oldDelta  =  dx  +  1;	  double    oldDelta    =    dx;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
272	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy  +  1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy  +  1);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
273	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  x1,  absoluteAccuracy);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  x1,  absoluteAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  x1,  absoluteAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
274	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  new  Double(x2),  absoluteAccuracy);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  new  Double(x2),  absoluteAccuracy);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  new  Double(x2),  absoluteAccuracy);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
275	[BUG]  [BUGGY]  i  =  Math.max(i,  oldDelta  -  x0);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(i,  oldDelta  -  x0);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(i,  oldDelta  -  x0);	  i    =    Math.max(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
276	[BUG]  [BUGGY]  i  =  Math.max(i,  oldDelta  -  x1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(i,  oldDelta  -  x1);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(i,  oldDelta  -  x1);	  i    =    Math.max(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
277	[BUG]  [BUGGY]  i  =  Math.max(i,  oldDelta  -  x1,  delta);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(i,  oldDelta  -  x1,  delta);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(i,  oldDelta  -  x1,  delta);	  i    =    Math.max(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
278	[BUG]  [BUGGY]  double  i  =  f.value(x0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  double  i  =  f.value(x0);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	double  i  =  f.value(x0);	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
279	[BUG]  [BUGGY]  delta  =  x1  -  f.value(x1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  f.value(x1);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  f.value(x1);	  delta    =    x1    -    delta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
280	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  tolerance);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  i  =  Math.max(relativeAccuracy  *  oldDelta,  tolerance);  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	i  =  Math.max(relativeAccuracy  *  oldDelta,  tolerance);	  i    =    Math.max(relativeAccuracy    *    oldDelta,    nativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
281	[BUG]  [BUGGY]  if(oldDelta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(oldDelta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(oldDelta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
282	[BUG]  [BUGGY]  delta  =  dx  -  tolerance;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  dx  -  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  dx  -  tolerance;	  delta    =    y2    -    tolerance;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
283	[BUG]  [BUGGY]  int  i  =  f.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  int  i  =  f.length();  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	int  i  =  f.length();	  int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
284	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta);  i++;  }	  if(delta    >    0.0)    {    i++;    }    else    {    System.arraycopy(x2,    oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
285	[BUG]  [BUGGY]  if(oldDelta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  if(oldDelta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]      delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	if(oldDelta  <  =  0.0)  {  x1  =  x0  +  0.5  *  tolerance;  }  else  {  x1  =  x1  -  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    x1    =    x0    +    0.5    *    tolerance;    }    else    {    x1    =    x1    -    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
286	[BUG]  [BUGGY]  delta  =  x1  -  x2  /  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;      [BUGGY]  delta  =  x1  -  x2  /  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	308	308	1	replace	delta  =  x1  -  x2  /  1;	  delta    =    x1    -    x2    +    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
