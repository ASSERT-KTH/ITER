bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  yMin  =  f.value(ret,  min);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMin  =  f.value(ret,  min);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMin  =  f.value(ret,  min);	  double    yMin    =    f.value(min,    ret);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  ret  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMin  =  f.value(min,  ret  +  1);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMin  =  f.value(min,  ret  +  1);	  double    yMin    =    f.value(min,    ret);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMin  =  f.value(min,  max  +  1);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMin  =  f.value(min,  max  +  1);	  double    yMin    =    f.value(min,    max);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  double  yMin  =  f.value(ret,  max);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMin  =  f.value(ret,  max);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMin  =  f.value(ret,  max);	  double    yMin    =    f.value(min,    max);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMin  =  f.value(min,  max)-  1;  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMin  =  f.value(min,  max)-  1;	  double    yMin    =    f.value(min,    max);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  double  yMax  =  f.value(ret,  max);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMax  =  f.value(ret,  max);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMax  =  f.value(ret,  max);	  double    yMax    =    f.value(min,    max);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  double  ret  =  f.value(ret  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  ret  =  f.value(ret  +  1);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  ret  =  f.value(ret  +  1);	  double    ret    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  double  ret  =  f.value(ret,  max);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  ret  =  f.value(ret,  max);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  ret  =  f.value(ret,  max);	  double    ret    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  Double  ret  =  f.value(ret  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  Double  ret  =  f.value(ret  +  1);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	Double  ret  =  f.value(ret  +  1);	  Double    ret    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  Double  ret  =  f.value(ret,  max);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  Double  ret  =  f.value(ret,  max);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	Double  ret  =  f.value(ret,  max);	  Double    ret    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  double  yMax  =  f.value(str  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMax  =  f.value(str  +  1);  [BUGGY]        double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMax  =  f.value(str  +  1);	  double    yMax    =    f.value(str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
12	[BUG]  [BUGGY]  double  yMax  =  f.value(str,  max);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMax  =  f.value(str,  max);  [BUGGY]        double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMax  =  f.value(str,  max);	  double    yMax    =    f.value(str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
13	[BUG]  [BUGGY]  Double  yMin  =  f.value(min,  max);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  Double  yMin  =  f.value(min,  max);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	Double  yMin  =  f.value(min,  max);	  Double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  double  xMax  =  f.value(ret);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  xMax  =  f.value(ret);  [BUGGY]        double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  xMax  =  f.value(ret);	  double    xMax    =    f.value(x);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  double  xMax  =  f.value(x,  max);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  xMax  =  f.value(x,  max);  [BUGGY]        double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  xMax  =  f.value(x,  max);	  double    xMax    =    f.value(x);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
16	[BUG]  [BUGGY]  double  xMax  =  f.value(max);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  xMax  =  f.value(max);  [BUGGY]        double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  xMax  =  f.value(max);	  double    xMax    =    f.value(x);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  double  yMin  =  f.value(s)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMin  =  f.value(s)+  1;  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMin  =  f.value(s)+  1;	  double    yMin    =    f.value(s);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  double  xMax  =  f.value(x  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  xMax  =  f.value(x  -  1);  [BUGGY]        double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  xMax  =  f.value(x  -  1);	  double    xMax    =    f.value(x);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  double  xMax  =  f.value(x  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  xMax  =  f.value(x  +  1);  [BUGGY]        double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  xMax  =  f.value(x  +  1);	  double    xMax    =    f.value(x);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  double  sMin  =  f.value(s);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  sMin  =  f.value(s);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  sMin  =  f.value(s);	  double    yMin    =    f.value(s);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  Double  yMin  =  f.value(max);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  Double  yMin  =  f.value(max);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	Double  yMin  =  f.value(max);	  Double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  double  yMin  =  f.value(ret,  ret);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMin  =  f.value(ret,  ret);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMin  =  f.value(ret,  ret);	  double    yMin    =    f.value(min,    ret);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  Double  ret  =  f.value(ret;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  Double  ret  =  f.value(ret;  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	Double  ret  =  f.value(ret;	  Double    ret    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  Double  yMin  =  f.value(st);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  Double  yMin  =  f.value(st);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	Double  yMin  =  f.value(st);	  Double    yMin    =    f.value(s);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
25	[BUG]  [BUGGY]  double  yMin  =  f.value(st);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMin  =  f.value(st);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMin  =  f.value(st);	  double    yMin    =    f.value(s);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  double  xMax  =  f.value(x)-  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  xMax  =  f.value(x)-  1;  [BUGGY]        double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  xMax  =  f.value(x)-  1;	  double    xMax    =    f.value(x);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  double  yRet  =  f.value(ret);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yRet  =  f.value(ret);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yRet  =  f.value(ret);	  double    ret    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  double  ret  =  f.value(ret;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  ret  =  f.value(ret;  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  ret  =  f.value(ret;	  double    ret    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  double  yMin  =  f.value(int);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);      [BUGGY]  double  yMin  =  f.value(int);  [BUGGY]      double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	170	170	1	replace	double  yMin  =  f.value(int);	  double    yMin    =    f.value(in);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
