bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  UnivariateRealFunction  is  abstract;  cannot  be  instantiated  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  UnivariateRealFunction  is  abstract;  cannot  be  instantiated	16	None	replace
2	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  missing  return  statement	16	None	replace
3	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial,  yIn  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial,  yIn  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial,  yIn	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
4	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
5	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
6	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  }	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
7	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	parent!=  null  &&  parent  ==  initial)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
8	[BUG]  [BUGGY]  return  solve(f,  yInitial,  max,  yMin,  min,  yMax);  [CE]  no  suitable  method  found  for  solve(UnivariateRealFunction,double,double,double,double,double)  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  yInitial,  max,  yMin,  min,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  yInitial,  max,  yMin,  min,  yMax);	  return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    	non-compiled	[CE]  no  suitable  method  found  for  solve(UnivariateRealFunction,double,double,double,double,double)	23	None	replace
9	[BUG]  [BUGGY]  return  solve(f,  min,  yInitial,  max,  yMin,  yMax);  [CE]  no  suitable  method  found  for  solve(UnivariateRealFunction,double,double,double,double,double)  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  yInitial,  max,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  yInitial,  max,  yMin,  yMax);	  return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    	non-compiled	[CE]  no  suitable  method  found  for  solve(UnivariateRealFunction,double,double,double,double,double)	23	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	add	        if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
11	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	add	        if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    if(min  >  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
13	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    if(min  >  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	add	        if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  min,  yInitial);  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
15	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  min,  yInitial);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  min,  yInitial);  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
16	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  If(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  If(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    If(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	13	None	add
17	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  max,  yMin,  yMax);  [CE]  no  suitable  method  found  for  solve(UnivariateRealFunction,double,double,double,double,double)  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  max,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  min,  max,  yMin,  yMax);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	non-compiled	[CE]  no  suitable  method  found  for  solve(UnivariateRealFunction,double,double,double,double,double)	24	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMax,  yMin);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	add	return  solve(f,  initial,  yInitial,  min,  max,  yMax,  yMin);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
19	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMax,  yMin);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMax,  yMin);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  min,  max,  yMax,  yMin);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	add	return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yInitial);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
21	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yInitial);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yInitial);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  max,  yInitial,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	add	return  solve(f,  initial,  min,  max,  yInitial,  yMin,  yMax);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
23	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  max,  yInitial,  yMin,  yMax);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  max,  yInitial,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  min,  max,  yInitial,  yMin,  yMax);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	add	        if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
25	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  min)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	add	        if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(min  >  min)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
27	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  min)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  min)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(min  >  min)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
28	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  If(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  If(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    If(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	8	None	add
29	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  original,  yInitial);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  original,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  original,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	8	None	add
30	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  result  =  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  result  =  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    result  =  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);	  	non-compiled	[CE]  ';'  expected	20	None	add
31	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);	  	non-compiled	[CE]  ';'  expected	20	None	add
32	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	20	None	add
33	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial!=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial!=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    if(initial!=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	20	None	add
34	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  ==  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  ==  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    if(initial  ==  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	20	None	add
35	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  min,  yInitial);  [CE]  no  suitable  method  found  for  solve(UnivariateRealFunction,double,double,double,double,double)  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  min,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yMin,  max,  min,  yInitial);	  return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    	non-compiled	[CE]  no  suitable  method  found  for  solve(UnivariateRealFunction,double,double,double,double,double)	21	None	replace
36	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMax,  yMin);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMax,  yMin);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  max,  min,  yMax,  yMin);	  return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    	non-compiled	[CE]  unreachable  statement	21	None	replace
37	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMin);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMin);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMin);	  return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    	non-compiled	[CE]  unreachable  statement	21	None	replace
38	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  result  =  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  result  =  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    result  =  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);	  	non-compiled	[CE]  ';'  expected	22	None	add
39	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);	  	non-compiled	[CE]  ';'  expected	22	None	add
40	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }	  	non-compiled	[CE]  ';'  expected	22	None	add
41	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	22	None	add
42	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  result  =  solve(f,  initial,  yMin,  min,  yMax);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  result  =  solve(f,  initial,  yMin,  min,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    result  =  solve(f,  initial,  yMin,  min,  yMax);	  	non-compiled	[CE]  ';'  expected	22	None	add
43	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMin);  [CE]  no  suitable  method  found  for  setResult(<null>,int)  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMin);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMin);	  return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    	non-compiled	[CE]  no  suitable  method  found  for  setResult(<null>,int)	6	None	replace
44	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yInitial,  max,  yMin,  yInitial);  [CE]  no  suitable  method  found  for  setResult(<null>,int)  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yInitial,  max,  yMin,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  min,  yInitial,  max,  yMin,  yInitial);	  return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    	non-compiled	[CE]  no  suitable  method  found  for  setResult(<null>,int)	19	None	replace
45	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMax,  yInitial);  [CE]  no  suitable  method  found  for  setResult(<null>,int)  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMax,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  min,  max,  yMax,  yInitial);	  return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    	non-compiled	[CE]  no  suitable  method  found  for  setResult(<null>,int)	19	None	replace
46	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial);  }  [CE]  no  suitable  method  found  for  setResult(<null>,int)  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial);  }	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial);    }    	non-compiled	[CE]  no  suitable  method  found  for  setResult(<null>,int)	17	None	replace
47	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  y  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  y  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  y	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial);    }    	non-compiled	[CE]  ')'  expected	17	None	replace
48	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial);  }  [CE]  no  suitable  method  found  for  setResult(<null>,int)  [FE]                AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial);  }	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial);    }    	non-compiled	[CE]  no  suitable  method  found  for  setResult(<null>,int)	17	None	replace
49	[BUG]  [BUGGY]  return  solve(f,  min,  yInitial,  max,  yInitial);  [CE]  no  suitable  method  found  for  setResult(<null>,int)  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  yInitial,  max,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  yInitial,  max,  yInitial);	  return    solve(f,    initial,    yInitial,    max,    min,    yMin);    	non-compiled	[CE]  no  suitable  method  found  for  setResult(<null>,int)	3	None	replace
50	[BUG]  [BUGGY]  return  solve(f,  yMin,  yInitial,  max,  min,  initial);  [CE]  no  suitable  method  found  for  setResult(<null>,int)  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  yMin,  yInitial,  max,  min,  initial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  yMin,  yInitial,  max,  min,  initial);	  return    solve(f,    initial,    yInitial,    max,    min,    yMin);    	non-compiled	[CE]  no  suitable  method  found  for  setResult(<null>,int)	3	None	replace
51	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  yMin);  [CE]  no  suitable  method  found  for  setResult(<null>,int)  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  yMin);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  max,  yMin,  yMin);	  return    solve(f,    initial,    yInitial,    max,    min,    yMin);    	non-compiled	[CE]  no  suitable  method  found  for  setResult(<null>,int)	3	None	replace
52	[BUG]  [BUGGY]  result  =  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  [CE]  no  suitable  method  found  for  setResult(<null>,int)  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  result  =  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	result  =  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  method  found  for  setResult(<null>,int)	10	None	replace
53	[BUG]  [BUGGY]  result  =  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  [CE]  cannot  find  symbol  mini  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  result  =  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	result  =  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  mini	10	None	replace
54	[BUG]  [BUGGY]  result  =  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [CE]  cannot  find  symbol  mini  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  result  =  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	result  =  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  mini	10	None	replace
55	[BUG]  [BUGGY]  result  =  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  [CE]  cannot  find  symbol  mini  [FE]                AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  result  =  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	result  =  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  mini	10	None	replace
56	[BUG]  [BUGGY]  degree(min,  initial)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  degree(min,  initial)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	degree(min,  initial)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	      if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
57	[BUG]  [BUGGY]  degree(min,  initial)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  degree(min,  initial)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	degree(min,  initial)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
58	[BUG]  [BUGGY]  degree(min,  initial)  {  return  solve(f,  initial,  yMin,  max,  min,  yInitial);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  degree(min,  initial)  {  return  solve(f,  initial,  yMin,  max,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	degree(min,  initial)  {  return  solve(f,  initial,  yMin,  max,  min,  yInitial);  }	      if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
59	[BUG]  [BUGGY]  degree(min,  initial)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  degree(min,  initial)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	degree(min,  initial)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);	      if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
60	[BUG]  [BUGGY]  degree  =  Math.max(result,  yInitial);  [CE]  cannot  find  symbol  mini  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  degree  =  Math.max(result,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	degree  =  Math.max(result,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  cannot  find  symbol  mini	9	None	replace
61	[BUG]  [BUGGY]  degree  =  Math.min(result,  yInitial);  [CE]  cannot  find  symbol  mini  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  degree  =  Math.min(result,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	degree  =  Math.min(result,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  cannot  find  symbol  mini	9	None	replace
62	[BUG]  [BUGGY]  degree  =  Math.min(result,  yInitial)-  min;  [CE]  cannot  find  symbol  mini  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  degree  =  Math.min(result,  yInitial)-  min;  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	degree  =  Math.min(result,  yInitial)-  min;	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  cannot  find  symbol  mini	9	None	replace
63	[BUG]  [BUGGY]  degree  =  Math.min(result,  yInitial)-  initial;  [CE]  cannot  find  symbol  mini  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  degree  =  Math.min(result,  yInitial)-  initial;  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	degree  =  Math.min(result,  yInitial)-  initial;	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  cannot  find  symbol  mini	9	None	replace
64	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMax,  min,  yInitial);  [CE]  cannot  find  symbol  mini  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMax,  min,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  max,  yMax,  min,  yInitial);	  return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    	non-compiled	[CE]  cannot  find  symbol  mini	2	None	replace
65	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yInitial);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yInitial);	  return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    	non-compiled	[CE]  ';'  expected	2	None	replace
66	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMax,  min,  yMin);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMax,  min,  yMin);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  max,  yMax,  min,  yMin);	  return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    	non-compiled	[CE]  ';'  expected	2	None	replace
67	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  result  =  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  result  =  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    result  =  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);	  	non-compiled	[CE]  ';'  expected	1	None	add
68	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);	  	non-compiled	[CE]  ';'  expected	1	None	add
69	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(initial  >=  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(initial  >=  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    if(initial  >=  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
70	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(initial!=  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(initial!=  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    if(initial!=  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
71	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(min  >  0)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(min  >  0)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    if(min  >  0)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
72	[BUG]  [BUGGY]  if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
73	[BUG]  [BUGGY]  if(initial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
74	[BUG]  [BUGGY]  while(yInitial  *  yMax  <  1)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  while(yInitial  *  yMax  <  1)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	while(yInitial  *  yMax  <  1)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
75	[BUG]  [BUGGY]  parent.solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  parent.solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	parent.solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
76	[BUG]  [BUGGY]  return  solve(f,  min,  max,  yMin,  yInitial);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  max,  yMin,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  max,  yMin,  yInitial);	      	non-compiled	[CE]  ';'  expected	7	None	replace
77	[BUG]  [BUGGY]  return  solve(f,  min,  yMin,  yMax,  initial,  yInitial);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  yMin,  yMax,  initial,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  yMin,  yMax,  initial,  yInitial);	      	non-compiled	[CE]  ';'  expected	7	None	replace
78	[BUG]  [BUGGY]  return  solve(f,  min,  yMin,  yMax);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  yMin,  yMax);	      	non-compiled	[CE]  ';'  expected	7	None	replace
79	[BUG]  [BUGGY]  return  solve(f,  min,  yMin,  max,  yMax);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  yMin,  max,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  yMin,  max,  yMax);	      	non-compiled	[CE]  ';'  expected	7	None	replace
80	[BUG]  [BUGGY]  if(initial  >  0)  {  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  0)  {  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  0)  {  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
81	[BUG]  [BUGGY]  if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
82	[BUG]  [BUGGY]  if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
83	[BUG]  [BUGGY]  Min  =  f.getMinimumValue();  max  =  f.getMaximumValue();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  Min  =  f.getMinimumValue();  max  =  f.getMaximumValue();  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	Min  =  f.getMinimumValue();  max  =  f.getMaximumValue();	      min    =    f.getMinimumValue();    max    =    f.getMaximumValue();    	non-compiled	[CE]  ';'  expected	11	None	replace
84	[BUG]  [BUGGY]  MinimumValue  min  =  f.getMinimumValue();  max  =  f.getMaximumValue();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  MinimumValue  min  =  f.getMinimumValue();  max  =  f.getMaximumValue();  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	MinimumValue  min  =  f.getMinimumValue();  max  =  f.getMaximumValue();	      min    =    f.getMinimumValue();    max    =    f.getMaximumValue();    	non-compiled	[CE]  ';'  expected	11	None	replace
85	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  result  =  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  result  =  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    result  =  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);	  	non-compiled	[CE]  ';'  expected	5	None	add
86	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);	  	non-compiled	[CE]  ';'  expected	5	None	add
87	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  result  =  solve(f,  initial,  min,  max,  yMin,  yMax);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  result  =  solve(f,  initial,  min,  max,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    result  =  solve(f,  initial,  min,  max,  yMin,  yMax);	  	non-compiled	[CE]  ';'  expected	5	None	add
88	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial!=  min)  {  return  solve(f,  initial,  min,  max,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial!=  min)  {  return  solve(f,  initial,  min,  max,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    if(initial!=  min)  {  return  solve(f,  initial,  min,  max,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	5	None	add
89	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  min,  max,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  min,  max,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    if(initial  >=  min)  {  return  solve(f,  initial,  min,  max,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	5	None	add
90	[BUG]  [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	25	None	add
91	[BUG]  [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  >=  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  >=  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(yInitial  *  yMax  >=  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	25	None	add
92	[BUG]  [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  ymax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  ymax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(yInitial  *  ymax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	25	None	add
93	[BUG]  [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  original,  yInitial);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  original,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  original,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	25	None	add
94	[BUG]  [BUGGY]  if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	28	None	replace
95	[BUG]  [BUGGY]  if(initial  <  min)  {  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  min)  {  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  min)  {  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	28	None	replace
96	[BUG]  [BUGGY]  return  solve(f,  min,  yMin,  max,  yMax,  initial);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  yMin,  max,  yMax,  initial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  yMin,  max,  yMax,  initial);	  return    solve(f,    initial,    yMin,    max,    yMax,    min);    	non-compiled	[CE]  ';'  expected	4	None	replace
97	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yMin);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yMin);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yMin,  max,  yMax,  min,  yMin);	  return    solve(f,    initial,    yMin,    max,    yMax,    min);    	non-compiled	[CE]  ';'  expected	4	None	replace
98	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  result  =  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  result  =  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    result  =  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);	  	non-compiled	[CE]  ';'  expected	18	None	add
99	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);	  	non-compiled	[CE]  ';'  expected	18	None	add
100	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  if(initial!=  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  if(initial!=  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    if(initial!=  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	18	None	add
101	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  if(min  >  max)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  if(min  >  max)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    if(min  >  max)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	18	None	add
102	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  if(initial!=  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  if(initial!=  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    if(initial!=  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	18	None	add
103	[BUG]  [BUGGY]  MinimumSize  =  f.getMinimumSize();  max  =  f.getMaximumSize();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  MinimumSize  =  f.getMinimumSize();  max  =  f.getMaximumSize();  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	MinimumSize  =  f.getMinimumSize();  max  =  f.getMaximumSize();	      min    =    f.getMinimumSize();    max    =    f.getMaximumSize();    	non-compiled	[CE]  ';'  expected	12	None	replace
104	[BUG]  [BUGGY]  min  =  max.getMinimumSize();  max  =  f.getMaximumSize();  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  min  =  max.getMinimumSize();  max  =  f.getMaximumSize();  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	min  =  max.getMinimumSize();  max  =  f.getMaximumSize();	      min    =    f.getMinimumSize();    max    =    f.getMaximumSize();    	non-compiled	[CE]  ';'  expected	12	None	replace
105	[BUG]  [BUGGY]  return  solve(f,  max,  yInitial,  min,  initial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  max,  yInitial,  min,  initial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  max,  yInitial,  min,  initial);	  return    solve(f,    initial,    yInitial,    max,    min,    yMin);    	non-compiled	[CE]  ';'  expected	3	None	replace
106	[BUG]  [BUGGY]  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	15	None	replace
107	[BUG]  [BUGGY]  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	15	None	replace
108	[BUG]  [BUGGY]  luate(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  luate(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	luate(f,  min,  yMin,  max,  yMax,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	15	None	replace
109	[BUG]  [BUGGY]  if(initial  >=  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >=  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >=  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
110	[BUG]  [BUGGY]  if(initial  >=  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >=  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >=  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
111	[BUG]  [BUGGY]  luate(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  luate(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	luate(f,  initial,  yMin,  max,  yMax,  min,  yInitial);	      if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
112	[BUG]  [BUGGY]  safeMultiply(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  safeMultiply(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	safeMultiply(f,  initial,  yMin,  max,  yMax,  min,  yInitial);	      if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
113	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  max,  yMax,  yMin,  yInitial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  max,  yMax,  yMin,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  min,  max,  yMax,  yMin,  yInitial);	  return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    	non-compiled	[CE]  ';'  expected	2	None	replace
114	[BUG]  [BUGGY]  return  solve(f,  min,  max,  yMin,  initial,  yInitial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  max,  yMin,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  max,  yMin,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	10	None	replace
115	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(min  >  max)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(min  >  max)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    if(min  >  max)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	5	None	add
116	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	5	None	add
117	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  AssertionFailedError  result  =  new  AssertionFailedError(min,  max);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  AssertionFailedError  result  =  new  AssertionFailedError(min,  max);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    AssertionFailedError  result  =  new  AssertionFailedError(min,  max);	  	non-compiled	[CE]  ';'  expected	5	None	add
118	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  max)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  min,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  max)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    if(min  >  max)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  min,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	13	None	add
119	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  AssertionFailedError  result  =  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  AssertionFailedError  result  =  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    AssertionFailedError  result  =  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);	  	non-compiled	[CE]  ';'  expected	1	None	add
120	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
121	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  AssertionFailedError  result  =  new  AssertionFailedError(min,  max);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  AssertionFailedError  result  =  new  AssertionFailedError(min,  max);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    AssertionFailedError  result  =  new  AssertionFailedError(min,  max);	  	non-compiled	[CE]  ';'  expected	1	None	add
122	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  yInitial);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yMin,  max,  yMax,  yInitial);	  return    solve(f,    initial,    yMin,    max,    yMax,    min);    	non-compiled	[CE]  ';'  expected	4	None	replace
123	[BUG]  [BUGGY]  return  solve(f,  max,  yMin,  initial,  yMax);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  max,  yMin,  initial,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  max,  yMin,  initial,  yMax);	  return    solve(f,    initial,    yMin,    max,    yMax,    min);    	non-compiled	[CE]  ';'  expected	4	None	replace
124	[BUG]  [BUGGY]  if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	28	None	replace
125	[BUG]  [BUGGY]  if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	28	None	replace
126	[BUG]  [BUGGY]  return  solve(f,  yInitial,  min,  max,  yMax,  initial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  yInitial,  min,  max,  yMax,  initial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  yInitial,  min,  max,  yMax,  initial);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	non-compiled	[CE]  ';'  expected	24	None	replace
127	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMax,  yInitial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMax,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  max,  min,  yMax,  yInitial);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	non-compiled	[CE]  ';'  expected	24	None	replace
128	[BUG]  [BUGGY]  return  solve(f,  min,  yInitial,  max,  yMin,  initial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  yInitial,  max,  yMin,  initial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  yInitial,  max,  yMin,  initial);	  return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    	non-compiled	[CE]  ';'  expected	23	None	replace
129	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  YMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  YMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(min  >  max)  {  return  solve(f,  min,  YMin,  max,  yMax,  initial,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	8	None	add
130	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  if(initial  >=  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  if(initial  >=  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    if(initial  >=  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	18	None	add
131	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  AssertionFailedError  result  =  new  AssertionFailedError(min,  max);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  AssertionFailedError  result  =  new  AssertionFailedError(min,  max);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    AssertionFailedError  result  =  new  AssertionFailedError(min,  max);	  	non-compiled	[CE]  ';'  expected	18	None	add
132	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	20	None	add
133	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	20	None	add
134	[BUG]  [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  ymax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  ymax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  ymax,  initial,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	25	None	add
135	[BUG]  [BUGGY]  luate(f,  yInitial,  max,  yMin,  initial,  yInitial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  luate(f,  yInitial,  max,  yMin,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	luate(f,  yInitial,  max,  yMin,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
136	[BUG]  [BUGGY]  return  solve(f,  min,  max,  yMin,  yMax);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  max,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  max,  yMin,  yMax);	      	non-compiled	[CE]  ';'  expected	7	None	replace
137	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  yMax);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yMin,  yMax);	      	non-compiled	[CE]  ';'  expected	7	None	replace
138	[BUG]  [BUGGY]  Min  =  f.getMinimumSize();  max  =  f.getMaximumSize();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  Min  =  f.getMinimumSize();  max  =  f.getMaximumSize();  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	Min  =  f.getMinimumSize();  max  =  f.getMaximumSize();	      min    =    f.getMinimumSize();    max    =    f.getMaximumSize();    	non-compiled	[CE]  ';'  expected	12	None	replace
139	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  y  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  y  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  y	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
140	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  y  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  y  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  y	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
141	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  }	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
142	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  AssertionFailedError  result  =  new  AssertionFailedError(min,  max);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  AssertionFailedError  result  =  new  AssertionFailedError(min,  max);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    AssertionFailedError  result  =  new  AssertionFailedError(min,  max);	  	non-compiled	[CE]  ';'  expected	22	None	add
143	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  result  =  solve(f,  initial,  yMin,  max,  yMax,  min);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  result  =  solve(f,  initial,  yMin,  max,  yMax,  min);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    result  =  solve(f,  initial,  yMin,  max,  yMax,  min);	  	non-compiled	[CE]  ';'  expected	22	None	add
144	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMin,  initial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  yMax,  initial);  }	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
145	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  min,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(min  >  max)  {  return  solve(f,  min,  min,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(min  >  max)  {  return  solve(f,  min,  min,  max,  yMax,  initial,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	8	None	add
146	[BUG]  [BUGGY]  min  =  max.getMinimumValue();  max  =  f.getMaximumValue();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  min  =  max.getMinimumValue();  max  =  f.getMaximumValue();  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	min  =  max.getMinimumValue();  max  =  f.getMaximumValue();	      min    =    f.getMinimumValue();    max    =    f.getMaximumValue();    	non-compiled	[CE]  ';'  expected	11	None	replace
147	[BUG]  [BUGGY]  min  =  this.f.getMinimumValue();  max  =  f.getMaximumValue();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  min  =  this.f.getMinimumValue();  max  =  f.getMaximumValue();  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	min  =  this.f.getMinimumValue();  max  =  f.getMaximumValue();	      min    =    f.getMinimumValue();    max    =    f.getMaximumValue();    	non-compiled	[CE]  ';'  expected	11	None	replace
148	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(initial  <  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(initial  <  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    if(initial  <  min)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
149	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(initial!=  0)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  if(initial!=  0)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    if(initial!=  0)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
150	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  yInitial,  yMax);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  yInitial,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yMin,  max,  yInitial,  yMax);	  return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    	non-compiled	[CE]  ';'  expected	6	None	replace
151	[BUG]  [BUGGY]  return  solve(f,  result,  min,  max,  yMin,  yMax);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  result,  min,  max,  yMin,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  result,  min,  max,  yMin,  yMax);	  return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    	non-compiled	[CE]  ';'  expected	6	None	replace
152	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }	  	non-compiled	[CE]  ';'  expected	22	None	add
153	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  yMin,  min,  yMax);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	22	None	add
154	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yMin,  initial,  yMax);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yMin,  initial,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  min,  yMin,  initial,  yMax);	  return    solve(f,    initial,    yInitial,    max,    yMin,    min,    yMax);    	non-compiled	[CE]  ';'  expected	23	None	replace
155	[BUG]  [BUGGY]  return  solve(f,  initial,  yMin,  max,  min,  yMax);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yMin,  max,  min,  yMax);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yMin,  max,  min,  yMax);	  return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    	non-compiled	[CE]  ';'  expected	21	None	replace
156	[BUG]  [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  min,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  yMax,  min,  yInitial);  }  if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  min,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    if(min  >  max)  {  return  solve(f,  initial,  yMin,  max,  min,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	13	None	add
157	[BUG]  [BUGGY]  min  =  f.getMinimumSize()  +  max;  max  =  f.getMaximumSize();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  min  =  f.getMinimumSize()  +  max;  max  =  f.getMaximumSize();  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	min  =  f.getMinimumSize()  +  max;  max  =  f.getMaximumSize();	      min    =    f.getMinimumSize();    max    =    f.getMaximumSize();    	non-compiled	[CE]  ';'  expected	12	None	replace
158	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	5	None	add
159	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	5	None	add
160	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    min,    max,    yMin,    yMax);    if(initial  >=  min)  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  min,  max,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	5	None	add
161	[BUG]  [BUGGY]  if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
162	[BUG]  [BUGGY]  if(initial  <  min)  {  return  solve(f,  initial,  min,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  min)  {  return  solve(f,  initial,  min,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  min)  {  return  solve(f,  initial,  min,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
163	[BUG]  [BUGGY]  if(yInitial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(yInitial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(yInitial  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
164	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  f,  initial,  min,  yInitial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  AnnotationTraversal.traverse(compiler,  f,  initial,  min,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	AnnotationTraversal.traverse(compiler,  f,  initial,  min,  yInitial);	      if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
165	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  f,  NON_BRACKETING_MESSAGE);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  AnnotationTraversal.traverse(compiler,  f,  NON_BRACKETING_MESSAGE);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	AnnotationTraversal.traverse(compiler,  f,  NON_BRACKETING_MESSAGE);	      if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
166	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  f,  initial,  yInitial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  AnnotationTraversal.traverse(compiler,  f,  initial,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	AnnotationTraversal.traverse(compiler,  f,  initial,  yInitial);	      if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
167	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  f,  initial,  xInitial,  min,  yInitial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  AnnotationTraversal.traverse(compiler,  f,  initial,  xInitial,  min,  yInitial);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	AnnotationTraversal.traverse(compiler,  f,  initial,  xInitial,  min,  yInitial);	      if(min    >    max)    {    return    solve(f,    initial,    yMin,    max,    yMax,    min,    yInitial);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
168	[BUG]  [BUGGY]  return  solve(f,  min,  yInitial,  max,  initial,  yMin);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  yInitial,  max,  initial,  yMin);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  yInitial,  max,  initial,  yMin);	  return    solve(f,    initial,    yInitial,    max,    min,    yMin);    	non-compiled	[CE]  ';'  expected	3	None	replace
169	[BUG]  [BUGGY]  if(initial  <  1)  {  return  solve(f,  initial,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  1)  {  return  solve(f,  initial,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  1)  {  return  solve(f,  initial,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
170	[BUG]  [BUGGY]  if(initial  <  1)  {  return  solve(f,  initial,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  1)  {  return  solve(f,  initial,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  1)  {  return  solve(f,  initial,  yMin,  max,  yMax,  initial,  yInitial);  }  else  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
171	[BUG]  [BUGGY]  return  solve(f,  min,  max,  yMin,  initial);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  max,  yMin,  initial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  max,  yMin,  initial);	  return    solve(f,    initial,    yMin,    max,    yMax,    min);    	non-compiled	[CE]  ';'  expected	4	None	replace
172	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  max,  yMax,  yMin);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  max,  yMax,  yMin);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  min,  max,  yMax,  yMin);	  return    solve(f,    initial,    yMin,    max,    yMax,    min);    	non-compiled	[CE]  ';'  expected	4	None	replace
173	[BUG]  [BUGGY]  return  solve(f,  min,  max,  yMax,  initial);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  min,  max,  yMax,  initial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  min,  max,  yMax,  initial);	  return    solve(f,    initial,    yMin,    max,    yMax,    min);    	non-compiled	[CE]  ';'  expected	4	None	replace
174	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    if(initial  <  min)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	18	None	add
175	[BUG]  [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  max,  yMax,  initial,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	25	None	add
176	[BUG]  [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  YMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]      if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  YMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	        if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    if(yInitial  *  yMax  <  1)  {  return  solve(f,  min,  YMin,  max,  yMax,  initial,  yInitial);  }	  	non-compiled	[CE]  ';'  expected	25	None	add
177	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  max,  yMin,  yInitial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  max,  yMin,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  min,  max,  yMin,  yInitial);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	non-compiled	[CE]  ';'  expected	24	None	replace
178	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMax,  yInitial);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  yMax,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  yInitial,  max,  yMax,  yInitial);	  return    solve(f,    initial,    min,    max,    yMax,    yInitial);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
179	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  f,  this);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  AnnotationTraversal.traverse(compiler,  f,  this);  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	AnnotationTraversal.traverse(compiler,  f,  this);	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
180	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  initial,  min,  yMin,  max,  yMax,  initial,  yInitial);  }	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
181	[BUG]  [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  >  max)  {  return  solve(f,  min,  yInitial,  max,  yMax,  initial,  yInitial);  }  else  {  result  =  new  UnivariateRealFunction(max,  min,  yMin,  max,	      if(min    >    max)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    result    =    new    UnivariateRealFunction(max,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
182	[BUG]  [BUGGY]  if(initial  <  min)  {  return  solve(f,  initial,  min,  max,  yMax,  initial,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  if(initial  <  min)  {  return  solve(f,  initial,  min,  max,  yMax,  initial,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  solve(f,  min,  yMin,  max,  yMax,  initial,  yInitial);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	if(initial  <  min)  {  return  solve(f,  initial,  min,  max,  yMax,  initial,  yInitial);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(yInitial    *    yMax    <    1)    {    return    solve(f,    min,    yMin,    max,    yMax,    initial,    yInitial);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	28	None	replace
183	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	20	None	add
184	[BUG]  [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return    solve(f,    initial,    yInitial,    max,    min,    yMin,    yMax);    if(initial  <  min)  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }  else  {  return  solve(f,  initial,  yInitial,  max,  min,  yMin,  yMax);  }	  	non-compiled	[CE]  ';'  expected	20	None	add
185	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  max,  yMin,  yMax,  yInitial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  max,  yMin,  yMax,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  min,  max,  yMin,  yMax,  yInitial);	  return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    	non-compiled	[CE]  ';'  expected	19	None	replace
186	[BUG]  [BUGGY]  return  solve(f,  initial,  min,  yInitial,  max,  yMax,  yInitial);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    return  result;  }  if  (yInitial  *  yMax  <  0)  {  return  solve(f,  initial,  yInitial,  max,  yMax,  initial,  yInitial);  }      [BUGGY]  return  solve(f,  initial,  min,  yInitial,  max,  yMax,  yInitial);  [BUGGY]      }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	return  solve(f,  initial,  min,  yInitial,  max,  yMax,  yInitial);	  return    solve(f,    initial,    min,    yMin,    max,    yMax,    yInitial);    	non-compiled	[CE]  ';'  expected	19	None	replace
