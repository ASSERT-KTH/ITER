bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  y1  =  f.value(x1)-  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  y1  =  f.value(x1)-  0.5  *  tolerance;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(x1)-  0.5  *  tolerance;	      if(dx    <    =    0.0)    {    y1    =    f.value(x1)-    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }	      if(dx    <    =    0.0)    {    y1    =    f.value(x1)-    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  y1  =  f.value(x1)-  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >=  0.0)  {  y1  =  f.value(x1)-  0.5  *  tolerance;  }  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  0.0)  {  y1  =  f.value(x1)-  0.5  *  tolerance;  }	      if(dx    <    =    0.0)    {    y1    =    f.value(x1)-    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  if(i  >  tolerance)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  >  tolerance)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  tolerance)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  int  i  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  f.value(x2);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x2);	      int    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  double  i  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  double  i  =  f.value(x1);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.value(x1);	      int    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  int  i  =  f.value(x1)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  f.value(x1)+  1;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x1)+  1;	      int    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  int  i  =  f.value(x1)-  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  f.value(x1)-  1;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x1)-  1;	      int    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
11	[BUG]  [BUGGY]  double  i  =  oldDelta.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  double  i  =  oldDelta.doubleValue();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.doubleValue();	      int    i    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  int  i  =  oldDelta.doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  oldDelta.doubleValue()  +  1;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.doubleValue()  +  1;	      int    i    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  int  i  =  delta.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  delta.doubleValue();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  delta.doubleValue();	      int    i    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  delta++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  delta++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  delta++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta.length()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(i,  oldDelta.length()  -  1);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  oldDelta.length()  -  1);	      int    i    =    Math.min(i,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta.length()  -  delta.length());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(i,  oldDelta.length()  -  delta.length());  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  oldDelta.length()  -  delta.length());	      int    i    =    Math.min(i,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta.length()  -  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(i,  oldDelta.length()  -  2);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  oldDelta.length()  -  2);	      int    i    =    Math.min(i,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  int  i  =  Math.min(y2,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(y2,  oldDelta.length());  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(y2,  oldDelta.length());	      int    i    =    Math.min(i,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
25	[BUG]  [BUGGY]  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
26	[BUG]  [BUGGY]  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
27	[BUG]  [BUGGY]  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
28	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  <  =  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }	      if(dx    <    =    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(y1  >  0)  {  y2  =  y0;  }	      if(dx    <    =    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  y1  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  y1  =  f.value(x1);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(x1);	      if(dx    <    =    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
35	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  oldDelta.length()  -  1;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.length()  -  1;	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  double  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  double  i  =  oldDelta.length();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.length();	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  oldDelta.length()  +  1;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.length()  +  1;	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  oldDelta.length()  -  2;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.length()  -  2;	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  int  i  =  oldDelta.size()  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  oldDelta.size()  -  1;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.size()  -  1;	      int    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  double  i  =  oldDelta.size();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  double  i  =  oldDelta.size();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.size();	      int    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  int  i  =  oldDelta.size()  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  oldDelta.size()  -  2;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.size()  -  2;	      int    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  int  i  =  oldDelta.size()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  oldDelta.size()  +  1;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.size()  +  1;	      int    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
48	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
49	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
50	[BUG]  [BUGGY]  int  i  =  oldDelta.getIndex()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  oldDelta.getIndex()  -  1;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.getIndex()  -  1;	      int    i    =    oldDelta.getIndex();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  double  i  =  oldDelta.getIndex();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  double  i  =  oldDelta.getIndex();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.getIndex();	      int    i    =    oldDelta.getIndex();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  int  i  =  oldDelta.getIndex()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  oldDelta.getIndex()  +  1;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.getIndex()  +  1;	      int    i    =    oldDelta.getIndex();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  int  i  =  oldDelta.getIndex()  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  oldDelta.getIndex()  -  2;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.getIndex()  -  2;	      int    i    =    oldDelta.getIndex();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
55	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
56	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
57	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance,  oldDelta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  int  i  =  Math.min(x2,  oldDelta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(x2,  oldDelta);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(x2,  oldDelta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(i,  oldDelta  -  delta);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  oldDelta  -  delta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  int  i  =  Math.min(y2,  oldDelta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(y2,  oldDelta);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(y2,  oldDelta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta.length()  -  delta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(i,  oldDelta.length()  -  delta);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  oldDelta.length()  -  delta);	      int    i    =    Math.min(i,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
64	[BUG]  [BUGGY]  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
65	[BUG]  [BUGGY]  if(dx  >  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }	      if(dx    <    =    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >=  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }	      if(dx    <    =    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
67	[BUG]  [BUGGY]  int  i  =  f.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  f.length();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.length();	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
68	[BUG]  [BUGGY]  int  i  =  f.size();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  f.size();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.size();	      int    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  int  i  =  this.oldDelta.size();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  this.oldDelta.size();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  this.oldDelta.size();	      int    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
70	[BUG]  [BUGGY]  int  i  =  f.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  f.doubleValue();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.doubleValue();	      int    i    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
71	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
72	[BUG]  [BUGGY]  if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
74	[BUG]  [BUGGY]  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
75	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
76	[BUG]  [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeRealFunctionCount,  oldDelta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
77	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  delta);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  oldDelta  +  delta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
78	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
79	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
80	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
81	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
82	[BUG]  [BUGGY]  if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
83	[BUG]  [BUGGY]  int  i  =  f.getIndex();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  f.getIndex();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.getIndex();	      int    i    =    oldDelta.getIndex();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
84	[BUG]  [BUGGY]  int  maximalIterationCount  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  maximalIterationCount  =  f.value(x1);  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  f.value(x1);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
85	[BUG]  [BUGGY]  int  maximalIterationCount  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  maximalIterationCount  =  f.value(x2);  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  f.value(x2);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
86	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta));  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
87	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta));  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
88	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
89	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
90	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
91	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
92	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
93	[BUG]  [BUGGY]  if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
94	[BUG]  [BUGGY]  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
95	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length());  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta.length());	      int    i    =    Math.min(i,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta.length());  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance,  oldDelta.length());	      int    i    =    Math.min(i,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
97	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta.length());  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta.length());	      int    i    =    Math.min(i,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
98	[BUG]  [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta.length());  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeErrorCount,  oldDelta.length());	      int    i    =    Math.min(i,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
99	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
100	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
101	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
102	[BUG]  [BUGGY]  if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
103	[BUG]  [BUGGY]  if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
104	[BUG]  [BUGGY]  if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
105	[BUG]  [BUGGY]  if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
106	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
107	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
108	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
109	[BUG]  [BUGGY]  if(delta  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(delta  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
110	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
111	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
112	[BUG]  [BUGGY]  if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
113	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  >  0)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
114	[BUG]  [BUGGY]  if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
115	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  >  0)  {  if(dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
116	[BUG]  [BUGGY]  if(dx  <  =  0.5)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(dx  <  =  0.5)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.5)  {  if(y1  >  0)  {  y2  =  y0;  }	      if(dx    <    =    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
117	[BUG]  [BUGGY]  int  i  =  dx.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  dx.length();  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  dx.length();	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
118	[BUG]  [BUGGY]  if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
119	[BUG]  [BUGGY]  if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
120	[BUG]  [BUGGY]  int  i  =  f.value(x1)-  tolerance;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }    [BUGGY]  int  i  =  f.value(x1)-  tolerance;  [BUGGY]    i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x1)-  tolerance;	      int    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
