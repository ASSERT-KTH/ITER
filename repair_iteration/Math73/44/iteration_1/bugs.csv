bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	i++;  	non-compiled	[CE]  illegal  start  of  type	87	None	replace
2	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	i++;  	non-compiled	[CE]  illegal  start  of  type	87	None	replace
3	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	i++;  	non-compiled	[CE]  illegal  start  of  type	87	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]    [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	  	i++;  	non-compiled	[CE]  illegal  start  of  type	87	None	replace
5	[BUG]  [BUGGY]    int  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]    int  i  =  oldDelta.length();  [BUGGY]  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	    int  i  =  oldDelta.length();		non-compiled	[CE]  illegal  start  of  type	88	None	add
6	[BUG]  [BUGGY]    int  i  =  oldDelta.size();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]    int  i  =  oldDelta.size();  [BUGGY]  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	    int  i  =  oldDelta.size();		non-compiled	[CE]  illegal  start  of  type	88	None	add
7	[BUG]  [BUGGY]    int  i  =  Math.min(i,  oldDelta);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]    int  i  =  Math.min(i,  oldDelta);  [BUGGY]  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	    int  i  =  Math.min(i,  oldDelta);		non-compiled	[CE]  illegal  start  of  type	88	None	add
8	[BUG]  [BUGGY]    int  i  =  Math.min(i,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]    int  i  =  Math.min(i,  oldDelta.length());  [BUGGY]  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	    int  i  =  Math.min(i,  oldDelta.length());		non-compiled	[CE]  illegal  start  of  type	88	None	add
9	[BUG]  [BUGGY]    int  i  =  oldDelta.getIndex();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]    int  i  =  oldDelta.getIndex();  [BUGGY]  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	    int  i  =  oldDelta.getIndex();		non-compiled	[CE]  illegal  start  of  type	88	None	add
10	[BUG]  [BUGGY]    int  i  =  oldDelta.doubleValue();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]    int  i  =  oldDelta.doubleValue();  [BUGGY]  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	    int  i  =  oldDelta.doubleValue();		non-compiled	[CE]  illegal  start  of  type	88	None	add
11	[BUG]  [BUGGY]    if(dx  <  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]    if(dx  <  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  tolerance;  }  [BUGGY]  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	    if(dx  <  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  tolerance;  }		non-compiled	[CE]  illegal  start  of  type	88	None	add
12	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	i++;  	non-compiled	[CE]  illegal  start  of  type	87	None	replace
13	[BUG]  [BUGGY]    int  i  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]    int  i  =  f.value(x1);  [BUGGY]  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	    int  i  =  f.value(x1);		non-compiled	[CE]  illegal  start  of  type	88	None	add
14	[BUG]  [BUGGY]    if(dx  <  =  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]    if(dx  <  =  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	    if(dx  <  =  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }		non-compiled	[CE]  illegal  start  of  type	88	None	add
15	[BUG]  [BUGGY]  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	i++;  	non-compiled	[CE]  illegal  start  of  type	87	None	replace
16	[BUG]  [BUGGY]  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	i++;  	non-compiled	[CE]  illegal  start  of  type	87	None	replace
17	[BUG]  [BUGGY]  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  [BUGGY]  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	i++;  	non-compiled	[CE]  illegal  start  of  type	87	None	replace
