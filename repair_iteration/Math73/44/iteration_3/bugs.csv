bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  y1  =  f.value(y1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  y1  =  f.value(y1);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(y1);	  y1    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
2	[BUG]  [BUGGY]  y1  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  y1  =  f.value(x2);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(x2);	  y1    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
3	[BUG]  [BUGGY]  y1  =  f.value(x1)-  tolerance;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  y1  =  f.value(x1)-  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(x1)-  tolerance;	  y1    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
4	[BUG]  [BUGGY]  double  i  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  f.value(x2);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.value(x2);	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  double  i  =  f.value(x1)-  tolerance;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  f.value(x1)-  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.value(x1)-  tolerance;	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  double  i  =  f.value(x1)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  f.value(x1)+  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.value(x1)+  1;	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  double  i  =  oldDelta.doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.doubleValue()  +  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.doubleValue()  +  1;	  int    i    =    oldDelta.doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(non_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
9	[BUG]  [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(non_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
10	[BUG]  [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(non_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
11	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
12	[BUG]  [BUGGY]  y2  =  y0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  y2  =  y0;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y2  =  y0;	  if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
13	[BUG]  [BUGGY]  ||(y1  >  0)  ==  (y2  >  0))  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  ||(y1  >  0)  ==  (y2  >  0))  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	||(y1  >  0)  ==  (y2  >  0))  {  y2  =  y0;  }	  if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
14	[BUG]  [BUGGY]  if(dx  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  0)  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0)  {  y2  =  y0;  }	  if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
15	[BUG]  [BUGGY]  y1  =  f.value(x1)-  0.5  *  oldDelta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  y1  =  f.value(x1)-  0.5  *  oldDelta;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(x1)-  0.5  *  oldDelta;	  if(dx    <    =    0.0)    {    y1    =    f.value(x1)-    0.5    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }	  if(dx    <    =    0.0)    {    y1    =    f.value(x1)-    0.5    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >=  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }	  if(dx    >=    0.0)    {    y1    =    f.value(x1)-    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
19	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  tolerance);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  tolerance);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  delta,  tolerance);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
20	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  oldDelta);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  delta,  oldDelta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
21	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance  *  oldDelta,  relativeAccuracy);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(tolerance  *  oldDelta,  relativeAccuracy);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance  *  oldDelta,  relativeAccuracy);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
22	[BUG]  [BUGGY]  float  i  =  oldDelta.size();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  float  i  =  oldDelta.size();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	float  i  =  oldDelta.size();	  int    i    =    oldDelta.size()    -    2;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
23	[BUG]  [BUGGY]  int  i  =  f.length()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.length()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.length()  -  1;	  int    i    =    f.length();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
24	[BUG]  [BUGGY]  int  i  =  f.length()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.length()  +  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.length()  +  1;	  int    i    =    f.length();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
25	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
26	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  }	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
27	[BUG]  [BUGGY]  if(dx  >  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
28	[BUG]  [BUGGY]  if(dx  >  0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
29	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta  +  i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta  +  i);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(delta,  oldDelta  +  i);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
30	[BUG]  [BUGGY]  int  i  =  Math.min(i,  delta  +  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(i,  delta  +  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  delta  +  oldDelta);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
31	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  *  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(i,  oldDelta  *  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  oldDelta  *  delta);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
32	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  int  i  =  Math.min(i,  delta.length()  -  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(i,  delta.length()  -  oldDelta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  delta.length()  -  oldDelta.length());	  int    i    =    Math.min(i,    oldDelta.length()    -    delta.length());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
36	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta.length()  -  delta.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta.length()  -  delta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(delta,  oldDelta.length()  -  delta.length());	  int    i    =    Math.min(i,    oldDelta.length()    -    delta.length());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
37	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta.length()  -  delta.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(i,  oldDelta.length()  -  delta.length()  -  1);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  oldDelta.length()  -  delta.length()  -  1);	  int    i    =    Math.min(i,    oldDelta.length()    -    delta.length());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
38	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
39	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }	  if(dx    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
40	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }	  if(dx    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
41	[BUG]  [BUGGY]  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
42	[BUG]  [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
43	[BUG]  [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
44	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
45	[BUG]  [BUGGY]  if(delta  >=  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >=  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }	  if(dx    >=    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
46	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta));	  int    maximalIterationCount    =    Math.max(relativeInt(x2,    oldDelta));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
47	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta,  delta));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta,  delta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta,  delta));	  int    maximalIterationCount    =    Math.max(relativeInt(x2,    oldDelta));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
48	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(x2,  delta));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(x2,  delta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  Math.max(relativeInt(x2,  delta));	  int    maximalIterationCount    =    Math.max(relativeInt(x2,    oldDelta));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
49	[BUG]  [BUGGY]  int  i  =  f.size()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.size()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.size()  -  1;	  int    i    =    f.size();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
50	[BUG]  [BUGGY]  double  i  =  f.size();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  f.size();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.size();	  int    i    =    f.size();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
51	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
52	[BUG]  [BUGGY]  if(delta  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
53	[BUG]  [BUGGY]  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
54	[BUG]  [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
55	[BUG]  [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
56	[BUG]  [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
57	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
58	[BUG]  [BUGGY]  if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
59	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
60	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
61	[BUG]  [BUGGY]  if(i  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
62	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
64	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
65	[BUG]  [BUGGY]  luate(dx,  y1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  y1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  y1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
67	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
68	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
69	[BUG]  [BUGGY]  if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
70	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  if(i  <  =  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  if(i  <  =  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  if(i  <  =  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
71	[BUG]  [BUGGY]  int  i  =  f.value(x2)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x2)+  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x2)+  1;	  int    i    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
72	[BUG]  [BUGGY]  int  i  =  f.value(x1)+  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x1)+  2;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x1)+  2;	  int    i    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
73	[BUG]  [BUGGY]  if(delta  >  0)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    0)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
74	[BUG]  [BUGGY]  if(delta  >  0)  {  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0)  {  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    0)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
75	[BUG]  [BUGGY]  if(delta  >  0)  {  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0)  {  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    0)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
76	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
77	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  y1  =  f.value(x1)-  0.5  *  delta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  y1  =  f.value(x1)-  0.5  *  delta;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(x1)-  0.5  *  delta;	  y1    =    f.value(x1)-    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
79	[BUG]  [BUGGY]  y1  =  f.value(x1)-  0.5  *  y2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  y1  =  f.value(x1)-  0.5  *  y2;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(x1)-  0.5  *  y2;	  y1    =    f.value(x1)-    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
80	[BUG]  [BUGGY]  if(i  <  =  tolerance)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  tolerance)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  tolerance)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
81	[BUG]  [BUGGY]  if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
82	[BUG]  [BUGGY]  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
83	[BUG]  [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
84	[BUG]  [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
85	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta.length()  -  1);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance,  oldDelta.length()  -  1);	  int    i    =    Math.min(tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
86	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta.length()  -  delta.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta.length()  -  delta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance,  oldDelta.length()  -  delta.length());	  int    i    =    Math.min(tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
87	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta.length()  -  2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta.length()  -  2);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance,  oldDelta.length()  -  2);	  int    i    =    Math.min(tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
88	[BUG]  [BUGGY]  int  i  =  Math.min(relativeTolerance,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeTolerance,  oldDelta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeTolerance,  oldDelta.length());	  int    i    =    Math.min(tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
89	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
90	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
92	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
95	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
96	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
97	[BUG]  [BUGGY]  if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
98	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
99	[BUG]  [BUGGY]  int  i  =  Math.min(y1,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(y1,  oldDelta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(y1,  oldDelta.length());	  int    i    =    Math.min(i,    oldDelta.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
100	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
101	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
102	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
103	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(x2  +  1);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(x2  +  1);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(x2  +  1);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
104	[BUG]  [BUGGY]  if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(nON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
105	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(nON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
106	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(nON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
107	[BUG]  [BUGGY]  if(delta  <  =  0.5)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.5)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.5)  {  if(y1  >  0)  {  y2  =  y0;  }	  if(dx    <    =    0.5)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
108	[BUG]  [BUGGY]  if(dx  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
109	[BUG]  [BUGGY]  if(delta  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
110	[BUG]  [BUGGY]  if(dx  <  =  0.0  ||  delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0  ||  delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0  ||  delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
111	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
112	[BUG]  [BUGGY]  int  i  =  f.value(x2)-  delta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x2)-  delta;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x2)-  delta;	  int    i    =    f.value(x1)-    tolerance;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
113	[BUG]  [BUGGY]  int  i  =  f.value(x1)/  tolerance;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x1)/  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x1)/  tolerance;	  int    i    =    f.value(x1)-    tolerance;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
114	[BUG]  [BUGGY]  int  i  =  f.value(x1)-  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x1)-  delta;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x1)-  delta;	  int    i    =    f.value(x1)-    tolerance;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
115	[BUG]  [BUGGY]  int  i  =  f.value(x2)-  tolerance;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x2)-  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x2)-  tolerance;	  int    i    =    f.value(x1)-    tolerance;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
116	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
117	[BUG]  [BUGGY]  if(dx  >  0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
118	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
119	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  if(i  >  tolerance)  {  i++;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  if(i  >  tolerance)  {  i++;  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  if(i  >  tolerance)  {  i++;  }	  if(i    >    tolerance)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
120	[BUG]  [BUGGY]  if(dx  <  =  tolerance)  {  if(i  >  tolerance)  {  i++;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  tolerance)  {  if(i  >  tolerance)  {  i++;  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  tolerance)  {  if(i  >  tolerance)  {  i++;  }	  if(i    >    tolerance)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
121	[BUG]  [BUGGY]  if(delta  <  =  tolerance)  {  if(dx  >  tolerance)  {  i++;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  tolerance)  {  if(dx  >  tolerance)  {  i++;  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  tolerance)  {  if(dx  >  tolerance)  {  i++;  }	  if(i    >    tolerance)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
122	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  <  =  tolerance)  {  i++;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  <  =  tolerance)  {  i++;  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  <  =  tolerance)  {  i++;  }	  if(i    >    tolerance)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
123	[BUG]  [BUGGY]  double  i  =  delta.doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  delta.doubleValue();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  delta.doubleValue();	  int    i    =    delta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
124	[BUG]  [BUGGY]  int  i  =  delta.doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  delta.doubleValue()  +  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  delta.doubleValue()  +  1;	  int    i    =    delta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
125	[BUG]  [BUGGY]  int  i  =  delta.length()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  delta.length()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  delta.length()  -  1;	  int    i    =    oldDelta.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
126	[BUG]  [BUGGY]  bucket  <  =  Math.max(relativeToken.length(),  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  <  =  Math.max(relativeToken.length(),  oldDelta);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  <  =  Math.max(relativeToken.length(),  oldDelta);	  if(i    >    0)    {    if(dx    >    tolerance)    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
127	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta);	  if(i    >    0)    {    if(dx    >    tolerance)    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
128	[BUG]  [BUGGY]  bucket  <  =  Math.max(relativeToken.length(),  nativeToken.length());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  <  =  Math.max(relativeToken.length(),  nativeToken.length());  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  <  =  Math.max(relativeToken.length(),  nativeToken.length());	  if(i    >    0)    {    if(dx    >    tolerance)    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
129	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
130	[BUG]  [BUGGY]  safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
131	[BUG]  [BUGGY]  bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
132	[BUG]  [BUGGY]  bucket(i  <  =  0.0,  oldDelta)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket(i  <  =  0.0,  oldDelta)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket(i  <  =  0.0,  oldDelta)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
133	[BUG]  [BUGGY]  if(delta  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    <    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
134	[BUG]  [BUGGY]  double  i  =  oldDelta.getIndex()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.getIndex()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.getIndex()  -  1;	  double    i    =    oldDelta.getIndex();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
135	[BUG]  [BUGGY]  double  i  =  oldDelta.getIndex()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.getIndex()  +  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.getIndex()  +  1;	  double    i    =    oldDelta.getIndex();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
136	[BUG]  [BUGGY]  double  i  =  oldDelta.getIndex()  -  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.getIndex()  -  2;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.getIndex()  -  2;	  double    i    =    oldDelta.getIndex();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
137	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta.length()  -  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta.length()  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(delta,  oldDelta.length()  -  delta);	  int    i    =    Math.min(i,    oldDelta.length()    -    delta);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
138	[BUG]  [BUGGY]  int  i  =  Math.min(i,  delta.length()  -  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(i,  delta.length()  -  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  delta.length()  -  oldDelta);	  int    i    =    Math.min(i,    oldDelta.length()    -    delta);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
139	[BUG]  [BUGGY]  double  i  =  f.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  f.doubleValue();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.doubleValue();	  int    i    =    f.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
140	[BUG]  [BUGGY]  int  i  =  f.value(x1).doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x1).doubleValue();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x1).doubleValue();	  int    i    =    f.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
141	[BUG]  [BUGGY]  double  maximalIterationCount  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  maximalIterationCount  =  f.value(x1);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  maximalIterationCount  =  f.value(x1);	  int    maximalIterationCount    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
142	[BUG]  [BUGGY]  long  maximalIterationCount  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  long  maximalIterationCount  =  f.value(x1);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	long  maximalIterationCount  =  f.value(x1);	  int    maximalIterationCount    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
143	[BUG]  [BUGGY]  int  maximalIterationCount  =  f.value(x1)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  maximalIterationCount  =  f.value(x1)+  1;  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  f.value(x1)+  1;	  int    maximalIterationCount    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
144	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
145	[BUG]  [BUGGY]  safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
146	[BUG]  [BUGGY]  bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
147	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
148	[BUG]  [BUGGY]  int  i  =  Math.min(y2,  oldDelta.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(y2,  oldDelta.length()  -  1);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(y2,  oldDelta.length()  -  1);	  int    i    =    Math.min(y2,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
149	[BUG]  [BUGGY]  int  i  =  Math.min(x2,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(x2,  oldDelta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(x2,  oldDelta.length());	  int    i    =    Math.min(y2,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
150	[BUG]  [BUGGY]  int  i  =  Math.min(y2,  oldDelta.length()  -  delta);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(y2,  oldDelta.length()  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(y2,  oldDelta.length()  -  delta);	  int    i    =    Math.min(y2,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
151	[BUG]  [BUGGY]  int  i  =  Math.min(y2,  oldDelta.length()  -  2);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(y2,  oldDelta.length()  -  2);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(y2,  oldDelta.length()  -  2);	  int    i    =    Math.min(y2,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
152	[BUG]  [BUGGY]  if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
153	[BUG]  [BUGGY]  if(dx  <  =  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
154	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
155	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
156	[BUG]  [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
157	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
158	[BUG]  [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
159	[BUG]  [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  null);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
160	[BUG]  [BUGGY]  double  i  =  dx.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  dx.doubleValue();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  dx.doubleValue();	  double    i    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
161	[BUG]  [BUGGY]  int  i  =  Math.min(y2,  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(y2,  oldDelta,  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(y2,  oldDelta,  delta);	  int    i    =    Math.min(y2,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
162	[BUG]  [BUGGY]  int  i  =  Math.min(y2,  delta);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(y2,  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(y2,  delta);	  int    i    =    Math.min(y2,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
163	[BUG]  [BUGGY]  if(i  >  0.5)  {  if(delta  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0.5)  {  if(delta  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0.5)  {  if(delta  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0.5)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
164	[BUG]  [BUGGY]  if(delta  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0.5)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
165	[BUG]  [BUGGY]  int  i  =  Math.min(i,  delta  -  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(i,  delta  -  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(i,  delta  -  oldDelta);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
166	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(delta,  oldDelta  -  delta);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
167	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance,  oldDelta  -  delta);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
168	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta  -  i);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta  -  i);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(delta,  oldDelta  -  i);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
169	[BUG]  [BUGGY]  if(i  >  0)  {  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
170	[BUG]  [BUGGY]  if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
171	[BUG]  [BUGGY]  if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
172	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
173	[BUG]  [BUGGY]  if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
175	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
176	[BUG]  [BUGGY]  For(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
177	[BUG]  [BUGGY]  if(dx  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
178	[BUG]  [BUGGY]  if(delta  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
179	[BUG]  [BUGGY]  if(dx  <  =  0.0  ||  delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0  ||  delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0  ||  delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
180	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
181	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
182	[BUG]  [BUGGY]  float  i  =  oldDelta.getIndex();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  float  i  =  oldDelta.getIndex();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	float  i  =  oldDelta.getIndex();	  int    i    =    oldDelta.getIndex()    -    2;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
183	[BUG]  [BUGGY]  if(delta  >=  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >=  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
184	[BUG]  [BUGGY]  double  i  =  oldDelta.size()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.size()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.size()  -  1;	  double    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
185	[BUG]  [BUGGY]  double  i  =  oldDelta.size()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.size()  +  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.size()  +  1;	  double    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
186	[BUG]  [BUGGY]  double  i  =  oldDelta.size()  -  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.size()  -  2;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.size()  -  2;	  double    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
187	[BUG]  [BUGGY]  double  i  =  oldDelta.size()  /  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.size()  /  2;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.size()  /  2;	  double    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
188	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.length()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.length()  -  1;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
189	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.length()  +  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.length()  +  1;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
190	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  /  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.length()  /  2;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.length()  /  2;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
191	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  -  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.length()  -  2;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.length()  -  2;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
192	[BUG]  [BUGGY]  if(dx  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
193	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
194	[BUG]  [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  1);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  1);	  int    i    =    Math.min(relativeErrorCount,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
195	[BUG]  [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  2);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  2);	  int    i    =    Math.min(relativeErrorCount,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
196	[BUG]  [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  delta);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  delta);	  int    i    =    Math.min(relativeErrorCount,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
197	[BUG]  [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  delta.length());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  delta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeErrorCount,  oldDelta.length()  -  delta.length());	  int    i    =    Math.min(relativeErrorCount,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
198	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  delta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
199	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  tolerance);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
200	[BUG]  [BUGGY]  double  maximalIterationCount  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  maximalIterationCount  =  f.value(x2);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  maximalIterationCount  =  f.value(x2);	  int    maximalIterationCount    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
201	[BUG]  [BUGGY]  int  maximalIterationCount  =  f.value(x2)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  maximalIterationCount  =  f.value(x2)+  1;  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  f.value(x2)+  1;	  int    maximalIterationCount    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
202	[BUG]  [BUGGY]  double  i  =  dx.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  dx.length();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  dx.length();	  int    i    =    dx.length();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
203	[BUG]  [BUGGY]  int  i  =  dx.length()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  dx.length()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  dx.length()  -  1;	  int    i    =    dx.length();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
204	[BUG]  [BUGGY]  long  i  =  dx.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  long  i  =  dx.length();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	long  i  =  dx.length();	  int    i    =    dx.length();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
206	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
207	[BUG]  [BUGGY]  For(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
208	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta));	  int    maximalIterationCount    =    Math.max(relativeInt(x1,    oldDelta));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
209	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(delta,  oldDelta));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(delta,  oldDelta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  Math.max(relativeInt(delta,  oldDelta));	  int    maximalIterationCount    =    Math.max(relativeInt(x1,    oldDelta));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
210	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta,  delta));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta,  delta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta,  delta));	  int    maximalIterationCount    =    Math.max(relativeInt(x1,    oldDelta));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
211	[BUG]  [BUGGY]  delta++;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  delta++;  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	delta++;	  if(i    <    =    0.0)    {    delta++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
212	[BUG]  [BUGGY]  luate(dx,  y0,  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  y0,  oldDelta);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  y0,  oldDelta);	  if(i    <    =    0.0)    {    delta++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
213	[BUG]  [BUGGY]  luate(dx,  y0,  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  y0,  oldDelta,  delta);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  y0,  oldDelta,  delta);	  if(i    <    =    0.0)    {    delta++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
214	[BUG]  [BUGGY]  luate(dx,  y0,  oldDelta,  delta));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  y0,  oldDelta,  delta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  y0,  oldDelta,  delta));	  if(i    <    =    0.0)    {    delta++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
215	[BUG]  [BUGGY]  if(i  >  0.0)  {  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0.0)  {  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0.0)  {  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
216	[BUG]  [BUGGY]  if(i  >  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
217	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(f,    null);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
218	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(f,    null);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
219	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(f,    null);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
220	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  throw  new  MaxIterationsExceededException(f,  null);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  throw  new  MaxIterationsExceededException(f,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  =  0.0)  {  throw  new  MaxIterationsExceededException(f,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(f,    null);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
221	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
222	[BUG]  [BUGGY]  if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
225	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
226	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta,  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance,  oldDelta,  delta);	  int    i    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
227	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance,  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(tolerance,  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance,  delta);	  int    i    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
228	[BUG]  [BUGGY]  int  i  =  Math.min(relativeTolerance,  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeTolerance,  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeTolerance,  oldDelta);	  int    i    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
229	[BUG]  [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeErrorCount,  oldDelta);	  int    i    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
230	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  dx,  oldDelta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  dx,  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  dx,  oldDelta);	  int    i    =    Math.min(relativeAccuracy    *    tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
231	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x2,  oldDelta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x2,  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  x2,  oldDelta);	  int    i    =    Math.min(relativeAccuracy    *    tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
232	[BUG]  [BUGGY]  if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
233	[BUG]  [BUGGY]  if(i  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
234	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
235	[BUG]  [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeRealFunctionCount,  delta);	  int    i    =    Math.min(relativeRealFunctionCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
236	[BUG]  [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta,  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeRealFunctionCount,  oldDelta,  delta);	  int    i    =    Math.min(relativeRealFunctionCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
237	[BUG]  [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta  +  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeRealFunctionCount,  oldDelta  +  delta);	  int    i    =    Math.min(relativeRealFunctionCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
238	[BUG]  [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta,  tolerance);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta,  tolerance);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeRealFunctionCount,  oldDelta,  tolerance);	  int    i    =    Math.min(relativeRealFunctionCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
240	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
241	[BUG]  [BUGGY]  luate(dx,  y1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  y1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  y1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
242	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
243	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
244	[BUG]  [BUGGY]  For(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
245	[BUG]  [BUGGY]  float  i  =  oldDelta.size()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  float  i  =  oldDelta.size()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	float  i  =  oldDelta.size()  -  1;	  int    i    =    oldDelta.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
246	[BUG]  [BUGGY]  bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
247	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
248	[BUG]  [BUGGY]  safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
249	[BUG]  [BUGGY]  bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ",  maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ",  maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ",  maximalIterationCount);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
250	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
251	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta.length());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta.length());	  int    i    =    Math.min(relativeAccuracy    *    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
252	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length(),  tolerance);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length(),  tolerance);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta.length(),  tolerance);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
253	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance.length());	  int    i    =    Math.min(relativeAccuracy    *    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
254	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length()  -  1);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta.length()  -  1);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
255	[BUG]  [BUGGY]  if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
256	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
257	[BUG]  [BUGGY]  if(dx  <  =  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
258	[BUG]  [BUGGY]  int  i  =  f.value(x2)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x2)-  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x2)-  1;	  int    i    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
259	[BUG]  [BUGGY]  double  i  =  f.value(x1)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  f.value(x1)-  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.value(x1)-  1;	  int    i    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
260	[BUG]  [BUGGY]  int  i  =  f.value(x1)/  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x1)/  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x1)/  1;	  int    i    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
261	[BUG]  [BUGGY]  int  i  =  Math.min(x2,  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(x2,  oldDelta,  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(x2,  oldDelta,  delta);	  int    i    =    Math.min(x2,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
262	[BUG]  [BUGGY]  if(delta  >  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.0)  {  if(y1  >  0)  {  y2  =  y0;  }	  if(dx    >    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
263	[BUG]  [BUGGY]  if(dx  >  0.0)  {  if(y1  <  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  0.0)  {  if(y1  <  0)  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0.0)  {  if(y1  <  0)  {  y2  =  y0;  }	  if(dx    >    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
264	[BUG]  [BUGGY]  int  i  =  this.oldDelta.size()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  this.oldDelta.size()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  this.oldDelta.size()  -  1;	  int    i    =    this.oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
265	[BUG]  [BUGGY]  double  i  =  this.oldDelta.size();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  this.oldDelta.size();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  this.oldDelta.size();	  int    i    =    this.oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
266	[BUG]  [BUGGY]  int  i  =  this.oldDelta.size()  -  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  this.oldDelta.size()  -  2;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  this.oldDelta.size()  -  2;	  int    i    =    this.oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
267	[BUG]  [BUGGY]  if(i  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
268	[BUG]  [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
269	[BUG]  [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
270	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  oldDelta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  delta,  oldDelta.length());	  int    i    =    Math.min(relativeAccuracy    *    tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
271	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  dx,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  dx,  oldDelta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  dx,  oldDelta.length());	  int    i    =    Math.min(relativeAccuracy    *    tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
272	[BUG]  [BUGGY]  float  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  float  i  =  oldDelta.length();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	float  i  =  oldDelta.length();	  int    i    =    oldDelta.length()    -    2;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
273	[BUG]  [BUGGY]  if(i  >=  0.0)  {  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(delta    >=    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
274	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(delta    >=    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
275	[BUG]  [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
276	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  <  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
277	[BUG]  [BUGGY]  if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
278	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
279	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
280	[BUG]  [BUGGY]  int  i  =  f.getIndex()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.getIndex()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.getIndex()  -  1;	  int    i    =    f.getIndex();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
281	[BUG]  [BUGGY]  double  i  =  f.getIndex();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  f.getIndex();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.getIndex();	  int    i    =    f.getIndex();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
282	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
283	[BUG]  [BUGGY]  if(i  >  0.0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0.0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0.0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
284	[BUG]  [BUGGY]  if(i  >  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
285	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
286	[BUG]  [BUGGY]  if(dx  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
287	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
288	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
289	[BUG]  [BUGGY]  luate(dx,  delta)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  delta)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  delta)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
290	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
291	[BUG]  [BUGGY]  if(i  >  0.5)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0.5)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0.5)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
292	[BUG]  [BUGGY]  if(dx  <  =  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
293	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
294	[BUG]  [BUGGY]  if(dx  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
295	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(dx  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(dx  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(dx  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
296	[BUG]  [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
297	[BUG]  [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
298	[BUG]  [BUGGY]  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null.toString());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null.toString());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null.toString());  }	  if(delta    >=    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
299	[BUG]  [BUGGY]  luate(f,  i,  oldDelta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  i,  oldDelta);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  i,  oldDelta);	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
300	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta,  delta);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta,  delta);	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
301	[BUG]  [BUGGY]  luate(f,  i,  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  i,  oldDelta,  delta);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  i,  oldDelta,  delta);	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
302	[BUG]  [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
303	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
304	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(malformedIterationCount);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(malformedIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(malformedIterationCount);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
305	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(mallIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(mallIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(mallIterationCount);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
306	[BUG]  [BUGGY]  if(dx  >  0.5)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  0.5)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0.5)  {  if(y1  >  0)  {  y2  =  y0;  }	  if(dx    <    =    0.5)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
307	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x2,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x2,  oldDelta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  x2,  oldDelta.length());	  int    i    =    Math.min(relativeAccuracy    *    tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
308	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta));	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
309	[BUG]  [BUGGY]  luate(f.value(x2),  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f.value(x2),  delta);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f.value(x2),  delta);	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
310	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
311	[BUG]  [BUGGY]  double  i  =  f.value(x0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  f.value(x0);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.value(x0);	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
312	[BUG]  [BUGGY]  double  i  =  f.value(x1)+  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  f.value(x1)+  delta;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.value(x1)+  delta;	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
313	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta,  delta));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta,  delta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta,  delta));	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
314	[BUG]  [BUGGY]  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
315	[BUG]  [BUGGY]  int  i  =  f.value(x2)/  tolerance;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x2)/  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x2)/  tolerance;	  int    i    =    f.value(x1)-    tolerance;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
316	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(dx,  oldDelta));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeInt(dx,  oldDelta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  Math.max(relativeInt(dx,  oldDelta));	  int    maximalIterationCount    =    Math.max(relativeInt(x1,    oldDelta));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
317	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  if(delta  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  if(delta  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  if(delta  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
318	[BUG]  [BUGGY]  if(i  <  =  0.0  &&  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  &&  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  &&  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
319	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(delta    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
320	[BUG]  [BUGGY]  int  i  =  delta.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  delta.length();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  delta.length();	  int    i    =    oldDelta.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
321	[BUG]  [BUGGY]  (y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  (y1  >  0)  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	(y1  >  0)  {  y2  =  y0;  }	  if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
322	[BUG]  [BUGGY]  (y1  >  0)  ==  (y2  >  0))  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  (y1  >  0)  ==  (y2  >  0))  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	(y1  >  0)  ==  (y2  >  0))  {  y2  =  y0;  }	  if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
323	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  delta);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  delta);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  delta);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
324	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException(null);  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
325	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  dx);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  dx);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  dx);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
326	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
327	[BUG]  [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
328	[BUG]  [BUGGY]  if(dx  ==  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  ==  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  ==  0.0)  {  y1  =  f.value(x1)-  0.5  *  oldDelta;  }	  if(dx    <    =    0.0)    {    y1    =    f.value(x1)-    0.5    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
329	[BUG]  [BUGGY]  safeToInt(i)  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(i)  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(i)  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
330	[BUG]  [BUGGY]  safeToInt(i)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(i)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(i)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
331	[BUG]  [BUGGY]  safeToInt(i)  ==  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(i)  ==  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(i)  ==  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
332	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
333	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
334	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  -  delta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.length()  -  delta;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.length()  -  delta;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
335	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
336	[BUG]  [BUGGY]  luate(dx,  y2)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  y2)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  y2)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
337	[BUG]  [BUGGY]  if(i  >  0.0)  {  if(dx  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0.0)  {  if(dx  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0.0)  {  if(dx  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
338	[BUG]  [BUGGY]  if(i  >  0.0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0.0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0.0)  {  if(dx  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
339	[BUG]  [BUGGY]  int  i  =  f.value(x);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x);	  int    i    =    f.getIndex();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
340	[BUG]  [BUGGY]  int  i  =  f.valueIndex();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.valueIndex();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.valueIndex();	  int    i    =    f.getIndex();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
341	[BUG]  [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(nON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
342	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(nON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
343	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(nON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
344	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(non_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
345	[BUG]  [BUGGY]  double  i  =  oldDelta.getIndex()  +  delta;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.getIndex()  +  delta;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.getIndex()  +  delta;	  double    i    =    oldDelta.getIndex();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
346	[BUG]  [BUGGY]  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
347	[BUG]  [BUGGY]  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
348	[BUG]  [BUGGY]  safeToInt(i)  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(i)  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(i)  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
349	[BUG]  [BUGGY]  safeToInt(i)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(i)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(i)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
350	[BUG]  [BUGGY]  safeToInt(i)>  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(i)>  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(i)>  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
351	[BUG]  [BUGGY]  safeToInt(0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
352	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta)>  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta)>  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta)>  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON	  if(dx    <    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
353	[BUG]  [BUGGY]  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(dx    <    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
354	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
355	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESS  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESS  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESS	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
356	[BUG]  [BUGGY]  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
357	[BUG]  [BUGGY]  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
358	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  y1  =  f.value(x2)-  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >=  0.0)  {  y1  =  f.value(x2)-  0.5  *  tolerance;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  0.0)  {  y1  =  f.value(x2)-  0.5  *  tolerance;  }	  if(dx    >=    0.0)    {    y1    =    f.value(x1)-    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
359	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
360	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
361	[BUG]  [BUGGY]  luate(dx,  oldDelta,  delta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  oldDelta,  delta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  oldDelta,  delta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
362	[BUG]  [BUGGY]  luate(dx,  oldDelta,  delta)>  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  oldDelta,  delta)>  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  oldDelta,  delta)>  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
363	[BUG]  [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(delta    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
364	[BUG]  [BUGGY]  int  i  =  oldDelta.getIndex()  *  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  oldDelta.getIndex()  *  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.getIndex()  *  1;	  int    i    =    oldDelta.getIndex()    -    1;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
365	[BUG]  [BUGGY]  Integer  i  =  oldDelta.getIndex();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  Integer  i  =  oldDelta.getIndex();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	Integer  i  =  oldDelta.getIndex();	  int    i    =    oldDelta.getIndex()    -    2;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
366	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  oldDelta);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  oldDelta);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
367	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  delta);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  delta);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  delta);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
368	[BUG]  [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeRealFunctionCount,  oldDelta  -  delta);	  int    i    =    Math.min(relativeRealFunctionCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
369	[BUG]  [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta  +  1);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeRealFunctionCount,  oldDelta  +  1);	  int    i    =    Math.min(relativeRealFunctionCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
370	[BUG]  [BUGGY]  if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
371	[BUG]  [BUGGY]  safeToInt(i)  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(i)  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(i)  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
372	[BUG]  [BUGGY]  safeToInt(i)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(i)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(i)  {  throw  new  MaxIterationsExceededException(null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
373	[BUG]  [BUGGY]  safeToInt(i)>  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(i)>  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(i)>  0.0)  {  throw  new  MaxIterationsExceededException(null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
374	[BUG]  [BUGGY]  safeToInt(0)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToInt(0)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToInt(0)  {  throw  new  MaxIterationsExceededException(null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
375	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  if(y2  >  0)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  if(y2  >  0)  {  y1  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  if(y2  >  0)  {  y1  =  y0;  }	  if(delta    <    =    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
376	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length(),  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length(),  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta.length(),  delta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
377	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
378	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
379	[BUG]  [BUGGY]  luate(f,  dx,  oldDelta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  oldDelta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  oldDelta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
380	[BUG]  [BUGGY]  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
381	[BUG]  [BUGGY]  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
382	[BUG]  [BUGGY]  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
383	[BUG]  [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
384	[BUG]  [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
385	[BUG]  [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
386	[BUG]  [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  old  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  old  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  old	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
387	[BUG]  [BUGGY]  y1  =  f.value(x1)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  y1  =  f.value(x1)+  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(x1)+  1;	  y1    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
388	[BUG]  [BUGGY]  y1  =  f.value(x1)+  tolerance;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  y1  =  f.value(x1)+  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(x1)+  tolerance;	  y1    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
389	[BUG]  [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
390	[BUG]  [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount()  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount()  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount()	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
391	[BUG]  [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
392	[BUG]  [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
393	[BUG]  [BUGGY]  int  i  =  Math.min(y2,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(y2,  oldDelta  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(y2,  oldDelta  -  delta);	  int    i    =    Math.min(y2,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
394	[BUG]  [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
395	[BUG]  [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
396	[BUG]  [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue()  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue()  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue()	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
397	[BUG]  [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getValue());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getValue());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
398	[BUG]  [BUGGY]  luate(dx,  oldDelta,  delta));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  oldDelta,  delta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  oldDelta,  delta));	  if(i    <    =    0.0)    {    delta++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
399	[BUG]  [BUGGY]  luate(dx,  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(dx,  oldDelta,  delta);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(dx,  oldDelta,  delta);	  if(i    <    =    0.0)    {    delta++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
400	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta  -  i1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta  -  i1);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(delta,  oldDelta  -  i1);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
401	[BUG]  [BUGGY]  int  i  =  Math.min(primeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(primeAccuracy  *  oldDelta,  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(primeAccuracy  *  oldDelta,  delta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
402	[BUG]  [BUGGY]  int  maximalIterationCount  =  f.value(x2)-  tolerance;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  maximalIterationCount  =  f.value(x2)-  tolerance;  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  f.value(x2)-  tolerance;	  int    maximalIterationCount    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
403	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta  +  i1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta  +  i1);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(delta,  oldDelta  +  i1);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
404	[BUG]  [BUGGY]  int  i  =  oldDelta.doubleValue()  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  oldDelta.doubleValue()  *  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.doubleValue()  *  1;	  int    i    =    oldDelta.doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
405	[BUG]  [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  if(dx  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
406	[BUG]  [BUGGY]  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >=  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
407	[BUG]  [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
408	[BUG]  [BUGGY]  safeTokenType(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeTokenType(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeTokenType(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
409	[BUG]  [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  dx,  delta))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
410	[BUG]  [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta,  oldDelta.get(i));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeToken(dx)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta,  oldDelta.get(i));  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
411	[BUG]  [BUGGY]  y1  =  f.value(x2)-  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  y1  =  f.value(x2)-  0.5  *  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	y1  =  f.value(x2)-  0.5  *  tolerance;	  y1    =    f.value(x1)-    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
412	[BUG]  [BUGGY]  if(delta  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  ==  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(f,    null);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
413	[BUG]  [BUGGY]  luate(f,  oldDelta,  delta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  oldDelta,  delta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  oldDelta,  delta))  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(f,    null);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
414	[BUG]  [BUGGY]  int  i  =  Math.min(relativeTokenType.min(x2,  oldDelta));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeTokenType.min(x2,  oldDelta));  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeTokenType.min(x2,  oldDelta));	  int    i    =    Math.min(x2,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
415	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
416	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta.length()  -  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta.length()  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance,  oldDelta.length()  -  delta);	  int    i    =    Math.min(tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
417	[BUG]  [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeRealFunctionCount,  oldDelta.length());	  int    i    =    Math.min(tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
418	[BUG]  [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(tolerance,  oldDelta  +  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(tolerance,  oldDelta  +  delta);	  int    i    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
419	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy,  oldDelta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy,  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy,  oldDelta);	  int    i    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
420	[BUG]  [BUGGY]  float  i  =  delta.doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  float  i  =  delta.doubleValue();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	float  i  =  delta.doubleValue();	  int    i    =    delta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
421	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(malformedIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(malformedIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(malformedIterationCount);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
422	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nullIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nullIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nullIterationCount);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
423	[BUG]  [BUGGY]  if(i  <  =  0.0  &&  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  &&  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  &&  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
424	[BUG]  [BUGGY]  int  i  =  f.value(x0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x0);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x0);	  int    i    =    f.size();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
425	[BUG]  [BUGGY]  if(delta  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
426	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(x2  +  1);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(x2  +  1);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(x2  +  1);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
427	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(x2,  maximalIterationCount  +  1);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(x2,  maximalIterationCount  +  1);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(x2,  maximalIterationCount  +  1);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
428	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nullIterationCount  +  1);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nullIterationCount  +  1);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nullIterationCount  +  1);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
429	[BUG]  [BUGGY]  if(i  >  0)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
430	[BUG]  [BUGGY]  if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }	  if(delta    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
431	[BUG]  [BUGGY]  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
432	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  -  tolerance;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.length()  -  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.length()  -  tolerance;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
433	[BUG]  [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  tolerance)  {  if(dx  >=  0.0)  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
434	[BUG]  [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
435	[BUG]  [BUGGY]  int  i  =  Math.min(primaryAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(primaryAccuracy  *  oldDelta,  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(primaryAccuracy  *  oldDelta,  delta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
436	[BUG]  [BUGGY]  int  i  =  f.value(x1).getIndex();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x1).getIndex();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x1).getIndex();	  int    i    =    f.getIndex();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
437	[BUG]  [BUGGY]  if(dx  >  0.5  *  tolerance)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  0.5  *  tolerance)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  0.5  *  tolerance)  {  if(y1  >  0)  {  y2  =  y0;  }	  if(dx    >    0.0)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
438	[BUG]  [BUGGY]  if(i  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
439	[BUG]  [BUGGY]  if(delta  <  =  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  =  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  =  dx)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
440	[BUG]  [BUGGY]  long  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  long  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	long  maximalIterationCount  =  Math.max(relativeInt(x1,  oldDelta));	  int    maximalIterationCount    =    Math.max(relativeInt(x1,    oldDelta));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
441	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
442	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  0.0)  {  i++;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  0.0)  {  i++;  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  0.0)  {  i++;  }	  if(dx    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
443	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(malformedIterationCount);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(malformedIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(malformedIterationCount);  }	  if(dx    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
444	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(1));  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(1));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(1));  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
445	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.get(i));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.get(i));  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
446	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.getItemCount());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.getItemCount());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
447	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  2,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  2,  oldDelta.getItemCount());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  2,  oldDelta.getItemCount());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
448	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length()  -  delta.length());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length()  -  delta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta.length()  -  delta.length());	  int    i    =    Math.min(i,    oldDelta.length()    -    delta.length());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
449	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta.length()  -  delta.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta.length()  -  delta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta.length()  -  delta.length());	  int    i    =    Math.min(i,    oldDelta.length()    -    delta.length());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
450	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
451	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
452	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
453	[BUG]  [BUGGY]  double  i  =  f.value(x1)+  tolerance;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  f.value(x1)+  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  f.value(x1)+  tolerance;	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
454	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
455	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  dx,  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  Math.max(relativeAccuracy  *  dx,  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	Math.max(relativeAccuracy  *  dx,  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
456	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  dx,  tolerance))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  Math.max(relativeAccuracy  *  dx,  tolerance))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	Math.max(relativeAccuracy  *  dx,  tolerance))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
457	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.length);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.length);  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
458	[BUG]  [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
459	[BUG]  [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  tolerance)  {  if(dx  >=  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }	  if(dx    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
460	[BUG]  [BUGGY]  bucket  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  =  f.value(x2);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  =  f.value(x2);	  if(i    <    =    0.0)    {    delta++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
461	[BUG]  [BUGGY]  luate(f,  i,  oldDelta,  delta));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  luate(f,  i,  oldDelta,  delta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	luate(f,  i,  oldDelta,  delta));	  if(i    <    =    0.0)    {    delta++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
462	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  if(delta  <  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  if(delta  <  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0)    {    if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
463	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length()  -  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta.length()  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta.length()  -  delta);	  int    i    =    Math.min(i,    oldDelta.length()    -    delta);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
464	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta.length()  -  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta.length()  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta.length()  -  delta);	  int    i    =    Math.min(i,    oldDelta.length()    -    delta);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
465	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " "));  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
466	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
467	[BUG]  [BUGGY]  if(i  >  oldDelta)  {  if(dx  >  0)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  oldDelta)  {  if(dx  >  0)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  oldDelta)  {  if(dx  >  0)  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
468	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
469	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(f,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(f,    null);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
470	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(f,  null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(f,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  throw  new  MaxIterationsExceededException(f,  null);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(f,    null);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
471	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta  +  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta  +  delta);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
472	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
473	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
474	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
475	[BUG]  [BUGGY]  if(dx  <  =  0.5  *  tolerance)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0.5  *  tolerance)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0.5  *  tolerance)  {  if(y1  >  0)  {  y2  =  y0;  }	  if(dx    <    =    0.5)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
476	[BUG]  [BUGGY]  int  i  =  oldDelta.indexOf(delta)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  oldDelta.indexOf(delta)-  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  oldDelta.indexOf(delta)-  1;	  int    i    =    oldDelta.size()    -    2;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
477	[BUG]  [BUGGY]  long  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  long  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	long  maximalIterationCount  =  Math.max(relativeInt(x2,  oldDelta));	  int    maximalIterationCount    =    Math.max(relativeInt(x2,    oldDelta));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
478	[BUG]  [BUGGY]  if(dx  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
479	[BUG]  [BUGGY]  if(i  <  =  tolerance)  {  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  tolerance)  {  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  tolerance)  {  if(dx  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    <    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
480	[BUG]  [BUGGY]  if(i  <  =  tolerance)  {  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  tolerance)  {  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  tolerance)  {  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    <    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
481	[BUG]  [BUGGY]  if(i  <  =  tolerance)  {  if(dx  <  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  tolerance)  {  if(dx  <  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  tolerance)  {  if(dx  <  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    <    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
482	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  oldDelta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  oldDelta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  oldDelta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
483	[BUG]  [BUGGY]  Integer  i  =  oldDelta.size();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  Integer  i  =  oldDelta.size();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	Integer  i  =  oldDelta.size();	  int    i    =    oldDelta.size()    +    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
484	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
485	[BUG]  [BUGGY]  if(i  >  0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
486	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
487	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  f.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
488	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(0)))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(0)))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(0)))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
489	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  RuntimeException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
490	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(0)))  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(0)))  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!dx.equals(oldDelta.get(0)))  {  throw  new  RuntimeException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
491	[BUG]  [BUGGY]  long  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  long  i  =  oldDelta.length();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	long  i  =  oldDelta.length();	  int    i    =    oldDelta.length()    -    2;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
492	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
493	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
494	[BUG]  [BUGGY]  if(i  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
495	[BUG]  [BUGGY]  if(i  >  0)  {  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
496	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x1,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x1,  oldDelta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  x1,  oldDelta.length());	  int    i    =    Math.min(relativeAccuracy    *    tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
497	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
498	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
499	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
500	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount  +  1);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
501	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount  +  1);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount  +  1);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount  +  1);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
502	[BUG]  [BUGGY]  if(delta  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(non_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
503	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
504	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount,  delta);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount,  delta);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount,  delta);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
505	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount,  null);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount,  null);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
506	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
507	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
508	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  oldDelta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ",  oldDelta);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ",    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
509	[BUG]  [BUGGY]  if(dx  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
510	[BUG]  [BUGGY]  int  maximalIterationCount  =  f.value(x1)-  tolerance;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  maximalIterationCount  =  f.value(x1)-  tolerance;  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  maximalIterationCount  =  f.value(x1)-  tolerance;	  int    maximalIterationCount    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
511	[BUG]  [BUGGY]  safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
512	[BUG]  [BUGGY]  safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	safeThan  <  =  0.0)  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
513	[BUG]  [BUGGY]  bucketMap.put(new  Double(x0,  oldDelta));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucketMap.put(new  Double(x0,  oldDelta));  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucketMap.put(new  Double(x0,  oldDelta));	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
514	[BUG]  [BUGGY]  double  i  =  oldDelta.size()  -  tolerance;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.size()  -  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.size()  -  tolerance;	  double    i    =    oldDelta.size();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
515	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
516	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
517	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
518	[BUG]  [BUGGY]  if(i  <  =  tolerance)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  tolerance)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  tolerance)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
519	[BUG]  [BUGGY]  int  i  =  token.length()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  token.length()  -  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  token.length()  -  1;	  int    i    =    oldDelta.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
520	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
521	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minimalIterationCount);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
522	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
523	[BUG]  [BUGGY]  int  i  =  dx.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  dx.length()  +  1;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  dx.length()  +  1;	  int    i    =    dx.length();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
524	[BUG]  [BUGGY]  if(delta  >  0.5  *  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  0.5  *  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  0.5  *  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0.5)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
525	[BUG]  [BUGGY]  if(i  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    >    0.5)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
526	[BUG]  [BUGGY]  if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(delta    >    0.5)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
527	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  tolerance,  oldDelta  -  delta);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
528	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta  -  oldDelta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta  -  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta  -  oldDelta);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
529	[BUG]  [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta  -  delta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeErrorCount,  oldDelta  -  delta);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
530	[BUG]  [BUGGY]  int  i  =  f.value(x1).size();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  f.value(x1).size();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  f.value(x1).size();	  int    i    =    f.size();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
531	[BUG]  [BUGGY]  if(dx  <  =  tolerance)  {  if(i  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  tolerance)  {  if(i  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  tolerance)  {  if(i  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
532	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
533	[BUG]  [BUGGY]  int  i  =  this.oldDelta.getIndex();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  this.oldDelta.getIndex();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  this.oldDelta.getIndex();	  int    i    =    oldDelta.getIndex()    -    2;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
534	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  <  =  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    0)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
535	[BUG]  [BUGGY]  if(dx  <  =  tolerance)  {  if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  tolerance)  {  if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  tolerance)  {  if(i  >  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    0)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
536	[BUG]  [BUGGY]  if(i  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
537	[BUG]  [BUGGY]  if(y2  >  0)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(y2  >  0)  {  y1  =  y0;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(y2  >  0)  {  y1  =  y0;  }	  if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
538	[BUG]  [BUGGY]  if(y0  >  0)  {  y2  =  y1;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(y0  >  0)  {  y2  =  y1;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(y0  >  0)  {  y2  =  y1;  }	  if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
539	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  dx,  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  Math.max(relativeAccuracy  *  dx,  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	Math.max(relativeAccuracy  *  dx,  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
540	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.getValue());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.getValue());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
541	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getValue());  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getValue());  }	  if(dx    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
542	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  dx++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(dx    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
543	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  if(i  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  if(i  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  if(i  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
544	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  if(dx  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
545	[BUG]  [BUGGY]  if(dx  <  =  tolerance)  {  if(i  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  tolerance)  {  if(i  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  tolerance)  {  if(i  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
546	[BUG]  [BUGGY]  if(i  >  oldDelta)  {  if(dx  >  0)  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  oldDelta)  {  if(dx  >  0)  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  oldDelta)  {  if(dx  >  0)  {  throw  new  MaxIterationsExceededException(nON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(nON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
547	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  >  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  if(delta    >=    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
548	[BUG]  [BUGGY]  if(i  <  =  0.0  ||  oldDelta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0  ||  oldDelta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0  ||  oldDelta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(i    <    =    0.0    ||    oldDelta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
549	[BUG]  [BUGGY]  double  i  =  tolerance.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  tolerance.doubleValue();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  tolerance.doubleValue();	  double    i    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
550	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy,  oldDelta.length());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy,  oldDelta.length());  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy,  oldDelta.length());	  int    i    =    Math.min(tolerance,    oldDelta.length());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
551	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x1,  oldDelta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x1,  oldDelta);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  x1,  oldDelta);	  int    i    =    Math.min(relativeAccuracy    *    tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
552	[BUG]  [BUGGY]  bucketMap.put(x1,  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucketMap.put(x1,  oldDelta,  delta);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucketMap.put(x1,  oldDelta,  delta);	  if(i    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
553	[BUG]  [BUGGY]  if(dx  >=  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >=  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  tolerance;  }  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >=  =  0.0)  {  y1  =  f.value(x1)-  0.5  *  tolerance;  }	  if(dx    >=    0.0)    {    y1    =    f.value(x1)-    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
554	[BUG]  [BUGGY]  double  i  =  oldDelta.getIndex()  *  tolerance;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  double  i  =  oldDelta.getIndex()  *  tolerance;  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	double  i  =  oldDelta.getIndex()  *  tolerance;	  double    i    =    oldDelta.getIndex();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
555	[BUG]  [BUGGY]  if(delta  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(delta  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(delta  <  tolerance)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE);  }	  if(delta    >    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
556	[BUG]  [BUGGY]  bucket  <  =  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  <  =  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  <  =  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    0)    {    if(dx    >    tolerance)    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
557	[BUG]  [BUGGY]  bucket  <  =  0  ||  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  <  =  0  ||  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  <  =  0  ||  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(i    >    0)    {    if(dx    >    tolerance)    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
558	[BUG]  [BUGGY]  bucket  <  =  0  ||  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  <  =  0  ||  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  <  =  0  ||  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);	  if(i    >    0)    {    if(dx    >    tolerance)    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
559	[BUG]  [BUGGY]  bucket  <  =  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  bucket  <  =  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	bucket  <  =  dx  >  tolerance)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);	  if(i    >    0)    {    if(dx    >    tolerance)    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
560	[BUG]  [BUGGY]  if(i  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.5)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  if(i    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
561	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(non_bracKETING_MESSAGE);  }	  if(i    >    tolerance)    {    if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
562	[BUG]  [BUGGY]  Integer  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  Integer  i  =  oldDelta.length();  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	Integer  i  =  oldDelta.length();	  int    i    =    oldDelta.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
563	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  relativeAccuracy);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  relativeAccuracy);  [BUGGY]      i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  relativeAccuracy);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
564	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	for(int  i  =  1;  i  <  dx.size();  i++)  {  if(!dx.equals(oldDelta.get(i)))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    1;    i    <    oldDelta.size();    i++)    {    if(!dx.equals(oldDelta.get(i)))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
565	[BUG]  [BUGGY]  if(dx  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  0);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(dx  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  0);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(dx  <  =  0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  0);  }	  if(dx    <    =    tolerance)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
566	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
567	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  0)  {  if(dx  >  oldDelta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
568	[BUG]  [BUGGY]  if(i  >  oldDelta)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >  oldDelta)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >  oldDelta)  {  if(dx  <  =  0.0)  {  throw  new  MaxIterationsExceededException(NON_BRACKETING_MESSAGE,  NON_BRACKETING_MESSAGE);  }	  if(dx    >    oldDelta)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(NON_BRACKETING_MESSAGE,    NON_BRACKETING_MESSAGE);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
569	[BUG]  [BUGGY]  if(i  >=  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(delta    >=    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
570	[BUG]  [BUGGY]  if(i  >=  0.0)  {  delta++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  >=  0.0)  {  delta++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  >=  0.0)  {  delta++;  }  else  {  throw  new  MaxIterationsExceededException(null,  null);  }	  if(delta    >=    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(null,    null);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
571	[BUG]  [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }      [BUGGY]  if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }  [BUGGY]      }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	311	311	1	replace	if(i  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(minmalIterationCount);  }	  if(delta    <    =    0.0)    {    i++;    }    else    {    throw    new    MaxIterationsExceededException(maximalIterationCount);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
