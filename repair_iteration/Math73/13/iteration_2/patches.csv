bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  *  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  *  1);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  *  1);	  ret    =    Math.max(ret,    sign    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  ret  =  Math.min(ret,  sign  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.min(ret,  sign  +  1);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.min(ret,  sign  +  1);	  ret    =    Math.max(ret,    sign    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  +  1,  min);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  +  1,  min);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  +  1,  min);	  ret    =    Math.max(ret,    sign    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  Double  min  =  f.value(sign  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(sign  +  1);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(sign  +  1);	  Double    min    =    f.value(min    +    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
5	[BUG]  [BUGGY]  Double  min  =  f.value(min,  sign  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(min,  sign  +  1);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min,  sign  +  1);	  Double    min    =    f.value(min    +    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
6	[BUG]  [BUGGY]  Double  yMin  =  f.value(sign);  Double  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  yMin  =  f.value(sign);  Double  yMax  =  f.value(max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  yMin  =  f.value(sign);  Double  yMax  =  f.value(max);	  Double    yMin    =    f.value(min);    Double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(min,  max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min,  max);	  double    yMin    =    f.value(min,    sign);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
8	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  sign  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(min,  sign  +  1);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min,  sign  +  1);	  double    yMin    =    f.value(min,    sign);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
9	[BUG]  [BUGGY]  Double  min  =  f.value(min  +  sign,  ret);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(min  +  sign,  ret);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min  +  sign,  ret);	  Double    min    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(sign);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(sign);	  double    yMin    =    f.value(min,    max);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
11	[BUG]  [BUGGY]  if(sign  >  0)  {  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  if(sign  >  0)  {  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  }  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if(sign  >  0)  {  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  }	  double    yMin    =    f.value(min,    max);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
12	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign,  1);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign,  1);	  ret    =    Math.max(ret,    sign,    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
13	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign,  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign,  2);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign,  2);	  ret    =    Math.max(ret,    sign,    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
14	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign,  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign,  3);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign,  3);	  ret    =    Math.max(ret,    sign,    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
15	[BUG]  [BUGGY]  if  (Math.abs(sign)  <  sign)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  if  (Math.abs(sign)  <  sign)  {  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if  (Math.abs(sign)  <  sign)  {	  if    (Math.abs(sign)    <    =    sign)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
16	[BUG]  [BUGGY]  if  (Math.abs(sign)  <  =  Math.abs(yMax))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  if  (Math.abs(sign)  <  =  Math.abs(yMax))  {  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if  (Math.abs(sign)  <  =  Math.abs(yMax))  {	  if    (Math.abs(yMax)    <    =    sign)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
17	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  +  1,  yMin);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  +  1,  yMin);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  +  1,  yMin);	  ret    =    Math.max(ret,    sign    +    1,    sign);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  +  1,  yMax);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  +  1,  yMax);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  +  1,  yMax);	  ret    =    Math.max(ret,    sign    +    1,    sign);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  *  sign  +  1,  sign);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  *  sign  +  1,  sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  *  sign  +  1,  sign);	  ret    =    Math.max(ret,    sign    +    1,    sign);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  if  (Math.abs(yMax)  <  sign)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  if  (Math.abs(yMax)  <  sign)  {  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if  (Math.abs(yMax)  <  sign)  {	  if    (Math.abs(yMin)    <    sign)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  double  min  =  f.value(min)-  sign  *  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min)-  sign  *  1;  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min)-  sign  *  1;	  double    min    =    f.value(min)-    sign    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  double  min  =  f.value(min)/  sign  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min)/  sign  +  1;  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min)/  sign  +  1;	  double    min    =    f.value(min)-    sign    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);	  Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
24	[BUG]  [BUGGY]  Math.abs(yMax)  <  functionValueAccuracy)  {  setResult(min,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(yMax)  <  functionValueAccuracy)  {  setResult(min,  0);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(yMax)  <  functionValueAccuracy)  {  setResult(min,  0);	  Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
25	[BUG]  [BUGGY]  Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);	  Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
26	[BUG]  [BUGGY]  double  min  =  f.value(sign)/  sign;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(sign)/  sign;  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(sign)/  sign;	  double    min    =    f.value(min)/    sign;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
27	[BUG]  [BUGGY]  double  min  =  f.value(min)/  sign  *  ret;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min)/  sign  *  ret;  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min)/  sign  *  ret;	  double    min    =    f.value(min)/    sign;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  double  min  =  f.value(min,  sign  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min,  sign  +  1);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min,  sign  +  1);	  double    min    =    f.value(min,    sign);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  double  yMin  =  f.value(s);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(s);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(s);	  double    yMin    =    f.value(sign);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
30	[BUG]  [BUGGY]  double  yMin  =  f.value(sig);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(sig);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(sig);	  double    yMin    =    f.value(sign);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
31	[BUG]  [BUGGY]  Double  yMin  =  f.value(sign);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  yMin  =  f.value(sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  yMin  =  f.value(sign);	  Double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  double  min  =  f.value(min  +  sign,  ret);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min  +  sign,  ret);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min  +  sign,  ret);	  double    min    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  Double  min  =  f.value(min,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(min,  max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min,  max);	  double    min    =    f.value(sign,    max);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  Math.abs(sign)  <  functionValueAccuracy)  {  setResult(min,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(sign)  <  functionValueAccuracy)  {  setResult(min,  0);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(sign)  <  functionValueAccuracy)  {  setResult(min,  0);	  Math.abs(sign)    <    =    functionValueAccuracy)    {    setResult(min,    0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  double  min  =  f.value(sign  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(sign  +  1);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(sign  +  1);	  double    min    =    f.value(min    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
36	[BUG]  [BUGGY]  Double  min  =  f.value(sign,  min);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(sign,  min);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(sign,  min);	  Double    min    =    f.value(min,    sign);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  Double  min  =  f.value(sign,  ret);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(sign,  ret);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(sign,  ret);	  Double    min    =    f.value(min,    ret);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
38	[BUG]  [BUGGY]  Double  min  =  f.value(ret,  min);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(ret,  min);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(ret,  min);	  Double    min    =    f.value(min,    ret);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
39	[BUG]  [BUGGY]  double  min  =  f.value(sign,  yMax);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(sign,  yMax);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(sign,  yMax);	  double    min    =    f.value(min,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
40	[BUG]  [BUGGY]  double  yMin  =  f.value(min);  double  ymax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(min);  double  ymax  =  f.value(max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min);  double  ymax  =  f.value(max);	  if(f.isReal())    {    double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
41	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  *  yMin);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  *  yMin);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  *  yMin);	  ret    =    Math.max(ret,    sign    *    yMax);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
42	[BUG]  [BUGGY]  ret  =  Math.min(ret,  sign  *  yMax);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.min(ret,  sign  *  yMax);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.min(ret,  sign  *  yMax);	  ret    =    Math.max(ret,    sign    *    yMax);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
43	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  /  yMax);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  /  yMax);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  /  yMax);	  ret    =    Math.max(ret,    sign    *    yMax);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
44	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  *  yMax  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  *  yMax  +  1);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  *  yMax  +  1);	  ret    =    Math.max(ret,    sign    *    yMax);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
45	[BUG]  [BUGGY]  double  min  =  f.value(sign,  ret);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(sign,  ret);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(sign,  ret);	  double    min    =    f.value(min,    ret);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
46	[BUG]  [BUGGY]  Double  min  =  f.value(sign,  yMax);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(sign,  yMax);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(sign,  yMax);	  Double    min    =    f.value(min,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
47	[BUG]  [BUGGY]  Double  min  =  f.value(sign,  yMin);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(sign,  yMin);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(sign,  yMin);	  Double    min    =    f.value(min,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
48	[BUG]  [BUGGY]  double  min  =  f.value(sign)-  ret;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(sign)-  ret;  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(sign)-  ret;	  double    min    =    f.value(sign)-    sign;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
49	[BUG]  [BUGGY]  double  yMin  =  f.value(sign  +  min);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(sign  +  min);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(sign  +  min);	  double    yMin    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
50	[BUG]  [BUGGY]  ret  =  Math.min(ret,  sign,  yMin);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.min(ret,  sign,  yMin);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.min(ret,  sign,  yMin);	  ret    =    Math.min(ret,    sign);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  double  yMin  =  f.value(sign);  double  yMax  =  f.value(min);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(sign);  double  yMax  =  f.value(min);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(sign);  double  yMax  =  f.value(min);	  double    yMin    =    f.value(sign);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  +  sign);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  +  sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  +  sign);	  ret    =    Math.max(ret,    sign    *    sign);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  double  min  =  Math.min(sign,  yMin);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  Math.min(sign,  yMin);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  Math.min(sign,  yMin);	  double    min    =    Math.min(yMin,    sign);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
54	[BUG]  [BUGGY]  double  min  =  Math.min(yMin,  sign  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  Math.min(yMin,  sign  -  1);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  Math.min(yMin,  sign  -  1);	  double    min    =    Math.min(yMin,    sign);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
55	[BUG]  [BUGGY]  double  min  =  Math.min(yMin,  sign  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  Math.min(yMin,  sign  +  1);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  Math.min(yMin,  sign  +  1);	  double    min    =    Math.min(yMin,    sign);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
56	[BUG]  [BUGGY]  Math.abs(yMin)  <  =  functionValueAccuracy;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(yMin)  <  =  functionValueAccuracy;  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(yMin)  <  =  functionValueAccuracy;	  Math.abs(sign)    <    =    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
57	[BUG]  [BUGGY]  Math.abs(sign)  <  =  ret;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(sign)  <  =  ret;  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(sign)  <  =  ret;	  Math.abs(sign)    <    =    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  Math.abs(sign)  <  =  functionValueAccuracy  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(sign)  <  =  functionValueAccuracy  +  1;  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(sign)  <  =  functionValueAccuracy  +  1;	  Math.abs(sign)    <    =    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
59	[BUG]  [BUGGY]  Math.abs(yMax)  <  =  sign;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(yMax)  <  =  sign;  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(yMax)  <  =  sign;	  Math.abs(yMax)    <    =    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
60	[BUG]  [BUGGY]  Math.abs(yMax)  <  =  sign  /  functionValueAccuracy;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(yMax)  <  =  sign  /  functionValueAccuracy;  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(yMax)  <  =  sign  /  functionValueAccuracy;	  Math.abs(yMax)    <    =    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
61	[BUG]  [BUGGY]  Double  yMax  =  f.value(sign);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  yMax  =  f.value(sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  yMax  =  f.value(sign);	  double    min    =    f.value(min);    Double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
62	[BUG]  [BUGGY]  Double  yMin  =  f.value(signature);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  yMin  =  f.value(signature);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  yMin  =  f.value(signature);	  Double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  double  min  =  f.value(min,  yMax  -  sign);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min,  yMax  -  sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min,  yMax  -  sign);	  double    min    =    f.value(min,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
64	[BUG]  [BUGGY]  double  min  =  f.value(min  +  sign,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min  +  sign,  max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min  +  sign,  max);	  double    min    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  Math.abs(signed)  <  =  functionValueAccuracy;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(signed)  <  =  functionValueAccuracy;  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(signed)  <  =  functionValueAccuracy;	  Math.abs(yMax)    <    =    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
66	[BUG]  [BUGGY]  double  min  =  f.value(min)-  sign  /  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min)-  sign  /  1;  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min)-  sign  /  1;	  double    min    =    f.value(min)-    sign    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
67	[BUG]  [BUGGY]  double  min  =  f.value(sign)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(sign)-  1;  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(sign)-  1;	  double    min    =    f.value(sign)-    sign;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
68	[BUG]  [BUGGY]  Double  min  =  f.value(min);  Double  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(min);  Double  yMax  =  f.value(max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min);  Double  yMax  =  f.value(max);	  double    min    =    f.value(min);    Double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
69	[BUG]  [BUGGY]  double  yMin  =  f.value(min  *  sign);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(min  *  sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min  *  sign);	  double    yMin    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
70	[BUG]  [BUGGY]  Math.min(yMax,  sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.min(yMax,  sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.min(yMax,  sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);	  Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
71	[BUG]  [BUGGY]  Math.abs(sign)  <  =  functionValueAccuracy)  {  setResult(min,  0,  yMax);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(sign)  <  =  functionValueAccuracy)  {  setResult(min,  0,  yMax);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(sign)  <  =  functionValueAccuracy)  {  setResult(min,  0,  yMax);	  Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
72	[BUG]  [BUGGY]  MutableFunction  f  =  f.createMutableFunction(sign);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  MutableFunction  f  =  f.createMutableFunction(sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	MutableFunction  f  =  f.createMutableFunction(sign);	  if(f.isReal())    {    double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
73	[BUG]  [BUGGY]  MutableFunction  f  =  f.createImaginaryFunction(sign);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  MutableFunction  f  =  f.createImaginaryFunction(sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	MutableFunction  f  =  f.createImaginaryFunction(sign);	  if(f.isReal())    {    double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
74	[BUG]  [BUGGY]  Context.checkState(f.isReal());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Context.checkState(f.isReal());  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Context.checkState(f.isReal());	  if(f.isReal())    {    double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
75	[BUG]  [BUGGY]  RectangleEdge  ret  =  new  RectangleEdge(sign);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  RectangleEdge  ret  =  new  RectangleEdge(sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	RectangleEdge  ret  =  new  RectangleEdge(sign);	  if(f.isReal())    {    double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
76	[BUG]  [BUGGY]  Double  min  =  f.value(min  +  sign,  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(min  +  sign,  max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min  +  sign,  max);	  Double    min    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
77	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  min);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(min,  min);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min,  min);	  double    yMin    =    f.value(min,    sign);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
78	[BUG]  [BUGGY]  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);	  double    yMin    =    f.value(min,    max);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
79	[BUG]  [BUGGY]  double  min  =  Math.min(yMax,  sign);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  Math.min(yMax,  sign);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  Math.min(yMax,  sign);	  double    min    =    Math.min(yMin,    sign);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
80	[BUG]  [BUGGY]  double  yMin  =  f.value(signature);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(signature);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(signature);	  double    yMin    =    f.value(sign);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
81	[BUG]  [BUGGY]  MutableFunction  f  =  f.createImaginaryFunction(min,  sign);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  MutableFunction  f  =  f.createImaginaryFunction(min,  sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	MutableFunction  f  =  f.createImaginaryFunction(min,  sign);	  if(f.isReal())    {    double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
82	[BUG]  [BUGGY]  Double  min  =  f.value(min,  Sign);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(min,  Sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min,  Sign);	  Double    min    =    f.value(min,    ret);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
83	[BUG]  [BUGGY]  ret  =  Math.min(ret,  sign,  yMax);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.min(ret,  sign,  yMax);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.min(ret,  sign,  yMax);	  ret    =    Math.min(ret,    sign);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
84	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  /  sign);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  /  sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  /  sign);	  ret    =    Math.max(ret,    sign    *    sign);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
85	[BUG]  [BUGGY]  Double  min  =  f.value(min,  yMax  -  sign);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(min,  yMax  -  sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min,  yMax  -  sign);	  Double    min    =    f.value(min,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
86	[BUG]  [BUGGY]  Double  min  =  f.value(min,  yMin);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(min,  yMin);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min,  yMin);	  Double    min    =    f.value(min,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
87	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign,  0,  yMax);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign,  0,  yMax);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign,  0,  yMax);	  ret    =    Math.max(ret,    sign,    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
88	[BUG]  [BUGGY]  Math.max(ret,  sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.max(ret,  sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.max(ret,  sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);	  Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
89	[BUG]  [BUGGY]  Double  min  =  f.value(min  +  sign,  yMax);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(min  +  sign,  yMax);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min  +  sign,  yMax);	  Double    min    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
90	[BUG]  [BUGGY]  Double  min  =  f.value(min  +  ret);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  min  =  f.value(min  +  ret);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min  +  ret);	  Double    min    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
91	[BUG]  [BUGGY]  Math.abs(sig)  <  =  functionValueAccuracy;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(sig)  <  =  functionValueAccuracy;  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(sig)  <  =  functionValueAccuracy;	  Math.abs(yMax)    <    =    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
92	[BUG]  [BUGGY]  double  min  =  f.value(min,  MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min,  MAX_VALUE);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min,  MAX_VALUE);	  double    min    =    f.value(sign,    max);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
93	[BUG]  [BUGGY]  boolean  yMin  =  f.value(min);  boolean  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  boolean  yMin  =  f.value(min);  boolean  yMax  =  f.value(max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	boolean  yMin  =  f.value(min);  boolean  yMax  =  f.value(max);	  Double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
94	[BUG]  [BUGGY]  double  min  =  f.value(min)/  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min)/  1;  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min)/  1;	  double    min    =    f.value(min    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
95	[BUG]  [BUGGY]  Double  yMin  =  f.value(min  +  sign);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  yMin  =  f.value(min  +  sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  yMin  =  f.value(min  +  sign);	  Double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
96	[BUG]  [BUGGY]  Math.abs(ymax)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Math.abs(ymax)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(ymax)  <  =  functionValueAccuracy)  {  setResult(min,  0);	  Math.abs(sign)    <    =    functionValueAccuracy)    {    setResult(min,    0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
97	[BUG]  [BUGGY]  if(f.isReal())  {  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  if(f.isReal())  {  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  }  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if(f.isReal())  {  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  }	  double    yMin    =    f.value(min,    max);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
98	[BUG]  [BUGGY]  if(f.isReal())  {  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  if(f.isReal())  {  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if(f.isReal())  {  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  double    yMin    =    f.value(min,    max);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
99	[BUG]  [BUGGY]  double  yMin  =  f.value(min  +  ret);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(min  +  ret);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min  +  ret);	  double    yMin    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
100	[BUG]  [BUGGY]  Double  yMax  =  f.value(min);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  Double  yMax  =  f.value(min);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  yMax  =  f.value(min);	  double    min    =    f.value(min);    Double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
101	[BUG]  [BUGGY]  RectangleEdge  ret  =  f.createRealFunction(sign);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  RectangleEdge  ret  =  f.createRealFunction(sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	RectangleEdge  ret  =  f.createRealFunction(sign);	  if(f.isReal())    {    double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
102	[BUG]  [BUGGY]  RectangleEdge  ret  =  f.getReal();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  RectangleEdge  ret  =  f.getReal();  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	RectangleEdge  ret  =  f.getReal();	  if(f.isReal())    {    double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
103	[BUG]  [BUGGY]  RectangleEdge  ret  =  new  RectangleEdge(f.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  RectangleEdge  ret  =  new  RectangleEdge(f.getValue());  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	RectangleEdge  ret  =  new  RectangleEdge(f.getValue());	  if(f.isReal())    {    double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
104	[BUG]  [BUGGY]  double  min  =  Math.min(yMin,  yMax);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  Math.min(yMin,  yMax);  [BUGGY]      setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  Math.min(yMin,  yMax);	  double    min    =    Math.min(yMin,    sign);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
105	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  yMax);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(min,  yMax);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min,  yMax);	  double    yMin    =    f.value(min,    sign);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
106	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  ret);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  yMin  =  f.value(min,  ret);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min,  ret);	  double    yMin    =    f.value(min,    sign);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
107	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  *  yMax,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  ret  =  Math.max(ret,  sign  *  yMax,  0);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  *  yMax,  0);	  ret    =    Math.max(ret,    sign    *    yMax);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
108	[BUG]  [BUGGY]  double  min  =  f.value(min  +  ret);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min  +  ret);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min  +  ret);	  double    min    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
109	[BUG]  [BUGGY]  double  min  =  f.value(min  +  sign,  yMax);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min  +  sign,  yMax);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min  +  sign,  yMax);	  double    min    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
110	[BUG]  [BUGGY]  double  min  =  f.value(min  *  sign);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min  *  sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min  *  sign);	  double    min    =    f.value(min    +    sign);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
111	[BUG]  [BUGGY]  double  min  =  f.value(min)/  ret;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min)/  ret;  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min)/  ret;	  double    min    =    f.value(min)/    sign;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
112	[BUG]  [BUGGY]  double  min  =  f.value(min)/  type;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min)/  type;  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min)/  type;	  double    min    =    f.value(min)/    sign;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
113	[BUG]  [BUGGY]  double  min  =  f.value(min,  yMin);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {        [BUGGY]  double  min  =  f.value(min,  yMin);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min,  yMin);	  double    min    =    f.value(min,    ret);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
