bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ret  =  Math.min(ret,  sign);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  ret  =  Math.min(ret,  sign);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.min(ret,  sign);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  ret  =  Math.max(ret,  sign  +  1);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  +  1);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  *  sign);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  ret  =  Math.max(ret,  sign  *  sign);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  *  sign);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  +  1,  sign);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  ret  =  Math.max(ret,  sign  +  1,  sign);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  +  1,  sign);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  Double  min  =  f.value(min,  sign);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Double  min  =  f.value(min,  sign);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min,  sign);	      Double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  Double  min  =  f.value(min  +  sign);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Double  min  =  f.value(min  +  sign);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min  +  sign);	      Double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  double  min  =  f.value(min,  sign);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  f.value(min,  sign);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min,  sign);	      double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  double  min  =  f.value(min  +  sign);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  f.value(min  +  sign);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min  +  sign);	      double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  Double  min  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Double  min  =  f.value(max);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(max);	      Double    min    =    f.value(sign);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  Double  yMin  =  f.value(min);  Double  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Double  yMin  =  f.value(min);  Double  yMax  =  f.value(max);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  yMin  =  f.value(min);  Double  yMax  =  f.value(max);	      double    yMin    =    f.value(min);    Double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  Double  yMin  =  f.value(min);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Double  yMin  =  f.value(min);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  yMin  =  f.value(min);	      double    yMin    =    f.value(min);    Double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  Double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  yMin  =  f.value(min);  double  yMax  =  f.value(max);	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  double  yMin  =  f.value(sign);  double  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  yMin  =  f.value(sign);  double  yMax  =  f.value(max);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(sign);  double  yMax  =  f.value(max);	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  Math.abs(sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Math.abs(sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [BUGGY]    setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  Math.abs(sign)  <  =  functionValueAccuracy;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Math.abs(sign)  <  =  functionValueAccuracy;  [BUGGY]    setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(sign)  <  =  functionValueAccuracy;	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  double  min  =  f.value(sign,  max);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  f.value(sign,  max);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(sign,  max);	      double    min    =    f.value(min,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  double  min  =  f.value(min)/  sign;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  f.value(min)/  sign;  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min)/  sign;	      double    min    =    f.value(min)-    sign;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  double  min  =  f.value(sign)-  sign;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  f.value(sign)-  sign;  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(sign)-  sign;	      double    min    =    f.value(min)-    sign;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  double  min  =  f.value(min)-  sign  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  f.value(min)-  sign  +  1;  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min)-  sign  +  1;	      double    min    =    f.value(min)-    sign;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  if  (Math.abs(yMax)  <  =  functionValueAccuracy)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  if  (Math.abs(yMax)  <  =  functionValueAccuracy)  {  [BUGGY]    setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if  (Math.abs(yMax)  <  =  functionValueAccuracy)  {	  if    (Math.abs(yMin)    <    functionValueAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  if  (Math.abs(yMin)  <  sign)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  if  (Math.abs(yMin)  <  sign)  {  [BUGGY]    setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if  (Math.abs(yMin)  <  sign)  {	  if    (Math.abs(yMin)    <    =    sign)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  if  (Math.abs(yMax)  <  =  sign)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  if  (Math.abs(yMax)  <  =  sign)  {  [BUGGY]    setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if  (Math.abs(yMax)  <  =  sign)  {	  if    (Math.abs(yMin)    <    =    sign)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  if  (Math.abs(min)  <  =  functionValueAccuracy)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  if  (Math.abs(min)  <  =  functionValueAccuracy)  {  [BUGGY]    setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if  (Math.abs(min)  <  =  functionValueAccuracy)  {	  if    (Math.abs(sign)    <    =    functionValueAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  double  yMin  =  f.value(sign);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  yMin  =  f.value(sign);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(sign);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  sign);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  yMin  =  f.value(min,  sign);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min,  sign);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  double  min  =  f.value(min,  yMax);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  f.value(min,  yMax);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min,  yMax);	      double    min    =    f.value(sign);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  double  yMin  =  f.value(min  +  sign);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  yMin  =  f.value(min  +  sign);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min  +  sign);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  ret  =  Math.max(ret,  sign,  0);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign,  0);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  double  min  =  Math.min(yMin,  sign);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  Math.min(yMin,  sign);  [BUGGY]    setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  Math.min(yMin,  sign);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  if  (Math.abs(sign)  <  =  sign)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  if  (Math.abs(sign)  <  =  sign)  {  [BUGGY]    setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if  (Math.abs(sign)  <  =  sign)  {	  if    (Math.abs(yMin)    <    =    sign)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(min,  0);  [BUGGY]    setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(min,  0);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  Math.abs(yMax)  <  =  functionValueAccuracy;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Math.abs(yMax)  <  =  functionValueAccuracy;  [BUGGY]    setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Math.abs(yMax)  <  =  functionValueAccuracy;	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  double  min  =  f.value(min  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  f.value(min  +  1);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min  +  1);	      double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  double  min  =  f.value(min,  ret);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  f.value(min,  ret);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min,  ret);	      double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  if(f.isReal())  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  if(f.isReal())  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if(f.isReal())  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  if(f.isReal())  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  if(f.isReal())  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	if(f.isReal())  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  Double  min  =  f.value(min  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Double  min  =  f.value(min  +  1);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min  +  1);	      Double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  *  yMax);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  ret  =  Math.max(ret,  sign  *  yMax);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	ret  =  Math.max(ret,  sign  *  yMax);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  Double  min  =  f.value(min,  ret);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Double  min  =  f.value(min,  ret);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min,  ret);	      Double    min    =    f.value(sign);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
41	[BUG]  [BUGGY]  Double  min  =  f.value(min,  yMax);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  Double  min  =  f.value(min,  yMax);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	Double  min  =  f.value(min,  yMax);	      Double    min    =    f.value(sign);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  double  min  =  f.value(min);  Double  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {      [BUGGY]  double  min  =  f.value(min);  Double  yMax  =  f.value(max);  [BUGGY]    if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	double  min  =  f.value(min);  Double  yMax  =  f.value(max);	      double    yMin    =    f.value(min);    Double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
