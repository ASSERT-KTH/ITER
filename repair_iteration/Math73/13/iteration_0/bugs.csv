bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
25	[BUG] [BUGGY] if (Math.abs(yMin) <= functionValueAccuracy) { [FE] AssertionFailedError [CONTEXT] double ret = Double.NaN; double yMin = f.value(min); double yMax = f.value(max);  double sign = yMin * yMax; if (sign > 0) {  [BUGGY] if (Math.abs(yMin) <= functionValueAccuracy) { [BUGGY] setResult(min, 0); ret = min; } else if (Math.abs(yMax) <= functionValueAccuracy) { setResult(max, 0); ret = max; } else {  throw MathRuntimeException.createIllegalArgumentException( NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] double ret = Double.NaN; double yMin = f.value(min); double yMax = f.value(max);  double sign = yMin * yMax; if (sign > 0) {  [BUGGY] [BUGGY] if (Math.abs(yMin) <= functionValueAccuracy) { setResult(min, 0); ret = min; } else if (Math.abs(yMax) <= functionValueAccuracy) { setResult(max, 0); ret = max; } else {  throw MathRuntimeException.createIllegalArgumentException( NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	176	176	1	add	
