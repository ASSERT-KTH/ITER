bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  dx  -=  oldDelta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  dx  -=  oldDelta;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	dx  -=  oldDelta;	  oldDelta    -=    dx;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
2	[BUG]  [BUGGY]  double  -=  dx;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  -=  dx;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  -=  dx;	  oldDelta    -=    dx;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
3	[BUG]  [BUGGY]  double  oldDelta  =  delta  +  0.5  *  dx;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  +  0.5  *  dx;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  delta  +  0.5  *  dx;	  double    oldDelta    =    dx    +    0.5    *    delta;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
4	[BUG]  [BUGGY]  double  oldDelta  =  x2  +  0.5  *  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x2  +  0.5  *  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x2  +  0.5  *  delta;	  double    oldDelta    =    dx    +    0.5    *    delta;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
5	[BUG]  [BUGGY]  double  oldDelta  =  y1  +  0.5  *  delta;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  y1  +  0.5  *  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  y1  +  0.5  *  delta;	  double    oldDelta    =    dx    +    0.5    *    delta;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
6	[BUG]  [BUGGY]  delta  =  x2  -  x1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x2  -  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x2  -  x1;	  delta    =    x2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
7	[BUG]  [BUGGY]  delta  =  x0  -  x2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x0  -  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x0  -  x2;	  delta    =    x2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
8	[BUG]  [BUGGY]  delta  =  x2  -  x0  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x2  -  x0  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x2  -  x0  +  1;	  delta    =    x2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
9	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)/  2+1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2)/  2+1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2)/  2+1;	  double    oldDelta    =    f.value(x2)+1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
10	[BUG]  [BUGGY]  oldDelta  =  dx  -  x2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  dx  -  x2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  dx  -  x2;	  oldDelta    =    x2    -    dx;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
11	[BUG]  [BUGGY]  delta  =  y1  -  x0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  y1  -  x0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  y1  -  x0;	  delta    =    x1    -    tolerance;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
12	[BUG]  [BUGGY]  delta  =  x1  -  x2  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x1  -  x2  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x1  -  x2  +  1;	  delta    =    x1    -    x0    +    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
13	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)/  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2)/  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2)/  delta;	  double    oldDelta    =    f.value(x2)-    delta;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
14	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x1)-  delta;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x1)-  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x1)-  delta;	  double    oldDelta    =    f.value(x2)-    delta;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
15	[BUG]  [BUGGY]  double  oldDelta  =  f.value(y2)-  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(y2)-  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(y2)-  delta;	  double    oldDelta    =    f.value(x2)-    delta;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
16	[BUG]  [BUGGY]  double  i  =  f.value(x2)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  i  =  f.value(x2)+  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  i  =  f.value(x2)+  1;	  double    i    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
17	[BUG]  [BUGGY]  double  i  =  f.value(x0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  i  =  f.value(x0);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  i  =  f.value(x0);	  double    i    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
18	[BUG]  [BUGGY]  bucket  <  =  0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  -  oldDelta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  -  oldDelta;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  -  oldDelta;  }	  if(delta    >    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
19	[BUG]  [BUGGY]  bucket  <  =  0)  {  delta  =  x1  -  oldDelta;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0)  {  delta  =  x1  -  oldDelta;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0)  {  delta  =  x1  -  oldDelta;	  if(delta    >    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
20	[BUG]  [BUGGY]  bucket  <  =  0)  {  for(int  i  =  1;  i  <  oldDelta;  i++)  {  delta  =  x1  -  oldDelta;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0)  {  for(int  i  =  1;  i  <  oldDelta;  i++)  {  delta  =  x1  -  oldDelta;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0)  {  for(int  i  =  1;  i  <  oldDelta;  i++)  {  delta  =  x1  -  oldDelta;  }	  if(delta    >    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
21	[BUG]  [BUGGY]  bucket  <  =  0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  -  oldDelta  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  -  oldDelta  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  -  oldDelta  +  0.5  *  tolerance;  }	  if(delta    >    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
22	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0.0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0.0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
23	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  for(int  i  =  0;  i  <  y2;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0.0)  {  for(int  i  =  0;  i  <  y2;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0.0)  {  for(int  i  =  0;  i  <  y2;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
24	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  for(int  i  =  0;  i  <  y1;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0.0)  {  for(int  i  =  0;  i  <  y1;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0.0)  {  for(int  i  =  0;  i  <  y1;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
25	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
26	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  dx  -  delta;	  double    oldDelta    =    dx;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  double  oldDelta  =  dx  +  delta;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  +  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  dx  +  delta;	  double    oldDelta    =    dx;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  double  oldDelta  -=  dx;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  -=  dx;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  -=  dx;	  double    oldDelta    =    dx;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  double  -=  x2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  -=  x2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  -=  x2;	  oldDelta    -=    x2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  delta  -=  x2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  -=  x2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  -=  x2;	  oldDelta    -=    x2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  delta  =  x1  -  x0,  y2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x1  -  x0,  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x1  -  x0,  y2;	  delta    =    x1    -    x2,    y2;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
32	[BUG]  [BUGGY]  delta  =  x1  -  x2,  y0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x1  -  x2,  y0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x1  -  x2,  y0;	  delta    =    x1    -    x2,    y2;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
33	[BUG]  [BUGGY]  delta  =  x1  -  x1,  y2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x1  -  x1,  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x1  -  x1,  y2;	  delta    =    x1    -    x2,    y2;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
34	[BUG]  [BUGGY]  double  delta  =  f.value(delta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  delta  =  f.value(delta);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  delta  =  f.value(delta);	  double    oldDelta    =    f.value(delta);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  double  delta  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  delta  =  f.value(x2);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  delta  =  f.value(x2);	  double    oldDelta    =    f.value(delta);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  int  i  =  f.value(x2)+  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2)+  2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2)+  2;	  int    i    =    f.value(x2)+    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
37	[BUG]  [BUGGY]  int  i  =  f.value(x2)/  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2)/  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2)/  1;	  int    i    =    f.value(x2)+    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
38	[BUG]  [BUGGY]  double  oldDelta  =  x0  -  x2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x0  -  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x0  -  x2;	  double    oldDelta    =    x2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
39	[BUG]  [BUGGY]  double  oldDelta  =  x2  -  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x2  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x2  -  delta;	  double    oldDelta    =    x2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
40	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)+  delta,  y2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2)+  delta,  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2)+  delta,  y2;	  double    oldDelta    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
41	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)+  delta  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2)+  delta  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2)+  delta  +  1;	  double    oldDelta    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
42	[BUG]  [BUGGY]  double  oldDelta  =  x0  -  y2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x0  -  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x0  -  y2;	  double    oldDelta    =    y2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
43	[BUG]  [BUGGY]  double  oldDelta  =  x2  -  y0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x2  -  y0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x2  -  y0;	  double    oldDelta    =    y2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
44	[BUG]  [BUGGY]  double  oldDelta  =  x0  -  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x0  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x0  -  delta;	  double    oldDelta    =    delta    -    x0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
45	[BUG]  [BUGGY]  double  oldDelta  =  delta  -  x1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  -  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  delta  -  x1;	  double    oldDelta    =    delta    -    x0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
46	[BUG]  [BUGGY]  double  oldDelta  =  y2  -  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  y2  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  y2  -  delta;	  double    oldDelta    =    x1    -    delta;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
47	[BUG]  [BUGGY]  double  oldDelta  =  y1  -  delta;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  y1  -  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  y1  -  delta;	  double    oldDelta    =    x1    -    delta;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
48	[BUG]  [BUGGY]  int  i  =  f.value(x1)+  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x1)+  2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x1)+  2;	  int    i    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
49	[BUG]  [BUGGY]  double  i  =  f.value(x1)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  i  =  f.value(x1)+  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  i  =  f.value(x1)+  1;	  int    i    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
50	[BUG]  [BUGGY]  delta  =  x1  -  oldDelta.get(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x1  -  oldDelta.get(i);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x1  -  oldDelta.get(i);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  bucket  <  =  0  ||  delta  ==  oldDelta.size();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0  ||  delta  ==  oldDelta.size();  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0  ||  delta  ==  oldDelta.size();	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  delta  =  x1  -  oldDelta.get(0);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x1  -  oldDelta.get(0);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x1  -  oldDelta.get(0);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  vice(f.value(x1));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  vice(f.value(x1));  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	vice(f.value(x1));	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  y2  -=  delta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  y2  -=  delta;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	y2  -=  delta;	  oldDelta    -=    y2;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
55	[BUG]  [BUGGY]  double  -=  y2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  -=  y2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  -=  y2;	  oldDelta    -=    y2;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
56	[BUG]  [BUGGY]  delta  =  x2  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x2  +  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x2  +  0.5  *  tolerance;	  if(delta    <    =    0.0)    {    delta    =    x2    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
57	[BUG]  [BUGGY]  double  delta  =  x1  -  x0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  delta  =  x1  -  x0;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  delta  =  x1  -  x0;	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    if(dx    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
58	[BUG]  [BUGGY]  FixedDelta  delta  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedDelta  delta  =  f.value(x1);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedDelta  delta  =  f.value(x1);	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    if(dx    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
59	[BUG]  [BUGGY]  FixedDelta  delta  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedDelta  delta  =  f.value(x2);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedDelta  delta  =  f.value(x2);	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    if(dx    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
60	[BUG]  [BUGGY]  oldDelta  =  delta  /  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  delta  /  2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  delta  /  2;	  oldDelta    =    delta    /    1;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
61	[BUG]  [BUGGY]  oldDelta  =  y2  /  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  y2  /  1;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  y2  /  1;	  oldDelta    =    delta    /    1;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
62	[BUG]  [BUGGY]  delta  =  x1  +  0.5  *  oldDelta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x1  +  0.5  *  oldDelta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x1  +  0.5  *  oldDelta;	  delta    =    x1    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
63	[BUG]  [BUGGY]  oldDelta  -=  delta  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  -=  delta  -  1;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  -=  delta  -  1;	  oldDelta    =    x2    -    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
64	[BUG]  [BUGGY]  double  oldDelta  =  f.value(y1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(y1);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(y1);	  double    oldDelta    =    f.value(y2);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  if(delta  >  delta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  if(delta  >  delta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	if(delta  >  delta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
66	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	  i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  if(delta  >  delta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  if(delta  >  delta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	if(delta  >  delta)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
68	[BUG]  [BUGGY]  luate(x1,  y1))  {  delta  =  x1  -  x0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(x1,  y1))  {  delta  =  x1  -  x0;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(x1,  y1))  {  delta  =  x1  -  x0;  }	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
69	[BUG]  [BUGGY]  luate(x1,  y1))  {  delta  =  x1  -  x0;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(x1,  y1))  {  delta  =  x1  -  x0;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(x1,  y1))  {  delta  =  x1  -  x0;	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
70	[BUG]  [BUGGY]  bucketMap.put(x1,  delta);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucketMap.put(x1,  delta);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucketMap.put(x1,  delta);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  bucketMap.put(x1,  delta,  y1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucketMap.put(x1,  delta,  y1);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucketMap.put(x1,  delta,  y1);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
73	[BUG]  [BUGGY]  tatement(delta  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  tatement(delta  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	tatement(delta  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
74	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ",  delta);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ",  delta);  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException( " ",  delta);  }	  if(delta    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
75	[BUG]  [BUGGY]  double  i  =  f.value(y2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  i  =  f.value(y2);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  i  =  f.value(y2);	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
76	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
77	[BUG]  [BUGGY]  tatement(delta  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  tatement(delta  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	tatement(delta  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
78	[BUG]  [BUGGY]  bucket  <  =  0.0  ||  delta  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0.0  ||  delta  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0.0  ||  delta  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
79	[BUG]  [BUGGY]  luate(x1,  y1))  {  delta  =  x1  -  oldDelta;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(x1,  y1))  {  delta  =  x1  -  oldDelta;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(x1,  y1))  {  delta  =  x1  -  oldDelta;	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
80	[BUG]  [BUGGY]  luate(x1,  y1))  {  delta  =  x1  -  oldDelta;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(x1,  y1))  {  delta  =  x1  -  oldDelta;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(x1,  y1))  {  delta  =  x1  -  oldDelta;  }	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
81	[BUG]  [BUGGY]  bucketMap.put(x1,  delta,  oldDelta);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucketMap.put(x1,  delta,  oldDelta);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucketMap.put(x1,  delta,  oldDelta);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
82	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
83	[BUG]  [BUGGY]  oricaror  <  =  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oricaror  <  =  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oricaror  <  =  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
84	[BUG]  [BUGGY]  bucketMap.put(delta,  delta);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucketMap.put(delta,  delta);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucketMap.put(delta,  delta);	  if(delta    <    =    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
85	[BUG]  [BUGGY]  double  oldDelta  =  delta  -  x2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  -  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  delta  -  x2;	  double    oldDelta    =    x1    -    x2;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
86	[BUG]  [BUGGY]  double  oldDelta  =  x2  -  x1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x2  -  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x2  -  x1;	  double    oldDelta    =    x1    -    x2;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
87	[BUG]  [BUGGY]  double  oldDelta  =  x1  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x1  +  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x1  +  0.5  *  tolerance;	  double    oldDelta    =    delta    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
88	[BUG]  [BUGGY]  double  oldDelta  =  y1  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  y1  +  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  y1  +  0.5  *  tolerance;	  double    oldDelta    =    delta    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
89	[BUG]  [BUGGY]  oldDelta  =  dx  -  y2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  dx  -  y2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  dx  -  y2;	  oldDelta    =    y2    -    dx;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
90	[BUG]  [BUGGY]  oldDelta  =  y2  -  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  y2  -  delta;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  y2  -  delta;	  oldDelta    =    y2    -    dx;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
91	[BUG]  [BUGGY]  double  oldDelta  =  y2  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  y2  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  y2  +  1;	  double    oldDelta    =    delta    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
92	[BUG]  [BUGGY]  double  oldDelta  =  delta  +  0.5;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  +  0.5;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  delta  +  0.5;	  double    oldDelta    =    delta    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
93	[BUG]  [BUGGY]  double  oldDelta  =  delta  +  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  +  2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  delta  +  2;	  double    oldDelta    =    delta    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
94	[BUG]  [BUGGY]  delta  =  x0  -  y2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x0  -  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x0  -  y2;	  delta    =    y2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
95	[BUG]  [BUGGY]  delta  =  x2  -  y0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x2  -  y0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x2  -  y0;	  delta    =    y2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
96	[BUG]  [BUGGY]  FixedTo(delta,  oldDelta)  {  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedTo(delta,  oldDelta)  {  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedTo(delta,  oldDelta)  {  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }	  fixedTo(x1,    delta)    {    if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
97	[BUG]  [BUGGY]  fixedTo(x1,  y1)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  fixedTo(x1,  y1)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	fixedTo(x1,  y1)  {  delta  =  x1  +  0.5  *  tolerance;  }	  fixedTo(x1,    delta)    {    if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
98	[BUG]  [BUGGY]  fixedTo(x1,  delta)  {  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  fixedTo(x1,  delta)  {  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	fixedTo(x1,  delta)  {  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }	  fixedTo(x1,    delta)    {    if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
99	[BUG]  [BUGGY]  double  oldDelta  =  y2  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  y2  -  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  y2  -  1;	  double    oldDelta    =    delta    -    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
100	[BUG]  [BUGGY]  double  oldDelta  =  delta  /  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  /  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  delta  /  1;	  double    oldDelta    =    delta    -    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
101	[BUG]  [BUGGY]  double  oldDelta  =  delta  -  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  -  2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  delta  -  2;	  double    oldDelta    =    delta    -    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
102	[BUG]  [BUGGY]  oldDelta  =  x2  -  x0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  x2  -  x0;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  x2  -  x0;	  oldDelta    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
103	[BUG]  [BUGGY]  oldDelta  =  dx  -  delta1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  dx  -  delta1;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  dx  -  delta1;	  oldDelta    =    dx    -    delta;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
104	[BUG]  [BUGGY]  delta  =  y1  -  x2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  y1  -  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  y1  -  x2;	  delta    =    x1    -    x2;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
105	[BUG]  [BUGGY]  oldDelta  =  x1  -  x0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  x1  -  x0;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  x1  -  x0;	  oldDelta    =    x1    -    delta;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
106	[BUG]  [BUGGY]  oldDelta  =  y1  -  delta;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  y1  -  delta;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  y1  -  delta;	  oldDelta    =    x1    -    delta;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
107	[BUG]  [BUGGY]  double  oldDelta  =  y0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  y0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  y0;	  double    oldDelta    =    y2;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
108	[BUG]  [BUGGY]  oldDelta  =  x2  -  x2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  x2  -  x2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  x2  -  x2;	  oldDelta    =    delta    -    x2;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
109	[BUG]  [BUGGY]  oldDelta  =  x1  -  x2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  x1  -  x2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  x1  -  x2;	  oldDelta    =    delta    -    x2;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
110	[BUG]  [BUGGY]  delta  -=  oldDelta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  -=  oldDelta;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  -=  oldDelta;	  oldDelta    -=    delta;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
111	[BUG]  [BUGGY]  oldDelta  -=  delta  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  -=  delta  +  1;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  -=  delta  +  1;	  oldDelta    -=    delta;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
112	[BUG]  [BUGGY]  oldDelta  =  x1  -  y2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  x1  -  y2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  x1  -  y2;	  oldDelta    =    y2    -    x1;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
113	[BUG]  [BUGGY]  oldDelta  =  y1  -  x1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  y1  -  x1;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  y1  -  x1;	  oldDelta    =    y2    -    x1;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
114	[BUG]  [BUGGY]  oldDelta  =  x2  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  x2  +  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  x2  +  0.5  *  tolerance;	  oldDelta    =    delta    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
115	[BUG]  [BUGGY]  oldDelta  =  y1  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  y1  +  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  y1  +  0.5  *  tolerance;	  oldDelta    =    delta    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
116	[BUG]  [BUGGY]  int  i  =  f.value(x2,  delta,  y1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2,  delta,  y1);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2,  delta,  y1);	  int    i    =    f.value(x2,    delta);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
117	[BUG]  [BUGGY]  int  i  =  f.value(x2,  delta,  y2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2,  delta,  y2);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2,  delta,  y2);	  int    i    =    f.value(x2,    delta);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
118	[BUG]  [BUGGY]  int  i  =  f.value(x2,  delta  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2,  delta  +  1);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2,  delta  +  1);	  int    i    =    f.value(x2,    delta);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
119	[BUG]  [BUGGY]  double  i  =  f.value(x2)+  delta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  i  =  f.value(x2)+  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  i  =  f.value(x2)+  delta;	  int    i    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
120	[BUG]  [BUGGY]  int  i  =  f.value(x2)+  y2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2)+  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2)+  y2;	  int    i    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
121	[BUG]  [BUGGY]  oldDelta  =  x1  +  0.5  *  delta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  x1  +  0.5  *  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  x1  +  0.5  *  delta;	  oldDelta    =    x1    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
122	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2,  delta,  y1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2,  delta,  y1);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2,  delta,  y1);	  double    oldDelta    =    f.value(x2,    delta);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
123	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2,  delta,  y2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2,  delta,  y2);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2,  delta,  y2);	  double    oldDelta    =    f.value(x2,    delta);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
124	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2,  delta  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2,  delta  +  1);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2,  delta  +  1);	  double    oldDelta    =    f.value(x2,    delta);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
125	[BUG]  [BUGGY]  oldDelta  -=  delta2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  -=  delta2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  -=  delta2;	  oldDelta    -=    delta;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
126	[BUG]  [BUGGY]  oldDelta  =  dx  -  delta2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  dx  -  delta2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  dx  -  delta2;	  oldDelta    =    dx    -    delta;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
127	[BUG]  [BUGGY]  double  oldDelta  =  f.value(dx2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(dx2);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(dx2);	  double    oldDelta    =    f.value(dx);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
128	[BUG]  [BUGGY]  double  oldDelta  =  x2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x2;	  double    oldDelta    =    y2;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
129	[BUG]  [BUGGY]  luate(x1,  y2))  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  -  x0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(x1,  y2))  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  -  x0;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(x1,  y2))  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  -  x0;  }	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
130	[BUG]  [BUGGY]  luate(x1,  y2))  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x2  -  x0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(x1,  y2))  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x2  -  x0;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(x1,  y2))  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x2  -  x0;  }	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
131	[BUG]  [BUGGY]  luate(x1,  y2))  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x3  -  x0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(x1,  y2))  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x3  -  x0;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(x1,  y2))  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x3  -  x0;  }	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
132	[BUG]  [BUGGY]  luate(x1,  y2))  {  delta  =  x1  -  x0;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(x1,  y2))  {  delta  =  x1  -  x0;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(x1,  y2))  {  delta  =  x1  -  x0;  }	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
133	[BUG]  [BUGGY]  fixedTo(x2,  delta)  {  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  fixedTo(x2,  delta)  {  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	fixedTo(x2,  delta)  {  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }	  fixedTo(x1,    delta)    {    if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
134	[BUG]  [BUGGY]  FixedTo(delta)  {  if(delta  <  =  0.0)  {  delta  =  x2  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedTo(delta)  {  if(delta  <  =  0.0)  {  delta  =  x2  +  0.5  *  tolerance;  }  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedTo(delta)  {  if(delta  <  =  0.0)  {  delta  =  x2  +  0.5  *  tolerance;  }	  fixedTo(x1,    delta)    {    if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
135	[BUG]  [BUGGY]  FixedTo(delta)  {  if(delta  >  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedTo(delta)  {  if(delta  >  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedTo(delta)  {  if(delta  >  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }	  fixedTo(x1,    delta)    {    if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
136	[BUG]  [BUGGY]  oldDelta  =  x2  -  delta0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  x2  -  delta0;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  x2  -  delta0;	  oldDelta    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
137	[BUG]  [BUGGY]  delta  =  x2  -  tolerance;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x2  -  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x2  -  tolerance;	  delta    =    x1    -    tolerance;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
138	[BUG]  [BUGGY]  delta  =  x2  -  x1,  y2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x2  -  x1,  y2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x2  -  x1,  y2;	  delta    =    x1    -    x2,    y2;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
139	[BUG]  [BUGGY]  oldDelta  =  x2  -  y1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  x2  -  y1;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  x2  -  y1;	  oldDelta    =    y2    -    x1;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
140	[BUG]  [BUGGY]  oldDelta  =  delta  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  delta  *  1;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  delta  *  1;	  oldDelta    =    delta    /    1;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
141	[BUG]  [BUGGY]  safeThan  <  =  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  safeThan  <  =  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	safeThan  <  =  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
142	[BUG]  [BUGGY]  MutableDelta  delta  =  f.value(delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  MutableDelta  delta  =  f.value(delta);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	MutableDelta  delta  =  f.value(delta);	  if(delta    <    =    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
143	[BUG]  [BUGGY]  safeTree();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  safeTree();  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	safeTree();	  if(delta    <    =    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
144	[BUG]  [BUGGY]  MutableDelta  d2  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  MutableDelta  d2  =  f.value(x2);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	MutableDelta  d2  =  f.value(x2);	  if(delta    <    =    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
145	[BUG]  [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
146	[BUG]  [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x2  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x2  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x2  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
147	[BUG]  [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  +  0.5  *  tolerance;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  x1  +  0.5  *  tolerance;	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
148	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)+  delta2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2)+  delta2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2)+  delta2;	  double    oldDelta    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
149	[BUG]  [BUGGY]  int  i  =  f.value(x2,  oldDelta);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2,  oldDelta);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2,  oldDelta);	  int    i    =    f.value(x2,    delta);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
150	[BUG]  [BUGGY]  delta  =  x0  -  x1  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x0  -  x1  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x0  -  x1  +  1;	  delta    =    x1    -    x0    +    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
151	[BUG]  [BUGGY]  FixedFormat.this.reportError( "Failed  to  instantiate  old  delta: "  +  f.value(x1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedFormat.this.reportError( "Failed  to  instantiate  old  delta: "  +  f.value(x1));  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedFormat.this.reportError( "Failed  to  instantiate  old  delta: "  +  f.value(x1));	  if(delta    >    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
152	[BUG]  [BUGGY]  FixedFormat.this.reportError( "Failed  to  instantiate  old  delta: "  +  f.value(x2));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedFormat.this.reportError( "Failed  to  instantiate  old  delta: "  +  f.value(x2));  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedFormat.this.reportError( "Failed  to  instantiate  old  delta: "  +  f.value(x2));	  if(delta    >    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
153	[BUG]  [BUGGY]  FixedFormat.this.reportError( "Failed  to  instantiate  old  delta: "  +  dx);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedFormat.this.reportError( "Failed  to  instantiate  old  delta: "  +  dx);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedFormat.this.reportError( "Failed  to  instantiate  old  delta: "  +  dx);	  if(delta    >    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
154	[BUG]  [BUGGY]  FixedFormat.this.reportError( "Failed  to  instantiate  a  value ");  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedFormat.this.reportError( "Failed  to  instantiate  a  value ");  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedFormat.this.reportError( "Failed  to  instantiate  a  value ");	  if(delta    >    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
155	[BUG]  [BUGGY]  delta  =  x1  +  0.5  *  x2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x1  +  0.5  *  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x1  +  0.5  *  x2;	  delta    =    x1    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
156	[BUG]  [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    if(dx    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
157	[BUG]  [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >=  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    if(dx    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
158	[BUG]  [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >  0.0)  {  x2  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >  0.0)  {  x2  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >  0.0)  {  x2  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    if(dx    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
159	[BUG]  [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >  0.0)  {  x1  =  x2  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >  0.0)  {  x1  =  x2  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  0;  i  <  oldDelta;  i++)  {  if(dx  >  0.0)  {  x1  =  x2  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    if(dx    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
160	[BUG]  [BUGGY]  safeThan  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  safeThan  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	safeThan  <  =  0.0)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
161	[BUG]  [BUGGY]  tatement(delta  <  0.0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  tatement(delta  <  0.0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	tatement(delta  <  0.0)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
162	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)-  delta  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2)-  delta  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2)-  delta  +  1;	  double    oldDelta    =    f.value(x2)-    delta;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
163	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)-  delta1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2)-  delta1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2)-  delta1;	  double    oldDelta    =    f.value(x2)-    delta;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
164	[BUG]  [BUGGY]  luate(delta)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(delta)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(delta)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
165	[BUG]  [BUGGY]  luate(delta,  y2))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(delta,  y2))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(delta,  y2))  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
166	[BUG]  [BUGGY]  luate(delta,  y2)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(delta,  y2)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(delta,  y2)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
167	[BUG]  [BUGGY]  luate(delta,  oldDelta)  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(delta,  oldDelta)  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(delta,  oldDelta)  {  throw  new  MaxIterationsExceededException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
168	[BUG]  [BUGGY]  double  i  =  f.value(x1)+  delta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  i  =  f.value(x1)+  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  i  =  f.value(x1)+  delta;	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
169	[BUG]  [BUGGY]  double  i  =  f.value(x2,  delta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  i  =  f.value(x2,  delta);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  i  =  f.value(x2,  delta);	  double    i    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
170	[BUG]  [BUGGY]  luate(f,  dx,  y2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(f,  dx,  y2);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(f,  dx,  y2);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
171	[BUG]  [BUGGY]  luate(f,  dx,  y1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(f,  dx,  y1);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(f,  dx,  y1);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
172	[BUG]  [BUGGY]  luate(x1,  y2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  luate(x1,  y2);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	luate(x1,  y2);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
173	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x2  +  0.5  *  oldDelta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x2  +  0.5  *  oldDelta;  }  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	if(delta  <  =  0.0)  {  delta  =  x2  +  0.5  *  oldDelta;  }	  if(delta    <    =    0.0)    {    delta    =    x2    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
174	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	if(delta  <  =  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
175	[BUG]  [BUGGY]  oldDelta  =  delta  -  x0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  delta  -  x0;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  delta  -  x0;	  oldDelta    =    delta    -    x2;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
176	[BUG]  [BUGGY]  int  i  =  f.value(x2)+  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2)+  3;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2)+  3;	  int    i    =    f.value(x2)+    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
177	[BUG]  [BUGGY]  lessIterator  <  Double>  iterator  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  lessIterator  <  Double>  iterator  =  f.value(x2);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	lessIterator  <  Double>  iterator  =  f.value(x2);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
178	[BUG]  [BUGGY]  FixedFormat.this.reportError( "Missing  oldDelta  for  ' "  +  f.value(x1)+ "'  to  ' "  +  oldDelta  + "' ");  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedFormat.this.reportError( "Missing  oldDelta  for  ' "  +  f.value(x1)+ "'  to  ' "  +  oldDelta  + "' ");  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedFormat.this.reportError( "Missing  oldDelta  for  ' "  +  f.value(x1)+ "'  to  ' "  +  oldDelta  + "' ");	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
179	[BUG]  [BUGGY]  FixedFormat.this.reportError( "Missing  oldDelta  for  dx  ' "  +  f.value(x1)+ "'  with  dx  ' "  +  delta  + "' ");  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedFormat.this.reportError( "Missing  oldDelta  for  dx  ' "  +  f.value(x1)+ "'  with  dx  ' "  +  delta  + "' ");  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedFormat.this.reportError( "Missing  oldDelta  for  dx  ' "  +  f.value(x1)+ "'  with  dx  ' "  +  delta  + "' ");	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
180	[BUG]  [BUGGY]  lessIterator  <  Double>  iterator  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  lessIterator  <  Double>  iterator  =  f.value(x1);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	lessIterator  <  Double>  iterator  =  f.value(x1);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
181	[BUG]  [BUGGY]  int  i  =  f.value(x2)/  delta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2)/  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2)/  delta;	  int    i    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
182	[BUG]  [BUGGY]  int  i  =  f.value(x2)+  delta  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2)+  delta  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2)+  delta  +  1;	  int    i    =    f.value(x2)+    delta;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
183	[BUG]  [BUGGY]  delta  =  x2  -  x1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x2  -  x1);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x2  -  x1);	  delta    =    x1    -    x2;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
184	[BUG]  [BUGGY]  double  oldDelta  =  x1  -  delta2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x1  -  delta2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x1  -  delta2;	  double    oldDelta    =    x1    -    delta;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
185	[BUG]  [BUGGY]  double  oldDelta  =  x1  -  delta0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x1  -  delta0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x1  -  delta0;	  double    oldDelta    =    x1    -    delta;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
186	[BUG]  [BUGGY]  bucketFactory  throw  new  MaxIterationsExceededException( " ");  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucketFactory  throw  new  MaxIterationsExceededException( " ");  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucketFactory  throw  new  MaxIterationsExceededException( " ");	  if(delta    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
187	[BUG]  [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	bucket  <  =  0.0)  {  throw  new  MaxIterationsExceededException(null);  }	  if(delta    <    =    0.0)    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
188	[BUG]  [BUGGY]  delta  =  y2  -  x1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  y2  -  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  y2  -  x1;	  delta    =    x1    -    x2;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
189	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  if(y1  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  if(delta  <  =  0.0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  if(y1  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	if(delta  <  =  0.0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  if(y1  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    if(dx    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
190	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  if(x1  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  if(delta  <  =  0.0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  if(x1  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	if(delta  <  =  0.0)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  if(x1  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    if(dx    >    0.0)    {    x1    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
191	[BUG]  [BUGGY]  oldDelta  =  y2  -  x2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  y2  -  x2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  y2  -  x2;	  oldDelta    =    delta    -    x2;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
192	[BUG]  [BUGGY]  double  oldDelta  =  dx  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  dx  +  1;	  double    oldDelta    =    delta    +    1;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
193	[BUG]  [BUGGY]  oldDelta  =  dx  /  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  dx  /  1;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  dx  /  1;	  oldDelta    =    delta    /    1;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
194	[BUG]  [BUGGY]  double  oldDelta  =  x3  -  x0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x3  -  x0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x3  -  x0;	  double    oldDelta    =    delta    -    x0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
195	[BUG]  [BUGGY]  double  i  =  f.value(x2,  y1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  i  =  f.value(x2,  y1);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  i  =  f.value(x2,  y1);	  double    i    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
196	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2,  y1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2,  y1);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2,  y1);	  double    oldDelta    =    f.value(x2,    delta);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
197	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2,  y2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2,  y2);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2,  y2);	  double    oldDelta    =    f.value(x2,    delta);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
198	[BUG]  [BUGGY]  aughtException( " ");  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  aughtException( " ");  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	aughtException( " ");	  if(delta    <    =    0.0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
199	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  aughtInvalidArgumentException( " ");  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	aughtInvalidArgumentException( " ");	  if(delta    <    =    0.0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
200	[BUG]  [BUGGY]  aught(new  IllegalStateException( " "));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  aught(new  IllegalStateException( " "));  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	aught(new  IllegalStateException( " "));	  if(delta    <    =    0.0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
201	[BUG]  [BUGGY]  while(i  <  oldDelta)  {  delta  =  x1  -  x0;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  while(i  <  oldDelta)  {  delta  =  x1  -  x0;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	while(i  <  oldDelta)  {  delta  =  x1  -  x0;	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
202	[BUG]  [BUGGY]  while(i  <  oldDelta  &&  delta  <  =  0.0)  {  delta  =  x1  -  x0;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  while(i  <  oldDelta  &&  delta  <  =  0.0)  {  delta  =  x1  -  x0;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	while(i  <  oldDelta  &&  delta  <  =  0.0)  {  delta  =  x1  -  x0;	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
203	[BUG]  [BUGGY]  while(i  <  oldDelta  &&  delta  <  =  0)  {  delta  =  x1  -  x0;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  while(i  <  oldDelta  &&  delta  <  =  0)  {  delta  =  x1  -  x0;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	while(i  <  oldDelta  &&  delta  <  =  0)  {  delta  =  x1  -  x0;	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
204	[BUG]  [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  oldDelta,  0.5  *  tolerance);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  oldDelta,  0.5  *  tolerance);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	tatement  =  Math.max(relativeAccuracy  *  oldDelta,  0.5  *  tolerance);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
205	[BUG]  [BUGGY]  oldDelta  =  delta  -=  y2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  delta  -=  y2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  delta  -=  y2;	  oldDelta    -=    y2;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
206	[BUG]  [BUGGY]  int  i  =  f.value(x2,  y2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  int  i  =  f.value(x2,  y2);  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	int  i  =  f.value(x2,  y2);	  int    i    =    f.value(x2,    delta);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
207	[BUG]  [BUGGY]  double  oldDelta  =  f.value(x2)-  x2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  f.value(x2)-  x2;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  f.value(x2)-  x2;	  double    oldDelta    =    f.value(x2)-    delta;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
208	[BUG]  [BUGGY]  while(i  <  oldDelta)  {  delta  =  x1  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  while(i  <  oldDelta)  {  delta  =  x1  +  0.5  *  tolerance;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	while(i  <  oldDelta)  {  delta  =  x1  +  0.5  *  tolerance;	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
209	[BUG]  [BUGGY]  Integer  i  =  oldDelta.getIntValue();  delta  =  x1  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  Integer  i  =  oldDelta.getIntValue();  delta  =  x1  +  0.5  *  tolerance;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	Integer  i  =  oldDelta.getIntValue();  delta  =  x1  +  0.5  *  tolerance;	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
210	[BUG]  [BUGGY]  while(i  <  oldDelta.length)  {  delta  =  x1  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  while(i  <  oldDelta.length)  {  delta  =  x1  +  0.5  *  tolerance;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	while(i  <  oldDelta.length)  {  delta  =  x1  +  0.5  *  tolerance;	  if(delta    <    =    0.0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
211	[BUG]  [BUGGY]  while(i  <  oldDelta)  {  delta  =  x1  -  oldDelta;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  while(i  <  oldDelta)  {  delta  =  x1  -  oldDelta;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	while(i  <  oldDelta)  {  delta  =  x1  -  oldDelta;	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
212	[BUG]  [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  *  Math.abs(x2  -  oldDelta));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  *  Math.abs(x2  -  oldDelta));  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  *  Math.abs(x2  -  oldDelta));	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
213	[BUG]  [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy  *  Math.abs(x1  -  oldDelta));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy  *  Math.abs(x1  -  oldDelta));  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	tatement  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy  *  Math.abs(x1  -  oldDelta));	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
214	[BUG]  [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  *  Math.abs(x1  -  oldDelta));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  *  Math.abs(x1  -  oldDelta));  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  *  Math.abs(x1  -  oldDelta));	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
215	[BUG]  [BUGGY]  delta  =  x3  -  x0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x3  -  x0;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x3  -  x0;	  delta    =    y2    -    x0;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
216	[BUG]  [BUGGY]  double  oldDelta  =  y2  -  x1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  y2  -  x1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  y2  -  x1;	  double    oldDelta    =    x1    -    x2;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
217	[BUG]  [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  nativeAccuracy  *  Math.abs(x2  -  oldDelta));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  nativeAccuracy  *  Math.abs(x2  -  oldDelta));  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  nativeAccuracy  *  Math.abs(x2  -  oldDelta));	  if(delta    >    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
218	[BUG]  [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  nativeAccuracy  *  Math.abs(x1  -  oldDelta));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  nativeAccuracy  *  Math.abs(x1  -  oldDelta));  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	tatement  =  Math.max(relativeAccuracy  *  Math.abs(x1),  nativeAccuracy  *  Math.abs(x1  -  oldDelta));	  if(delta    >    0)    {    for(int    i    =    0;    i    <    oldDelta;    i++)    {    delta    =    x1    -    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
219	[BUG]  [BUGGY]  double  oldDelta  =  x1  +  0.5  *  delta;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x1  +  0.5  *  delta;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  x1  +  0.5  *  delta;	  double    oldDelta    =    dx    +    0.5    *    delta;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
220	[BUG]  [BUGGY]  delta  =  x0  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  x0  +  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  x0  +  0.5  *  tolerance;	  delta    =    x1    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
221	[BUG]  [BUGGY]  while(i  <  oldDelta.size())  {  delta  =  x1  -  oldDelta.get(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  while(i  <  oldDelta.size())  {  delta  =  x1  -  oldDelta.get(i);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	while(i  <  oldDelta.size())  {  delta  =  x1  -  oldDelta.get(i);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
222	[BUG]  [BUGGY]  while(i  <  oldDelta.size();  i++)  {  delta  =  x1  -  oldDelta.get(i);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  while(i  <  oldDelta.size();  i++)  {  delta  =  x1  -  oldDelta.get(i);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	while(i  <  oldDelta.size();  i++)  {  delta  =  x1  -  oldDelta.get(i);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
223	[BUG]  [BUGGY]  while(i  <  oldDelta.size()  &&  delta  <  =  0.0)  {  delta  =  x1  -  oldDelta.get(i);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  while(i  <  oldDelta.size()  &&  delta  <  =  0.0)  {  delta  =  x1  -  oldDelta.get(i);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	while(i  <  oldDelta.size()  &&  delta  <  =  0.0)  {  delta  =  x1  -  oldDelta.get(i);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
224	[BUG]  [BUGGY]  while(i  <  oldDelta.size()  &&  delta  <  =  0)  {  delta  =  x1  -  oldDelta.get(i);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  while(i  <  oldDelta.size()  &&  delta  <  =  0)  {  delta  =  x1  -  oldDelta.get(i);  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	while(i  <  oldDelta.size()  &&  delta  <  =  0)  {  delta  =  x1  -  oldDelta.get(i);	  if(delta    ==    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    delta    =    x1    -    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
225	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	  i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
226	[BUG]  [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  delta);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  delta);  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	if(delta  >  0.0)  {  i++;  }  else  {  throw  new  MaxIterationsExceededException(null,  delta);  }	  i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
227	[BUG]  [BUGGY]  delta  =  y2  -  x0  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  delta  =  y2  -  x0  +  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	delta  =  y2  -  x0  +  1;	  delta    =    x1    -    x0    +    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
228	[BUG]  [BUGGY]  oricaror(delta)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oricaror(delta)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oricaror(delta)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
229	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ")).returnZero();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  aught(new  IllegalArgumentException( " ")).returnZero();  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	aught(new  IllegalArgumentException( " ")).returnZero();	  if(delta    <    =    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
230	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x2  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  if(delta  <  =  0.0)  {  delta  =  x2  -  0.5  *  tolerance;  }  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	if(delta  <  =  0.0)  {  delta  =  x2  -  0.5  *  tolerance;  }	  if(delta    <    =    0.0)    {    delta    =    x2    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
231	[BUG]  [BUGGY]  oldDelta  =  dx  +  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  =  dx  +  0.5  *  tolerance;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  =  dx  +  0.5  *  tolerance;	  oldDelta    =    delta    +    0.5    *    tolerance;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
232	[BUG]  [BUGGY]  oldDelta  -=  delta  *  y2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  oldDelta  -=  delta  *  y2;  [BUGGY]      }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	oldDelta  -=  delta  *  y2;	  oldDelta    -=    delta;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
233	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  -  1;  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	double  oldDelta  =  dx  -  1;	  double    oldDelta    =    delta    -    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
234	[BUG]  [BUGGY]  FixedTo(delta)  {  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedTo(delta)  {  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedTo(delta)  {  if(delta  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }	  fixedTo(x1,    delta)    {    if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
235	[BUG]  [BUGGY]  FixedTo(delta)  {  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;      [BUGGY]  FixedTo(delta)  {  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }  [BUGGY]      oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	309	309	1	replace	FixedTo(delta)  {  if(dx  <  =  0.0)  {  delta  =  x1  +  0.5  *  tolerance;  }	  fixedTo(x1,    delta)    {    if(delta    <    =    0.0)    {    delta    =    x1    +    0.5    *    tolerance;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
