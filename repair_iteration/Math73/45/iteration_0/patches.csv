bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    i++;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    i++;  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    i++;		non-compiled	[CE]  illegal  start  of  type	90	None	add
2	[BUG]  [BUGGY]    if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  x2;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  x2;  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  x2;  }		non-compiled	[CE]  illegal  start  of  type	90	None	add
3	[BUG]  [BUGGY]    if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }		non-compiled	[CE]  illegal  start  of  type	90	None	add
4	[BUG]  [BUGGY]    if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }		non-compiled	[CE]  illegal  start  of  type	90	None	add
5	[BUG]  [BUGGY]    int  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    int  i  =  oldDelta.length();  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    int  i  =  oldDelta.length();		non-compiled	[CE]  illegal  start  of  type	90	None	add
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " "));  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " "));  }  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " "));  }	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta  -  delta);  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta  -  delta);	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
13	[BUG]  [BUGGY]    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }		non-compiled	[CE]  illegal  start  of  type	90	None	add
14	[BUG]  [BUGGY]    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }		non-compiled	[CE]  illegal  start  of  type	90	None	add
15	[BUG]  [BUGGY]    if(i  >  oldDelta)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(i  >  oldDelta)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(i  >  oldDelta)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }		non-compiled	[CE]  illegal  start  of  type	90	None	add
16	[BUG]  [BUGGY]    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x0,  oldDelta,  0,  oldDelta,  0,  oldDelta  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x0,  oldDelta,  0,  oldDelta,  0,  oldDelta  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x0,  oldDelta,  0,  oldDelta,  0,  oldDelta		non-compiled	[CE]  illegal  start  of  type	90	None	add
17	[BUG]  [BUGGY]    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(i  >  oldDelta)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }		non-compiled	[CE]  illegal  start  of  type	90	None	add
18	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
19	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
20	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
21	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	}  	non-compiled	[CE]  illegal  start  of  type	89	None	replace
22	[BUG]  [BUGGY]    if(oldDelta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(oldDelta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(oldDelta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }		non-compiled	[CE]  illegal  start  of  type	90	None	add
23	[BUG]  [BUGGY]    if(oldDelta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(oldDelta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(oldDelta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }		non-compiled	[CE]  illegal  start  of  type	90	None	add
24	[BUG]  [BUGGY]    if(oldDelta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  [BUGGY]    if(oldDelta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	    if(oldDelta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }		non-compiled	[CE]  illegal  start  of  type	90	None	add
