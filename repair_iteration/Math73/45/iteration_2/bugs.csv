bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.get(i));  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(1));  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(1));  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(1));  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
6	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
9	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
10	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
11	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(x2,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(x2,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(x2,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
12	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(x1,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(x1,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(x1,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
13	[BUG]  [BUGGY]  if(delta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  delta;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  delta;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }	      if(i    >    oldDelta)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    dx    +=    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }	      if(i    >    oldDelta)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    dx    +=    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  delta.get(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  delta.get(i);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  delta.get(i);  }	      if(i    >    oldDelta)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    dx    +=    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(0);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(0);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(0);  }	      if(i    >    oldDelta)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    dx    +=    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(x2,  0,  oldDelta,  0,  oldDelta);  i++;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(x2,  0,  oldDelta,  0,  oldDelta);  i++;  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(x2,  0,  oldDelta,  0,  oldDelta);  i++;	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  tolerance);  i++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  tolerance);  i++;  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  tolerance);  i++;	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  y2);  i++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  y2);  i++;  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  y2);  i++;	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  int  i  =  oldDelta.length()  -  1;  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	int  i  =  oldDelta.length()  -  1;	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  double  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  double  i  =  oldDelta.length();  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	double  i  =  oldDelta.length();	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  int  i  =  oldDelta.length()  +  1;  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	int  i  =  oldDelta.length()  +  1;	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  int  i  =  oldDelta.length()  -  2;  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	int  i  =  oldDelta.length()  -  2;	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  x2;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  x2;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  x2;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.length;    i++)    {    tolerance    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  delta;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  delta;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.length;    i++)    {    tolerance    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  delta;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  delta;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.length;    i++)    {    tolerance    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  delta  -  x2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  delta  -  x2;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  delta  -  x2;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.length;    i++)    {    tolerance    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta  -  delta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta  -  delta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta  -  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta  -  delta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta  -  delta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  i,  oldDelta,  0,  delta  -  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  i,  oldDelta,  0,  delta  -  delta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  i,  oldDelta,  0,  delta  -  delta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
35	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
36	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
37	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  i);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  i);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  i);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  i,  oldDelta,  0,  oldDelta);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  i,  oldDelta,  0,  oldDelta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  i,  oldDelta,  0,  oldDelta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException( " "));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException( " "));  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException( " "));  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(null);  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
49	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
50	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
51	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(x2,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(x2,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(x2,  0,  oldDelta,  0,  oldDelta.length);  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
52	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  -  1);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  -  1);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  i,  oldDelta,  0,  oldDelta.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  i,  oldDelta,  0,  oldDelta.length);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  i,  oldDelta,  0,  oldDelta.length);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  +  1);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  +  1);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
56	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  oldDelta	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
58	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  1,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  1,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  1,  oldDelta,  0,  oldDelta.getItemCount());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
60	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
61	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
62	[BUG]  [BUGGY]  int  i  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  int  i  =  f.value(x1);  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	int  i  =  f.value(x1);	      i++;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
63	[BUG]  [BUGGY]  i  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  i  =  f.value(x1);  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	i  =  f.value(x1);	      i++;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
67	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
68	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "Missing    double    tolerance    number   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  1;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "Missing    double    tolerance    number   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
71	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "Missing    double    tolerance    number   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	For(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
73	[BUG]  [BUGGY]  if(delta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
74	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  0.5  *  tolerance;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  0.5  *  tolerance;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(delta,  0,  oldDelta,  0,  oldDelta.length);  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta  *  delta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta  *  delta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta  *  delta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException(null);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException(null);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y2))  {  throw  new  MaxIterationsExceededException(null);  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x0;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
81	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x2  -  x0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x2  -  x0;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x2  -  x0;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x0;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "Missing    double    tolerance    number   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  this.oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  this.oldDelta.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  if(!tolerance.equals(y1))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
85	[BUG]  [BUGGY]  i  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  i  =  f.value(x2);  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	i  =  f.value(x2);	      i++;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
86	[BUG]  [BUGGY]  int  i  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  int  i  =  f.value(x2);  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	int  i  =  f.value(x2);	      i++;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
87	[BUG]  [BUGGY]  if(delta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  delta;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  delta;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
88	[BUG]  [BUGGY]  int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  x2;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  delta;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  delta;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
90	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
91	[BUG]  [BUGGY]  luate(f.value(x2),  f.value(x1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x2),  f.value(x1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x2),  f.value(x1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
92	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  old  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  old  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  old	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
93	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
94	[BUG]  [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
95	[BUG]  [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
96	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
97	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i)  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i)  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i)	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
98	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
99	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta.getItemCount());  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta.getItemCount());  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
100	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  delta  -  x2;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  delta  -  x2;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  delta  -  x2;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.length;    i++)    {    tolerance    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
102	[BUG]  [BUGGY]  int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  x2;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  x2;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  x2;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.length;    i++)    {    tolerance    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  delta  -  x1;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  delta  -  x1;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  delta  -  x1;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.length;    i++)    {    tolerance    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
104	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length);  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
105	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  delta,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  delta,  oldDelta.length);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  delta,  oldDelta.length);  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
106	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
107	[BUG]  [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
108	[BUG]  [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
109	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValu  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValu  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValu	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
110	[BUG]  [BUGGY]  luate(f.value(x2),  f.value(x1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValu  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x2),  f.value(x1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValu  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x2),  f.value(x1))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValu	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
111	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  dx,  oldDelta,  0,  oldDelta);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  dx,  oldDelta,  0,  oldDelta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  dx,  oldDelta,  0,  oldDelta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
113	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
114	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
115	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount()  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount()  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount()	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
116	[BUG]  [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f.value(x1),  f.value(x2))  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
117	[BUG]  [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  -  delta);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  -  delta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  -  delta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
119	[BUG]  [BUGGY]  luate(f,  i,  delta)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f,  i,  delta)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f,  i,  delta)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }	      if(i    >    oldDelta)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    dx    +=    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
120	[BUG]  [BUGGY]  luate(f,  i,  oldDelta)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  luate(f,  i,  oldDelta)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	luate(f,  i,  oldDelta)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }	      if(i    >    oldDelta)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    dx    +=    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
121	[BUG]  [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  delta;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  delta;  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
122	[BUG]  [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
123	[BUG]  [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  delta;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x2,  oldDelta,  0,  delta;  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  i,  oldDelta,  0,  oldDelta);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  i,  oldDelta,  0,  oldDelta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  i,  oldDelta,  0,  oldDelta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  dx,  oldDelta,  0,  oldDelta);  i++;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  dx,  oldDelta,  0,  oldDelta);  i++;  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  dx,  oldDelta,  0,  oldDelta);  i++;	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  dx,  0,  oldDelta);  i++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  dx,  0,  oldDelta);  i++;  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  dx,  0,  oldDelta);  i++;	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
127	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
128	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta,  oldDelta.get(i));  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta,  oldDelta.get(i));  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
129	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  tolerance;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  tolerance;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  tolerance;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
130	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x2  =  x1  -  0.5  *  tolerance;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x2  =  x1  -  0.5  *  tolerance;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x2  =  x1  -  0.5  *  tolerance;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
131	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  1.0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  1.0;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  x1  =  x1  -  1.0;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    x1    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
132	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
133	[BUG]  [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  tolerance);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  tolerance);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  tolerance);  i++;  }  else  {  throw  new  MaxIterationsExceededException( " ");  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
134	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  +  1);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  +  1);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.length  +  1);  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
135	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
136	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.length);  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  olddelta,  0,  oldDelta.length);  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
137	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
138	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
139	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  tolerance);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  tolerance);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  tolerance);  i++;  }  else  {  throw  new  MaxIterationsExceededException(maximalIterationCount);  }	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    throw    new    MaxIterationsExceededException(null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
140	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
141	[BUG]  [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
142	[BUG]  [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  1)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
143	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta);  i++;  }  else  {  System.arraycopy(x1,  oldDelta,  0,  oldDelta,  0,  delta	      if(i    >    oldDelta)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta);    i++;    }    else    {    System.arraycopy(x0,    oldDelta,    0,    oldDelta,    0,    oldDelta    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
144	[BUG]  [BUGGY]  Problem(x1,  i)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  Problem(x1,  i)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	Problem(x1,  i)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(i));  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
145	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
146	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(1));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(1));  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(1));  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
147	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  delta;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  delta;  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(oldDelta!=  null)  {  for(int  i  =  0;  i  <  oldDelta.length;  i++)  {  tolerance  =  x1  -  delta;  }	      if(oldDelta!=    null)    {    for(int    i    =    0;    i    <    oldDelta.length;    i++)    {    tolerance    =    x1    -    x2;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
148	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta  -  oldDelta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta  -  oldDelta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  0,  delta  -  oldDelta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
149	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  y1,  0,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  y1,  0,  oldDelta  -  delta);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  y1,  0,  oldDelta  -  delta);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
150	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y0))  {  throw  new  MaxIterationsExceededException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y0))  {  throw  new  MaxIterationsExceededException( " ");  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y0))  {  throw  new  MaxIterationsExceededException( " ");  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
151	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.get(0));  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.get(i));    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
152	[BUG]  [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  delta,  0,  oldDelta.length);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  delta,  0,  oldDelta.length);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  delta,  0,  oldDelta.length);  }	      if(oldDelta    >    tolerance)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.length);	  System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
154	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  1;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  for(int  i  =  1;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  1;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
155	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  1,  oldDelta.getItemCount());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
156	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDeltes.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDeltes.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDeltes.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getItemCount());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getItemCount());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y0))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y0))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  if(!tolerance.equals(y0))  {  throw  new  MaxIterationsExceededException( "Missing  double  tolerance  number ");  }	  for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    if(!tolerance.equals(y1))    {    throw    new    MaxIterationsExceededException(   "Missing    double    tolerance    number   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
159	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  1;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  for(int  i  =  1;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  1;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  0,  oldDelta.getValue());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
160	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta  *  oldDelta.getValue());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta  *  oldDelta.getValue());  }  [BUGGY]    throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  ++i)  {  System.arraycopy(oldDelta,  0,  oldDelta,  delta  *  oldDelta.getValue());  }	  if(i    >    0)    {    for(int    i    =    0;    i    <    oldDelta.size();    ++i)    {    System.arraycopy(oldDelta,    0,    oldDelta,    0,    oldDelta.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
161	[BUG]  [BUGGY]  if(delta  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  if(delta  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	if(delta  >  0)  {  for(int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }	      if(i    >    oldDelta)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    dx    +=    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
162	[BUG]  [BUGGY]  dx  +=  oldDelta.get(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  dx  +=  oldDelta.get(i);  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	dx  +=  oldDelta.get(i);	      if(i    >    oldDelta)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    dx    +=    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
163	[BUG]  [BUGGY]  int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;    [BUGGY]  int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }  [BUGGY]    }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	312	312	1	replace	int  i  =  0;  i  <  oldDelta.size();  i++)  {  dx  +=  oldDelta.get(i);  }	      if(i    >    oldDelta)    {    for(int    i    =    0;    i    <    oldDelta.size();    i++)    {    dx    +=    oldDelta.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
