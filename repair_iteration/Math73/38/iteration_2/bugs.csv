bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)+  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)+  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)+  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x1;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta);	      int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  delta);	      int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  dx);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  dx);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  dx);	      int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
5	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1);	      int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  double  y2  =  f.value(x1,  y2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  double  y2  =  f.value(x1,  y2);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x1,  y2);	      double    y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  x1;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  return  x1;  }	      if(f!=    null)    {    if(!f.isEmpty())    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isEmpty())  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f  ==  null)  {  if(!f.isEmpty())  {  return  x0;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f  ==  null)  {  if(!f.isEmpty())  {  return  x0;  }	      if(f!=    null)    {    if(!f.isEmpty())    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x1;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  y1  =  f.value(x1)+  3;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)+  3;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  3;	  y1    =    f.value(x1)+    2;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
11	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta,  i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  f.setIndex(x1,  oldDelta,  i);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta,  i);	      f.setIndex(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  f.setIndex(x1,  oldDelta,  delta);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta,  delta);	      f.setIndex(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  f.setIndex(x1,  oldDelta  +  delta);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  +  delta);	      f.setIndex(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)/  2  +  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  +  1;	  y1    =    f.value(x1)/    2;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
15	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  +  delta;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)/  2  +  delta;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  +  delta;	  y1    =    f.value(x1)/    2;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
16	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2.0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)/  2.0;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2.0;	  y1    =    f.value(x1)/    2;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
17	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(i,  oldDelta  -  delta);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  oldDelta  -  delta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  int  i  =  Math.min(x1,  oldDelta);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(x1,  oldDelta);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(x1,  oldDelta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  int  i  =  Math.min(0,  oldDelta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(0,  oldDelta);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(0,  oldDelta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  int  i  =  Math.min(oldDelta,  i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(oldDelta,  i);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(oldDelta,  i);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
21	[BUG]  [BUGGY]  if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }	      if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
22	[BUG]  [BUGGY]  if(delta!=  null)  {  if(oldDelta  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(delta!=  null)  {  if(oldDelta  <  =  0)  {  return  x0;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(delta!=  null)  {  if(oldDelta  <  =  0)  {  return  x0;  }	      if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
23	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(delta  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(oldDelta!=  null)  {  if(delta  <  =  0)  {  return  x0;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta!=  null)  {  if(delta  <  =  0)  {  return  x0;  }	      if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
24	[BUG]  [BUGGY]  double  y2  =  f.value(x0,  y1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  double  y2  =  f.value(x0,  y1);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x0,  y1);	      double    y2    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  y1  =  f.value(x1)+  delta  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)+  delta  +  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  delta  +  1;	  y1    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  y1  =  f.value(x1)/  delta;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)/  delta;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  delta;	  y1    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  y1  =  f.value(x1)/  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)/  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  1;	  y1    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  y1  =  f.value(x1)-  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)-  2;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)-  2;	  y1    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.handleMissingException( " ");	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
30	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwInternal();	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
31	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ");	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatementException( " ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  aughtExceptionHandler.throwAsStatementException( " ");  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwAsStatementException( " ");	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
33	[BUG]  [BUGGY]  y1  =  f.value(x1,  y1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1,  y1);  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1,  y1);	  y1    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  y1  =  f.value(x1,  y0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1,  y0);  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1,  y0);	  y1    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  y1  =  f.value(x1,  y2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1,  y2);  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1,  y2);	  y1    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  double  y2  =  f.value(x1)+  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  double  y2  =  f.value(x1)+  1;  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x1)+  1;	      double    y2    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  f.setIndex(x1,  oldDelta  -  delta);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  -  delta);	      f.setIndex(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException( " ".);  }	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
40	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException(x1);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException(x1);  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException(x1);  }	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
41	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException( " ");  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException( " ");  }	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
42	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x1;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x1;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
44	[BUG]  [BUGGY]  if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }	      if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
45	[BUG]  [BUGGY]  if(f  ==  null)  {  if(oldDelta  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f  ==  null)  {  if(oldDelta  <  =  0)  {  return  x0;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f  ==  null)  {  if(oldDelta  <  =  0)  {  return  x0;  }	      if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
46	[BUG]  [BUGGY]  double  y2  =  f.value(x3);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  double  y2  =  f.value(x3);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x3);	      double    y2    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
48	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalStateException( " ".);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalStateException( " ".);  }	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
49	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException( " ");  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException( " ");  }	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
50	[BUG]  [BUGGY]  double  y2  =  f.value(x2)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  double  y2  =  f.value(x2)+  1;  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x2)+  1;	      double    y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  y1  =  f.value(x1)+  0.5;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)+  0.5;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  0.5;	  y1    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  dx);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  dx);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  dx);	      int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  *  dx;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)/  2  *  dx;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  *  dx;	  y1    =    f.value(x1)/    2;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
54	[BUG]  [BUGGY]  y1  =  f.value(x1)+  oldDelta;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)+  oldDelta;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  oldDelta;	  y1    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
55	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  delta);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  oldDelta  +  delta);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  1);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  oldDelta  +  1);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  aughtExceptionHandler(f,  i,  NON_BRACKETING_MESSAGE);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  aughtExceptionHandler(f,  i,  NON_BRACKETING_MESSAGE);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler(f,  i,  NON_BRACKETING_MESSAGE);	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
58	[BUG]  [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type "  +  f.getName());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type "  +  f.getName());  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtException( "Failed  to  instantiate  value  of  type "  +  f.getName());	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type "  +  f.value(x1));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type "  +  f.value(x1));  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtException( "Failed  to  instantiate  value  of  type "  +  f.value(x1));	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
60	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  relativeAccuracy);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  relativeAccuracy);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  relativeAccuracy);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  nativeAccuracy);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  nativeAccuracy);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  nativeAccuracy);	      int    i    =    Math.min(i,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
63	[BUG]  [BUGGY]  y1  =  f.value(x1)-  1L;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)-  1L;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)-  1L;	  y1    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x1  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x1;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
65	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x1;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
66	[BUG]  [BUGGY]  aughtException( " ");  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  aughtException( " ");  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtException( " ");	      if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
67	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  f.setIndex(x1,  oldDelta  +  1);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  +  1);	      f.setIndex(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
70	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  f.setIndex(x1,  oldDelta  -  1);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  -  1);	      f.setIndex(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
71	[BUG]  [BUGGY]  y1  =  f.value(x1)+  x2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  y1  =  f.value(x1)+  x2;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  x2;	  y1    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x1  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x1;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
73	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(f!=    null)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
74	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x2);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x2);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x2);	      int    i    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
75	[BUG]  [BUGGY]  Double  y2  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  Double  y2  =  f.value(x2);  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	Double  y2  =  f.value(x2);	      double    y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
76	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(x0  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(oldDelta!=  null)  {  if(x0  <  =  0)  {  return  x0;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta!=  null)  {  if(x0  <  =  0)  {  return  x0;  }	      if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
77	[BUG]  [BUGGY]  if(f!=  null)  {  if(x0  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(x0  <  =  0)  {  return  x0;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(x0  <  =  0)  {  return  x0;  }	      if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }    [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  x0;  }  [BUGGY]    y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  x0;  }	      if(f!=    null)    {    if(!f.isEmpty())    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
