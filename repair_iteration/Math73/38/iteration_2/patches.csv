bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta  -  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(delta,  oldDelta  -  delta);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  int  i  =  Math.min(i,  delta  -  oldDelta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(i,  delta  -  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  delta  -  oldDelta);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
3	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  -  delta,  dx);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(i,  oldDelta  -  delta,  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  oldDelta  -  delta,  dx);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
4	[BUG]  [BUGGY]  int  i  =  Math.min(x1,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(x1,  oldDelta  -  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(x1,  oldDelta  -  delta);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
5	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  absoluteAccuracy);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  absoluteAccuracy);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  delta,  absoluteAccuracy);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
6	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy  +  1);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
7	[BUG]  [BUGGY]  y1  =  f.value(x1)+  0.5  *  tolerance;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  0.5  *  tolerance;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  0.5  *  tolerance;	  y1    =    f.value(x1)+    0.5;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
8	[BUG]  [BUGGY]  y1  =  f.value(x1)/  0.5;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  0.5;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  0.5;	  y1    =    f.value(x1)+    0.5;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
9	[BUG]  [BUGGY]  y1  =  f.value(x1)+  1.0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  1.0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  1.0;	  y1    =    f.value(x1)+    0.5;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
10	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  -  1  +  delta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta  -  1  +  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  -  1  +  delta);	  f.setIndex(x1,    oldDelta    -    1);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
11	[BUG]  [BUGGY]  f.setIndex(oldDelta,  x1  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(oldDelta,  x1  -  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(oldDelta,  x1  -  1);	  f.setIndex(x1,    oldDelta    -    1);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
12	[BUG]  [BUGGY]  int  i  =  Math.min(nativeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(nativeAccuracy  *  oldDelta,  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(nativeAccuracy  *  oldDelta,  delta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    nativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
13	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    nativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
14	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  nativeAccuracy);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  nativeAccuracy);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  delta,  nativeAccuracy);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    nativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
15	[BUG]  [BUGGY]  if(delta!=  null)  {  if(x0  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(delta!=  null)  {  if(x0  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(delta!=  null)  {  if(x0  <  =  0)  {  return  x0;  }	  if(oldDelta!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
16	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(x1  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta!=  null)  {  if(x1  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta!=  null)  {  if(x1  <  =  0)  {  return  x0;  }	  if(oldDelta!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
17	[BUG]  [BUGGY]  if(delta  ==  null)  {  if(x0  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(delta  ==  null)  {  if(x0  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(delta  ==  null)  {  if(x0  <  =  0)  {  return  x0;  }	  if(oldDelta!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
18	[BUG]  [BUGGY]  if(delta!=  null)  {  if(x0  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(delta!=  null)  {  if(x0  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(delta!=  null)  {  if(x0  <  =  0)  {  return  x1;  }	  if(oldDelta!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
19	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatementException( " ",  dx);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwAsStatementException( " ",  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwAsStatementException( " ",  dx);	  aughtExceptionHandler.throwAsStatementException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
20	[BUG]  [BUGGY]  if(delta!=  null)  {  if(delta  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(delta!=  null)  {  if(delta  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(delta!=  null)  {  if(delta  <  =  0)  {  return  x1;  }	  if(oldDelta!=    null)    {    if(delta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
21	[BUG]  [BUGGY]  if(delta!=  null)  {  if(delta  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(delta!=  null)  {  if(delta  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(delta!=  null)  {  if(delta  <  =  0)  {  return  x0;  }	  if(oldDelta!=    null)    {    if(delta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  if(delta!=  null)  {  if(delta  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(delta!=  null)  {  if(delta  <  =  0.0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(delta!=  null)  {  if(delta  <  =  0.0)  {  return  x0;  }	  if(oldDelta!=    null)    {    if(delta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
23	[BUG]  [BUGGY]  if(delta!=  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(delta!=  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(delta!=  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }	  if(oldDelta!=    null)    {    if(delta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
24	[BUG]  [BUGGY]  if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x2    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
25	[BUG]  [BUGGY]  if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x2    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
26	[BUG]  [BUGGY]  if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x2  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x2    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
27	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x0);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x0);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    x1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  int  i  =  Math.min(x1,  relativeAccuracy  *  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(x1,  relativeAccuracy  *  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(x1,  relativeAccuracy  *  oldDelta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    x1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  y1  =  f.value(x1,  y0,  dx);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1,  y0,  dx);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1,  y0,  dx);	  y1    =    f.value(x1,    y0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
30	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingRealFunction(f);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.handleMissingRealFunction(f);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.handleMissingRealFunction(f);	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
31	[BUG]  [BUGGY]  f.setIndex(x1,  delta  +  oldDelta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  delta  +  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  delta  +  oldDelta);	  f.setIndex(x1,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  +  delta,  i);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta  +  delta,  i);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  +  delta,  i);	  f.setIndex(x1,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
33	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(delta  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta!=  null)  {  if(delta  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta!=  null)  {  if(delta  <  =  0)  {  return  x1;  }	  if(delta!=    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
34	[BUG]  [BUGGY]  if(delta  ==  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(delta  ==  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(delta  ==  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }	  if(delta!=    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
35	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ",  dx);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ",  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ",  dx);	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
36	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  x1;  }	  if(f!=    null)    {    if(!f.isEmpty()    ||!f.isEmpty())    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
37	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f  ==  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f  ==  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  x0;  }	  if(f!=    null)    {    if(!f.isEmpty()    ||!f.isEmpty())    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
38	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  &&!f.isEmpty())  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  &&!f.isEmpty())  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty()  &&!f.isEmpty())  {  return  x0;  }	  if(f!=    null)    {    if(!f.isEmpty()    ||!f.isEmpty())    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
39	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  *  tolerance;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2  *  tolerance;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  *  tolerance;	  y1    =    f.value(x1)/    2    *    dx;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
40	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  *  y0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2  *  y0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  *  y0;	  y1    =    f.value(x1)/    2    *    dx;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
41	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  *  dx  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2  *  dx  +  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  *  dx  +  1;	  y1    =    f.value(x1)/    2    *    dx;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
42	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  dx,  oldDelta);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  dx,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  dx,  oldDelta);	  int    i    =    Math.min(relativeAccuracy    *    dx);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
43	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  x1);	  int    i    =    Math.min(relativeAccuracy    *    dx);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
44	[BUG]  [BUGGY]  aughtExceptionHandler(f,  dx,  NON_BRACKETING_MESSAGE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler(f,  dx,  NON_BRACKETING_MESSAGE);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler(f,  dx,  NON_BRACKETING_MESSAGE);	  aughtExceptionHandler(f,    i,    NON_BRACKETING_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
45	[BUG]  [BUGGY]  aughtExceptionHandler(f,  i,  x1,  NON_BRACKETING_MESSAGE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler(f,  i,  x1,  NON_BRACKETING_MESSAGE);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler(f,  i,  x1,  NON_BRACKETING_MESSAGE);	  aughtExceptionHandler(f,    i,    NON_BRACKETING_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
46	[BUG]  [BUGGY]  aughtExceptionHandler(f,  i,  NON_BRACKETING_MESSAGE,  dx);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler(f,  i,  NON_BRACKETING_MESSAGE,  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler(f,  i,  NON_BRACKETING_MESSAGE,  dx);	  aughtExceptionHandler(f,    i,    NON_BRACKETING_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
47	[BUG]  [BUGGY]  int  i  =  Math.min(delta  *  relativeAccuracy,  delta);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(delta  *  relativeAccuracy,  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(delta  *  relativeAccuracy,  delta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
49	[BUG]  [BUGGY]  y1  =  f.value(x1)/  delta  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  delta  +  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  delta  +  1;	  y1    =    f.value(x1)/    delta;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
50	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x1  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x1    =    x1;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
51	[BUG]  [BUGGY]  double  y2  =  f.value(x1,  y1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  y2  =  f.value(x1,  y1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x1,  y1);	  double    y2    =    f.value(x1,    y2);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  double  y2  =  f.value(x1,  y0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  y2  =  f.value(x1,  y0);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x1,  y0);	  double    y2    =    f.value(x1,    y2);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  double  y2  =  f.value(x2,  y1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  y2  =  f.value(x2,  y1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x2,  y1);	  double    y2    =    f.value(x1,    y2);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
54	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isEmpty())  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f  ==  null)  {  if(!f.isEmpty())  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f  ==  null)  {  if(!f.isEmpty())  {  return  x1;  }	  if(f!=    null)    {    if(!f.isEmpty())    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2.0  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2.0  +  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2.0  +  1;	  y1    =    f.value(x1)/    2    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
56	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2  *  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  *  1;	  y1    =    f.value(x1)/    2    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  int  i  =  Math.min(oldDelta,  x1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(oldDelta,  x1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(oldDelta,  x1);	  int    i    =    Math.min(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
58	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(delta,  oldDelta);	  int    i    =    Math.min(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
59	[BUG]  [BUGGY]  y1  =  f.value(x1)+  delta  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  delta  +  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  delta  +  2;	  y1    =    f.value(x1)+    delta    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
60	[BUG]  [BUGGY]  y1  =  f.value(x1)+  delta  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  delta  *  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  delta  *  1;	  y1    =    f.value(x1)+    delta    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
61	[BUG]  [BUGGY]  if(f!=  null)  {  if(x1  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(x1  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(x1  <  =  0)  {  return  x0;  }	  if(f!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
62	[BUG]  [BUGGY]  if(f!=  null)  {  if(dx  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(dx  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(dx  <  =  0)  {  return  x0;  }	  if(f!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
63	[BUG]  [BUGGY]  if(f!=  null)  {  if(x0  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(x0  <  =  0.0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(x0  <  =  0.0)  {  return  x0;  }	  if(f!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
64	[BUG]  [BUGGY]  if(f!=  null)  {  if(x0  <  =  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(x0  <  =  0)  {  return  null;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(x0  <  =  0)  {  return  null;  }	  if(f!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
65	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  *  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta  *  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  *  1);	  f.setIndex(x1,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
66	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta,  delta  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta,  delta  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta,  delta  +  1);	  f.setIndex(x1,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
67	[BUG]  [BUGGY]  int  i  =  Math.min(0,  oldDelta  -  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(0,  oldDelta  -  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(0,  oldDelta  -  delta);	  int    i    =    Math.min(0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
68	[BUG]  [BUGGY]  int  i  =  Math.min(0,  oldDelta  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(0,  oldDelta  -  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(0,  oldDelta  -  1);	  int    i    =    Math.min(0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
69	[BUG]  [BUGGY]  int  i  =  Math.min(0,  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(0,  oldDelta  +  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(0,  oldDelta  +  delta);	  int    i    =    Math.min(0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
70	[BUG]  [BUGGY]  double  i  =  Math.min(0,  oldDelta);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  i  =  Math.min(0,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  i  =  Math.min(0,  oldDelta);	  int    i    =    Math.min(0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
71	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  +  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  +  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  +  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
72	[BUG]  [BUGGY]  y1  =  f.value(x1)/  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  3;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  3;	  y1    =    f.value(x1)/    1;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
73	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  *  delta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2  *  delta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  *  delta;	  y1    =    f.value(x1)/    2    +    delta;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.no.variable.x1 ");  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.no.variable.x1 ");  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwAssertionError( "msg.no.variable.x1 ");	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
75	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(f!=  null)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta!=  null)  {  if(f!=  null)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta!=  null)  {  if(f!=  null)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    new    UnivariateRealFunction(x0,    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
76	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(i  <  =  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta!=  null)  {  if(i  <  =  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta!=  null)  {  if(i  <  =  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    new    UnivariateRealFunction(x0,    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
77	[BUG]  [BUGGY]  if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  new  UnivariateRealFunction(x1,  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  new  UnivariateRealFunction(x1,  oldDelta);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  new  UnivariateRealFunction(x1,  oldDelta);  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    new    UnivariateRealFunction(x0,    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
78	[BUG]  [BUGGY]  y1  =  f.value(x1)+  y0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  y0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  y0;	  y1    =    f.value(x1)+    x2;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
79	[BUG]  [BUGGY]  y1  =  f.value(x1)+  x0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  x0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  x0;	  y1    =    f.value(x1)+    x2;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
80	[BUG]  [BUGGY]  y1  =  f.value(x1)/  x2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  x2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  x2;	  y1    =    f.value(x1)+    x2;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
81	[BUG]  [BUGGY]  y1  =  f.value(x1)+  x1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  x1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  x1;	  y1    =    f.value(x1)+    x2;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
82	[BUG]  [BUGGY]  f.setIndex(x1,  delta  -  oldDelta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  delta  -  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  delta  -  oldDelta);	  f.setIndex(x1,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
83	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  -  delta,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta  -  delta,  i);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  -  delta,  i);	  f.setIndex(x1,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
84	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  -  delta  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta  -  delta  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  -  delta  +  1);	  f.setIndex(x1,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
85	[BUG]  [BUGGY]  f.setIndex(x1,  delta,  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  delta,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  delta,  oldDelta);	  f.setIndex(x1,    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
86	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternalException( " ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwInternalException( " ");  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwInternalException( " ");	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
87	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternalError( "msg.unexpected.internal.x1 ",  dx);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwInternalError( "msg.unexpected.internal.x1 ",  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwInternalError( "msg.unexpected.internal.x1 ",  dx);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
88	[BUG]  [BUGGY]  Double  y2  =  f.value(x1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  Double  y2  =  f.value(x1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	Double  y2  =  f.value(x1);	  Double    y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
89	[BUG]  [BUGGY]  Double  y2  =  f.value(x0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  Double  y2  =  f.value(x0);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	Double  y2  =  f.value(x0);	  Double    y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
90	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1,  dx);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1,  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1,  dx);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    dx);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
91	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(dx  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta!=  null)  {  if(dx  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta!=  null)  {  if(dx  <  =  0)  {  return  x1;  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
92	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y2;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y2;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y2;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1    +    delta;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
93	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)+  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)+  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)+  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x1    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
94	[BUG]  [BUGGY]  if(f  ==  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f  ==  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f  ==  null)  {  if(oldDelta  <  =  0)  {  return  x1;  }	  if(f    ==    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
95	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(delta  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta  ==  null)  {  if(delta  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta  ==  null)  {  if(delta  <  =  0)  {  return  x0;  }	  if(f    ==    null)    {    if(oldDelta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
96	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x1    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
97	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta  +  i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta  +  i);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(delta,  oldDelta  +  i);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
98	[BUG]  [BUGGY]  int  i  =  Math.min(x1,  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(x1,  oldDelta  +  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(x1,  oldDelta  +  delta);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
99	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  delta,  dx);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  delta,  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  oldDelta  +  delta,  dx);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
100	[BUG]  [BUGGY]  int  i  =  Math.min(x1,  oldDelta  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(x1,  oldDelta  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(x1,  oldDelta  +  1);	  int    i    =    Math.min(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
101	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  1,  delta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  1,  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  oldDelta  +  1,  delta);	  int    i    =    Math.min(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
102	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  1,  dx);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(i,  oldDelta  +  1,  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  oldDelta  +  1,  dx);	  int    i    =    Math.min(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
103	[BUG]  [BUGGY]  double  y2  =  f.value(x0,  y0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  y2  =  f.value(x0,  y0);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x0,  y0);	  double    y2    =    f.value(x0,    y1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
104	[BUG]  [BUGGY]  y1  =  f.value(x1,  y1)/  2.0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1,  y1)/  2.0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1,  y1)/  2.0;	  y1    =    f.value(x1)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
105	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2.0  +  delta;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2.0  +  delta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2.0  +  delta;	  y1    =    f.value(x1)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
106	[BUG]  [BUGGY]  y1  =  f.value(x1)/  oldDelta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  oldDelta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  oldDelta;	  y1    =    f.value(x1)+    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
107	[BUG]  [BUGGY]  y1  =  f.value(x1,  oldDelta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1,  oldDelta);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1,  oldDelta);	  y1    =    f.value(x1)+    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
108	[BUG]  [BUGGY]  double  y2  =  f.value(x1)+  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  y2  =  f.value(x1)+  2;  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x1)+  2;	  double    y2    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
109	[BUG]  [BUGGY]  double  y2  =  f.value(x1)/  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  y2  =  f.value(x1)/  1;  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x1)/  1;	  double    y2    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
110	[BUG]  [BUGGY]  y1  =  f.value(x1,  y1)-  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1,  y1)-  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1,  y1)-  2;	  y1    =    f.value(x1)-    2;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
111	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  dx);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.handleMissingException( " ",  dx);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
112	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1    +    delta;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
113	[BUG]  [BUGGY]  if(delta!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(delta!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(delta!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1    +    delta;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
114	[BUG]  [BUGGY]  double  y2  =  f.value(x2)+  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  y2  =  f.value(x2)+  2;  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x2)+  2;	  double    y2    =    f.value(x2)+    1;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
115	[BUG]  [BUGGY]  double  y2  =  f.value(x2)/  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  y2  =  f.value(x2)/  1;  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x2)/  1;	  double    y2    =    f.value(x2)+    1;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
116	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  oldDelta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  delta,  oldDelta);	  int    i    =    Math.min(relativeAccuracy    *    delta);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
117	[BUG]  [BUGGY]  int  i  =  Math.min(delta  *  relativeAccuracy);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(delta  *  relativeAccuracy);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(delta  *  relativeAccuracy);	  int    i    =    Math.min(relativeAccuracy    *    delta);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
118	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1;    y0    =    y2;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
119	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  relativeAccuracy);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  relativeAccuracy);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  delta,  relativeAccuracy);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
120	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  +  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  +  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  +  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1;    y0    =    y1;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
121	[BUG]  [BUGGY]  if(dx  >  0.0)  {  aughtException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(dx  >  0.0)  {  aughtException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(dx  >  0.0)  {  aughtException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
122	[BUG]  [BUGGY]  if(dx  >  0)  {  aughtException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(dx  >  0)  {  aughtException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(dx  >  0)  {  aughtException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
123	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  aughtException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(dx  <  =  0.0)  {  aughtException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(dx  <  =  0.0)  {  aughtException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
124	[BUG]  [BUGGY]  if(i  ==  0)  {  aughtException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(i  ==  0)  {  aughtException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(i  ==  0)  {  aughtException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
125	[BUG]  [BUGGY]  y1  =  f.value(x1)/  1L;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  1L;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  1L;	  y1    =    f.value(x1)-    1L;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
126	[BUG]  [BUGGY]  y1  =  f.value(x1)-  10.0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)-  10.0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)-  10.0;	  y1    =    f.value(x1)-    1L;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
127	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  &&!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  &&!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty()  &&!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }	  if(f!=    null)    {    if(!f.isEmpty()    ||!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
128	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isNull()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isNull()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isNull()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }	  if(f!=    null)    {    if(!f.isEmpty()    ||!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
129	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isNegated()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isNegated()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isNegated()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }	  if(f!=    null)    {    if(!f.isEmpty()    ||!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
130	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta,  i  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta,  i  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta,  i  +  1);	  f.setIndex(x1,    oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
131	[BUG]  [BUGGY]  f.setIndex(x1,  i,  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  i,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  i,  oldDelta);	  f.setIndex(x1,    oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
132	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta,  dx);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta,  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta,  dx);	  f.setIndex(x1,    oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
133	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1,  y2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1,  y2);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1,  y2);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    x2);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
134	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.illegal.type.x1 ",  x1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.illegal.type.x1 ",  x1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwAssertionError( "msg.illegal.type.x1 ",  x1);	  if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalArgumentException(x1);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
135	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException(x1);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException(x1);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException(x1);  }	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
136	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException(x0);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException(x0);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException(x0);  }	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
137	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException( " ".);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalArgumentException( " ".);  }	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
138	[BUG]  [BUGGY]  double  y2  =  f.value(x3)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  y2  =  f.value(x3)+  1;  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x3)+  1;	  double    y2    =    f.value(x3);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
139	[BUG]  [BUGGY]  int  i  =  Math.min(nativeAccuracy  *  oldDelta,  x1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(nativeAccuracy  *  oldDelta,  x1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(nativeAccuracy  *  oldDelta,  x1);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    nativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
140	[BUG]  [BUGGY]  aughtExceptionHandler.handleInternal();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.handleInternal();  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.handleInternal();	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
141	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal( "msg.illegal.internal ",  dx);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwInternal( "msg.illegal.internal ",  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwInternal( "msg.illegal.internal ",  dx);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
142	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(delta  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta  ==  null)  {  if(delta  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta  ==  null)  {  if(delta  <  =  0)  {  return  x1;  }	  if(oldDelta!=    null)    {    if(delta    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
143	[BUG]  [BUGGY]  f.setIndex(x0,  oldDelta,  i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x0,  oldDelta,  i);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x0,  oldDelta,  i);	  f.setIndex(x1,    oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
144	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  y0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  y0);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  y0);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    x2);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
145	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta,  x2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta,  x2);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta,  x2);	  f.setIndex(x1,    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
146	[BUG]  [BUGGY]  f.setIndex(x1,  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  delta);	  f.setIndex(x1,    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
147	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  *  delta);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta  *  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  *  delta);	  f.setIndex(x1,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
148	[BUG]  [BUGGY]  int  i  =  Math.min(delta  *  relativeAccuracy,  oldDelta);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(delta  *  relativeAccuracy,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(delta  *  relativeAccuracy,  oldDelta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
149	[BUG]  [BUGGY]  y1  =  f.value(x1)/  y0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  y0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  y0;	  y1    =    f.value(x1)/    delta;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
150	[BUG]  [BUGGY]  y1  =  f.value(x1)/  y2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  y2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  y2;	  y1    =    f.value(x1)/    delta;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
151	[BUG]  [BUGGY]  y1  =  f.value(x1)/  dx;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  dx;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  dx;	  y1    =    f.value(x1)/    delta;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
152	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  -  delta  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(i,  oldDelta  -  delta  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  oldDelta  -  delta  +  1);	  int    i    =    Math.min(i,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
153	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException(x1);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException(x1);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException(x1);  }	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
154	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException( " ".);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException( " ".);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException( " ".);  }	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
155	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException(x0);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException(x0);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  return  new  IllegalStateException(x0);  }	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
156	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
157	[BUG]  [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeRealFunctionCount,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeRealFunctionCount,  oldDelta);	  int    i    =    Math.min(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
158	[BUG]  [BUGGY]  if(f  ==  null)  {  if(x0  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f  ==  null)  {  if(x0  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f  ==  null)  {  if(x0  <  =  0)  {  return  x0;  }	  if(f!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
159	[BUG]  [BUGGY]  if(f!=  null)  {  if(y0  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(y0  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(y0  <  =  0)  {  return  x0;  }	  if(f!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
160	[BUG]  [BUGGY]  y1  =  f.value(x1)+  0.5  *  oldDelta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  0.5  *  oldDelta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  0.5  *  oldDelta;	  y1    =    f.value(x1)+    0.5;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
161	[BUG]  [BUGGY]  y1  =  f.value(x1)+  0.5  +  delta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  0.5  +  delta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  0.5  +  delta;	  y1    =    f.value(x1)+    0.5;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
162	[BUG]  [BUGGY]  if(f!=  null)  {  aughtException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  aughtException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  aughtException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
163	[BUG]  [BUGGY]  if(dx  >  oldDelta)  {  aughtException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(dx  >  oldDelta)  {  aughtException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(dx  >  oldDelta)  {  aughtException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
164	[BUG]  [BUGGY]  if(i  >=  0)  {  aughtException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(i  >=  0)  {  aughtException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(i  >=  0)  {  aughtException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
165	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f  ==  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f  ==  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  throw  new  IllegalStateException( " ");  }	  if(f!=    null)    {    if(!f.isEmpty()    ||!f.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
166	[BUG]  [BUGGY]  int  i  =  Math.min(oldDelta,  oldDelta);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(oldDelta,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(oldDelta,  oldDelta);	  int    i    =    Math.min(oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
167	[BUG]  [BUGGY]  int  i  =  Math.min(1,  oldDelta);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(1,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(1,  oldDelta);	  int    i    =    Math.min(0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
168	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1;    y0    =    y2;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
169	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1;    y0    =    y2;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
170	[BUG]  [BUGGY]  int  i  =  Math.min(primeAccuracy  *  oldDelta,  absoluteAccuracy);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(primeAccuracy  *  oldDelta,  absoluteAccuracy);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(primeAccuracy  *  oldDelta,  absoluteAccuracy);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
171	[BUG]  [BUGGY]  int  i  =  Math.min(dx  *  relativeAccuracy,  oldDelta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(dx  *  relativeAccuracy,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(dx  *  relativeAccuracy,  oldDelta);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    dx);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
172	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x1,  dx);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  x1,  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  x1,  dx);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    dx);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
173	[BUG]  [BUGGY]  int  i  =  Math.min(dx  *  relativeAccuracy);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(dx  *  relativeAccuracy);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(dx  *  relativeAccuracy);	  int    i    =    Math.min(relativeAccuracy    *    dx);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
174	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(i,  oldDelta  -  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  oldDelta  -  1);	  int    i    =    Math.min(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
175	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(delta,  oldDelta  +  1);	  int    i    =    Math.min(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
176	[BUG]  [BUGGY]  if(f!=  null)  {  if(oldDelta  <  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(oldDelta  <  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(oldDelta  <  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    new    UnivariateRealFunction(x0,    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
177	[BUG]  [BUGGY]  if(f!=  null)  {  if(oldDelta  <  0)  {  return  new  UnivariateRealFunction(x1,  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(oldDelta  <  0)  {  return  new  UnivariateRealFunction(x1,  oldDelta);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(oldDelta  <  0)  {  return  new  UnivariateRealFunction(x1,  oldDelta);  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    new    UnivariateRealFunction(x0,    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
178	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1;    y0    =    y1;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
179	[BUG]  [BUGGY]  aughtExceptionHandler(f,  i,  oldDelta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler(f,  i,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler(f,  i,  oldDelta);	  aughtExceptionHandler(f,    i,    NON_BRACKETING_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
180	[BUG]  [BUGGY]  if(f!=  null)  {  aughtExceptionHandler(f,  i,  NON_BRACKETING_MESSAGE);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  aughtExceptionHandler(f,  i,  NON_BRACKETING_MESSAGE);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  aughtExceptionHandler(f,  i,  NON_BRACKETING_MESSAGE);  }	  aughtExceptionHandler(f,    i,    NON_BRACKETING_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
181	[BUG]  [BUGGY]  aughtExceptionHandler(f,  x1,  NON_BRACKETING_MESSAGE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler(f,  x1,  NON_BRACKETING_MESSAGE);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler(f,  x1,  NON_BRACKETING_MESSAGE);	  aughtExceptionHandler(f,    i,    NON_BRACKETING_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
182	[BUG]  [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type: "  +  f.getName());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type: "  +  f.getName());  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtException( "Failed  to  instantiate  value  of  type: "  +  f.getName());	  aughtException(   "Failed    to    instantiate    value    of    type   "    +    f.getName());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
183	[BUG]  [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type ",  f.getName());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type ",  f.getName());  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtException( "Failed  to  instantiate  value  of  type ",  f.getName());	  aughtException(   "Failed    to    instantiate    value    of    type   "    +    f.getName());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
184	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(x1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.handleMissingException(x1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.handleMissingException(x1);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
185	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(x0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.handleMissingException(x0);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.handleMissingException(x0);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
186	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException( ". ");  }	  if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
187	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  *  oldDelta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2  *  oldDelta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  *  oldDelta;	  y1    =    f.value(x1)/    2    +    delta;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
188	[BUG]  [BUGGY]  Double  y2  =  f.value(x2)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  Double  y2  =  f.value(x2)+  1;  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	Double  y2  =  f.value(x2)+  1;	  Double    y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
189	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  oldDelta  +  i1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(delta,  oldDelta  +  i1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(delta,  oldDelta  +  i1);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
190	[BUG]  [BUGGY]  int  i  =  Math.min(i,  oldDelta  *  delta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(i,  oldDelta  *  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(i,  oldDelta  *  delta);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
191	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatementException( " ",  f);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwAsStatementException( " ",  f);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwAsStatementException( " ",  f);	  aughtExceptionHandler.throwAsStatementException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
192	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  x1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  delta,  x1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  delta,  x1);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    x1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
193	[BUG]  [BUGGY]  double  y2  =  f.value(x2,  y0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  y2  =  f.value(x2,  y0);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  y2  =  f.value(x2,  y0);	  double    y2    =    f.value(x1,    y2);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
194	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalStateException( ". ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalStateException( ". ");  }	  if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
195	[BUG]  [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type   "  +  f.value(x0));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type   "  +  f.value(x0));  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtException( "Failed  to  instantiate  value  of  type   "  +  f.value(x0));	  aughtException(   "Failed    to    instantiate    value    of    type   "    +    f.value(x1));    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
196	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  *  y2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2  *  y2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  *  y2;	  y1    =    f.value(x1)/    2    *    dx;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
197	[BUG]  [BUGGY]  y1  =  f.value(x0,  y0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x0,  y0);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x0,  y0);	  y1    =    f.value(x1,    y0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
198	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ",  f);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ",  f);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ",  f);	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
199	[BUG]  [BUGGY]  if(f!=  null)  {  if(dx  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(dx  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(dx  <  =  0)  {  return  x1;  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
200	[BUG]  [BUGGY]  if(f!=  null)  {  if(delta  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(delta  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(delta  <  =  0)  {  return  x1;  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
201	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(x1  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta  ==  null)  {  if(x1  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta  ==  null)  {  if(x1  <  =  0)  {  return  x0;  }	  if(oldDelta!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
202	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x1    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
203	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  throw  new  IllegalArgumentException(x1);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  throw  new  IllegalArgumentException(x1);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  throw  new  IllegalArgumentException(x1);  }	  if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalArgumentException(x1);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
204	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException(x2);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException(x2);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty())  {  throw  new  IllegalArgumentException(x2);  }	  if(f!=    null)    {    if(!f.isEmpty())    {    throw    new    IllegalArgumentException(x1);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
205	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  -  x1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta  -  x1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  -  x1);	  f.setIndex(x1,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
206	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x1  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x1    =    x1;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
207	[BUG]  [BUGGY]  int  i  =  Math.min(delta,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(delta,  i);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(delta,  i);	  int    i    =    Math.min(oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
208	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())return  x0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())return  x0;  }	  if(f!=    null)    {    if(!f.isEmpty()    ||!f.isEmpty())    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
209	[BUG]  [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeErrorCount,  oldDelta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeErrorCount,  oldDelta);	  int    i    =    Math.min(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
210	[BUG]  [BUGGY]  y1  =  f.value(x1)+  dx;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  dx;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  dx;	  y1    =    f.value(x1)+    oldDelta;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
211	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  new  IllegalArgumentException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  new  IllegalArgumentException( " ");  }	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
212	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isNull())  {  return  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isNull())  {  return  new  IllegalArgumentException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isNull())  {  return  new  IllegalArgumentException( " ");  }	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
213	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIgnoredException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIgnoredException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsIgnoredException( " ");  }	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
214	[BUG]  [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  new  IllegalStateException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(!f.isEmpty()  ||!f.isEmpty())  {  return  new  IllegalStateException( " ");  }	  if(f!=    null)    {    if(!f.isEmpty())    {    return    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
215	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  dx  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  dx  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  dx  +  1);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    dx);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
216	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x0  +  x1;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x1  =  x0  +  x1;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x0  +  x1;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x1    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
217	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x1  =  x0;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x0;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x1    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
218	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1;    y0    =    y1;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
219	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta  +  i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta  +  i);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta  +  i);	  f.setIndex(x1,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
220	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  +  oldDelta;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2  +  oldDelta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  +  oldDelta;	  y1    =    f.value(x1)/    2    +    delta;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
221	[BUG]  [BUGGY]  y1  =  f.value(x1)/  2  +  dx;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)/  2  +  dx;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)/  2  +  dx;	  y1    =    f.value(x1)/    2    +    delta;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
222	[BUG]  [BUGGY]  Double  y2  =  f.value(x3);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  Double  y2  =  f.value(x3);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	Double  y2  =  f.value(x3);	  Double    y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
223	[BUG]  [BUGGY]  if(i  >  0)  {  aughtException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(i  >  0)  {  aughtException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(i  >  0)  {  aughtException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
224	[BUG]  [BUGGY]  if(dx  >  0)  {  aughtException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(dx  >  0)  {  aughtException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(dx  >  0)  {  aughtException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
225	[BUG]  [BUGGY]  if(dx  >  0)  {  aughtException( " ");  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(dx  >  0)  {  aughtException( " ");  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(dx  >  0)  {  aughtException( " ");  }  else  {  throw  new  IllegalStateException( " ");  }	  aughtException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
226	[BUG]  [BUGGY]  if(f!=  null)  {  if(x0  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(x0  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(x0  <  =  0)  {  return  x1;  }	  if(f!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
227	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(oldDelta  <  =  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta!=  null)  {  if(oldDelta  <  =  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta!=  null)  {  if(oldDelta  <  =  0)  {  return  new  UnivariateRealFunction(x0,  oldDelta);  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    new    UnivariateRealFunction(x0,    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
228	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x1  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x1  +  delta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1    +    delta;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
229	[BUG]  [BUGGY]  if(f!=  null)  {  x0  =  x1  +  oldDelta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x0  =  x1  +  oldDelta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x0  =  x1  +  oldDelta;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x0    =    x1    +    delta;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
230	[BUG]  [BUGGY]  if(f!=  null)  {  x1  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x1  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x1  =  x1;  y0  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x1    =    x1;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
231	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  relativeAccuracy  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  relativeAccuracy  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  relativeAccuracy  +  1);	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
232	[BUG]  [BUGGY]  double  i  =  Math.min(relativeAccuracy  *  dx);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  double  i  =  Math.min(relativeAccuracy  *  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	double  i  =  Math.min(relativeAccuracy  *  dx);	  int    i    =    Math.min(relativeAccuracy    *    dx);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
233	[BUG]  [BUGGY]  aughtExceptionHandler.handleInternal(x1,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.handleInternal(x1,  i);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.handleInternal(x1,  i);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
234	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal( "msg.unknown.type ",  dx);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwInternal( "msg.unknown.type ",  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwInternal( "msg.unknown.type ",  dx);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
235	[BUG]  [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type "  +  f.getName(),  dx);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtException( "Failed  to  instantiate  value  of  type "  +  f.getName(),  dx);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtException( "Failed  to  instantiate  value  of  type "  +  f.getName(),  dx);	  aughtException(   "Failed    to    instantiate    value    of    type   "    +    f.getName());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
236	[BUG]  [BUGGY]  if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(oldDelta  <  =  0)  {  return  x1  +  delta;  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
237	[BUG]  [BUGGY]  if(f!=  null)  {  if(x1  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  if(x1  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  if(x1  <  =  0)  {  return  x1;  }	  if(f!=    null)    {    if(oldDelta    <    =    0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
238	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(x0  <  =  0)  {  return  x1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta  ==  null)  {  if(x0  <  =  0)  {  return  x1;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta  ==  null)  {  if(x0  <  =  0)  {  return  x1;  }	  if(oldDelta!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
239	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(x0  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(oldDelta  ==  null)  {  if(x0  <  =  0)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(oldDelta  ==  null)  {  if(x0  <  =  0)  {  return  x0;  }	  if(oldDelta!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
240	[BUG]  [BUGGY]  if(x0!=  null)  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(x0!=  null)  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(x0!=  null)  {  return  x0;  }	  if(oldDelta!=    null)    {    if(x0    <    =    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
241	[BUG]  [BUGGY]  if(f!=  null)  {  x2  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x2  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x2  =  x1;  y0  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x2    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
242	[BUG]  [BUGGY]  if(f!=  null)  {  x2  =  x0;  y1  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f!=  null)  {  x2  =  x0;  y1  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f!=  null)  {  x2  =  x0;  y1  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(f!=    null)    {    x2    =    x0;    y0    =    y1;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
243	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatementException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatementException( " ");  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatementException( " ");  }	  aughtExceptionHandler.throwAsStatementException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
244	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatement( " ");  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler.throwAsStatement( " ");  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler.throwAsStatement( " ");	  aughtExceptionHandler.throwAsStatementException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
245	[BUG]  [BUGGY]  aughtExceptionHandler(f,  x0,  NON_BRACKETING_MESSAGE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  aughtExceptionHandler(f,  x0,  NON_BRACKETING_MESSAGE);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	aughtExceptionHandler(f,  x0,  NON_BRACKETING_MESSAGE);	  aughtExceptionHandler(f,    i,    NON_BRACKETING_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
246	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);	  int    i    =    Math.min(i,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
247	[BUG]  [BUGGY]  f.setIndex(x1,  oldDelta,  y1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  f.setIndex(x1,  oldDelta,  y1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	f.setIndex(x1,  oldDelta,  y1);	  f.setIndex(x1,    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
248	[BUG]  [BUGGY]  y1  =  f.value(x1)+  oldDelta  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  y1  =  f.value(x1)+  oldDelta  +  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	y1  =  f.value(x1)+  oldDelta  +  1;	  y1    =    f.value(x1)+    delta    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
249	[BUG]  [BUGGY]  if(f  ==  null  ||!f.isEmpty())  {  return  x0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  if(f  ==  null  ||!f.isEmpty())  {  return  x0;  }  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	if(f  ==  null  ||!f.isEmpty())  {  return  x0;  }	  if(f    ==    null)    {    if(!f.isEmpty())    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
250	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy)-  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy)-  1;  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy)-  1;	  int    i    =    Math.min(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
251	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta  +  1);	  int    i    =    Math.min(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
252	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      x0  =  x1;  y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }      [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1  +  1);  [BUGGY]      y1  =  f.value(x1);  if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	304	304	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta,  x1  +  1);	  int    i    =    Math.min(i,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
