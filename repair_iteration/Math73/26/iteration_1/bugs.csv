bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  y0;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]  double  r3  =  oldDelta  /  y0;  [BUGGY]  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  /  y0;	double  r3  =  y1  /  y0;  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2	[BUG]  [BUGGY]  double  r3  =  y0  /  y1;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]  double  r3  =  y0  /  y1;  [BUGGY]  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y0  /  y1;	double  r3  =  y1  /  y0;  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
3	[BUG]  [BUGGY]  double  r3  =  tolerance  /  y0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]  double  r3  =  tolerance  /  y0;  [BUGGY]  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance  /  y0;	double  r3  =  y1  /  y0;  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
4	[BUG]  [BUGGY]  double  r3  =  y1  /  y2;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]  double  r3  =  y1  /  y2;  [BUGGY]  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y1  /  y2;	double  r3  =  y1  /  y0;  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    [BUGGY]  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	  	double  r3  =  y1  /  y0;  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
6	[BUG]  [BUGGY]    double  p1  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  p1  =  dx  *  oldDelta;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  p1  =  dx  *  oldDelta;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
7	[BUG]  [BUGGY]    double  p1  =  dx  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  p1  =  dx  *  oldDelta.doubleValue();  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  p1  =  dx  *  oldDelta.doubleValue();		non-compiled	[CE]  illegal  start  of  expression	52	None	add
8	[BUG]  [BUGGY]    double  p1  =  y1  /  y0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  p1  =  y1  /  y0;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  p1  =  y1  /  y0;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
9	[BUG]  [BUGGY]    double  p1  =  dx  *  dx;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  p1  =  dx  *  dx;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  p1  =  dx  *  dx;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
10	[BUG]  [BUGGY]    double  p1  =  y1  /  y2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  p1  =  y1  /  y2;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  p1  =  y1  /  y2;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
11	[BUG]  [BUGGY]  double  r3  =  y1  /  delta;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]  double  r3  =  y1  /  delta;  [BUGGY]  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y1  /  delta;	double  r3  =  y1  /  y0;  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
12	[BUG]  [BUGGY]    double  x1  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  x1  =  dx  *  oldDelta;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  x1  =  dx  *  oldDelta;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
13	[BUG]  [BUGGY]    double  y1  =  y0  /  y2;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  y1  =  y0  /  y2;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  y1  =  y0  /  y2;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
14	[BUG]  [BUGGY]    double  y0  =  oldDelta  *  x1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  y0  =  oldDelta  *  x1;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  y0  =  oldDelta  *  x1;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
15	[BUG]  [BUGGY]    double  x1  =  x0  /  x2;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  x1  =  x0  /  x2;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  x1  =  x0  /  x2;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
16	[BUG]  [BUGGY]    double  x0  =  x1  /  x0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  x0  =  x1  /  x0;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  x0  =  x1  /  x0;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
17	[BUG]  [BUGGY]    double  y1  =  y0  /  y1;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  y1  =  y0  /  y1;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  y1  =  y0  /  y1;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
18	[BUG]  [BUGGY]    double  y1  =  y0  /  tolerance;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  y1  =  y0  /  tolerance;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  y1  =  y0  /  tolerance;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
19	[BUG]  [BUGGY]    double  y1  =  dx  *  y0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  y1  =  dx  *  y0;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  y1  =  dx  *  y0;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
20	[BUG]  [BUGGY]    double  x1  =  dx  *  tolerance;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  x1  =  dx  *  tolerance;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  x1  =  dx  *  tolerance;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
21	[BUG]  [BUGGY]    double  y1  =  dx  *  y2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]    double  y1  =  dx  *  y2;  [BUGGY]  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	    double  y1  =  dx  *  y2;		non-compiled	[CE]  illegal  start  of  expression	52	None	add
22	[BUG]  [BUGGY]  double  r3  =  y1  /  tolerance;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {  [BUGGY]  double  r3  =  y1  /  tolerance;  [BUGGY]  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y1  /  tolerance;	double  r3  =  y1  /  y0;  	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
