bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  delta;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  oldDelta  /  delta;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  /  delta;	  double    r3    =    oldDelta    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  double  r3  =  oldDelta  *  y0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  oldDelta  *  y0;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  *  y0;	  double    r3    =    oldDelta    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  tolerance;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  oldDelta  /  tolerance;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  /  tolerance;	  double    r3    =    oldDelta    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  double  r3  =  y0  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  y0  /  oldDelta;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y0  /  oldDelta;	  double    r3    =    oldDelta    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  double  y1  =  y0  *  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  y0  *  dx;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  *  dx;	      double    y1    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
6	[BUG]  [BUGGY]  double  y1  =  dx  *  y1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  dx  *  y1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  *  y1;	      double    y1    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
7	[BUG]  [BUGGY]  double  y1  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  dx  *  oldDelta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  *  oldDelta;	      double    y1    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
8	[BUG]  [BUGGY]  double  y1  =  dx  *  y0  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  dx  *  y0  +  1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  *  y0  +  1;	      double    y1    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
9	[BUG]  [BUGGY]  double  y1  =  y0  /  y0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  y0  /  y0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  /  y0;	      double    y1    =    y0    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
10	[BUG]  [BUGGY]  double  y1  =  y0  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  y0  /  oldDelta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  /  oldDelta;	      double    y1    =    y0    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
11	[BUG]  [BUGGY]  double  y1  =  y1  /  y0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  y1  /  y0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y1  /  y0;	      double    y1    =    y0    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
12	[BUG]  [BUGGY]  double  p1  =  y0  /  y1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  y0  /  y1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y0  /  y1;	      double    p1    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  double  p1  =  oldDelta  /  y0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  oldDelta  /  y0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  /  y0;	      double    p1    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  double  p1  =  y2  /  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  y2  /  y0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y2  /  y0;	      double    p1    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  double  r3  =  y0  /  tolerance;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  y0  /  tolerance;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y0  /  tolerance;	  double    r3    =    tolerance    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  double  r3  =  dx  /  y0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  dx  /  y0;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  /  y0;	  double    r3    =    tolerance    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  double  r3  =  tolerance  /  delta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  tolerance  /  delta;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance  /  delta;	  double    r3    =    tolerance    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  double  x0  =  y1  /  x0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x0  =  y1  /  x0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  y1  /  x0;	      double    x0    =    x1    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  double  x0  =  oldDelta  /  x0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x0  =  oldDelta  /  x0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  oldDelta  /  x0;	      double    x0    =    x1    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  double  x0  =  x1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x0  =  x1  /  oldDelta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  x1  /  oldDelta;	      double    x0    =    x1    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
21	[BUG]  [BUGGY]  double  r3  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  oldDelta.doubleValue();  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta.doubleValue();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  double  r3  =  dx  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  dx  *  oldDelta.doubleValue();  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  oldDelta.doubleValue();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  double  r3  =  tolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  tolerance.doubleValue();  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance.doubleValue();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  double  r3  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  dx  *  oldDelta;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  oldDelta;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  double  r3  =  y0  /  delta;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  y0  /  delta;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y0  /  delta;	  double    r3    =    y1    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
26	[BUG]  [BUGGY]  double  r3  =  dx  /  delta;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  dx  /  delta;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  /  delta;	  double    r3    =    y1    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  dx;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  oldDelta  *  dx;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  dx;	      double    p1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  double  p1  =  dx  *  y0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  dx  *  y0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  y0;	      double    p1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  double  p1  =  dx  *  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  dx  *  oldDelta  +  1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  oldDelta  +  1;	      double    p1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  double  p1  =  dx  *  p1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  dx  *  p1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  p1;	      double    p1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  double  y1  =  y1  /  y2;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  y1  /  y2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y1  /  y2;	      double    y1    =    y0    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
32	[BUG]  [BUGGY]  double  y1  =  y2  /  y0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  y2  /  y0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y2  /  y0;	      double    y1    =    y0    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  double  y1  =  oldDelta  /  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  oldDelta  /  y2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  /  y2;	      double    y1    =    y0    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  dx.doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  oldDelta  *  dx.doubleValue();  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  dx.doubleValue();	      double    p1    =    dx    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  double  p1  =  dx  *  oldDelta.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  dx  *  oldDelta.doubleValue()  +  1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  oldDelta.doubleValue()  +  1;	      double    p1    =    dx    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  double  p1  =  delta  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  delta  *  oldDelta.doubleValue();  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  delta  *  oldDelta.doubleValue();	      double    p1    =    dx    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  double  r3  =  tolerance  /  y1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  tolerance  /  y1;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance  /  y1;	  double    r3    =    y1    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
38	[BUG]  [BUGGY]  double  y1  =  oldDelta  /  y1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  oldDelta  /  y1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  /  y1;	      double    y1    =    y0    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
39	[BUG]  [BUGGY]  double  x1  =  dx  *  y0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  dx  *  y0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  y0;	      double    x1    =    dx    *    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
40	[BUG]  [BUGGY]  double  x1  =  dx  *  x2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  dx  *  x2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  x2;	      double    x1    =    dx    *    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
41	[BUG]  [BUGGY]  double  x1  =  dx  *  x0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  dx  *  x0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  x0;	      double    x1    =    dx    *    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
42	[BUG]  [BUGGY]  double  r3  =  y0  /  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  y0  /  y2;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y0  /  y2;	  double    r3    =    y1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  y2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  oldDelta  /  y2;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  /  y2;	  double    r3    =    y1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  double  r3  =  dx  /  y2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  dx  /  y2;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  /  y2;	  double    r3    =    y1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  double  x1  =  oldDelta  *  dx;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  oldDelta  *  dx;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  *  dx;	      double    x1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  double  x1  =  dx  *  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  dx  *  oldDelta  +  1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  oldDelta  +  1;	      double    x1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  double  x1  =  dx  *  oldDelta  +  tolerance;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  dx  *  oldDelta  +  tolerance;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  oldDelta  +  tolerance;	      double    x1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  double  p1  =  y0  /  y2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  y0  /  y2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y0  /  y2;	      double    p1    =    y1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  double  p1  =  oldDelta  /  y2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  oldDelta  /  y2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  /  y2;	      double    p1    =    y1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  double  p1  =  y2  /  y1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  y2  /  y1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y2  /  y1;	      double    p1    =    y1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  double  y0  =  oldDelta  *  y1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y0  =  oldDelta  *  y1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  *  y1;	      double    y0    =    oldDelta    *    x1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  double  y0  =  oldDelta  *  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y0  =  oldDelta  *  y2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  *  y2;	      double    y0    =    oldDelta    *    x1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  double  y0  =  oldDelta  *  tolerance;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y0  =  oldDelta  *  tolerance;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  *  tolerance;	      double    y0    =    oldDelta    *    x1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
54	[BUG]  [BUGGY]  double  y0  =  dx  *  x1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y0  =  dx  *  x1;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  dx  *  x1;	      double    y0    =    oldDelta    *    x1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
55	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  y1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  oldDelta  /  y1;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  /  y1;	  double    r3    =    y0    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
56	[BUG]  [BUGGY]  double  x1  =  x1  /  x2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  x1  /  x2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x1  /  x2;	      double    x1    =    x0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
57	[BUG]  [BUGGY]  double  x1  =  y0  /  x2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  y0  /  x2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y0  /  x2;	      double    x1    =    x0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  double  x1  =  x0  /  x0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  x0  /  x0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x0  /  x0;	      double    x1    =    x0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
59	[BUG]  [BUGGY]  double  x1  =  x0  /  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  x0  /  y0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x0  /  y0;	      double    x1    =    x0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
60	[BUG]  [BUGGY]  double  y1  =  y0  *  y2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  y0  *  y2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  *  y2;	      double    y1    =    dx    *    y2;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
61	[BUG]  [BUGGY]  double  x1  =  x0  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  x0  /  oldDelta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x0  /  oldDelta;	      double    x1    =    x0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
62	[BUG]  [BUGGY]  double  r3  =  dx  /  y1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  dx  /  y1;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  /  y1;	  double    r3    =    y0    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
63	[BUG]  [BUGGY]  double  y0  =  x1  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y0  =  x1  *  oldDelta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  x1  *  oldDelta;	      double    y0    =    oldDelta    *    x1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
64	[BUG]  [BUGGY]  double  y0  =  oldDelta  *  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y0  =  oldDelta  *  delta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  *  delta;	      double    y0    =    oldDelta    *    x1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
65	[BUG]  [BUGGY]  double  x1  =  dx  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  dx  /  oldDelta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  /  oldDelta;	      double    x1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  double  r3  =  0.5  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  0.5  *  oldDelta;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  0.5  *  oldDelta;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  double  r3  =  1.0  -  oldDelta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  1.0  -  oldDelta;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  1.0  -  oldDelta;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
68	[BUG]  [BUGGY]  double  r3  =  oldDelta  *  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  oldDelta  *  dx;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  *  dx;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
69	[BUG]  [BUGGY]  double  dx  =  oldDelta  *  r3;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  dx  =  oldDelta  *  r3;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  oldDelta  *  r3;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  double  r3  =  tolerance  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  tolerance  /  oldDelta;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance  /  oldDelta;	  double    r3    =    tolerance    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  double  x1  =  oldDelta  *  tolerance;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  oldDelta  *  tolerance;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  *  tolerance;	      double    x1    =    dx    *    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  double  p1  =  dx  *  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  dx  *  oldDelta  +  delta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  oldDelta  +  delta;	      double    p1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
73	[BUG]  [BUGGY]  double  y1  =  dx  /  y0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  dx  /  y0;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  /  y0;	      double    y1    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
74	[BUG]  [BUGGY]  double  p1  =  dx  *  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  dx  *  y2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  y2;	      double    p1    =    dx    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  double  y1  =  oldDelta  *  y2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  oldDelta  *  y2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  *  y2;	      double    y1    =    dx    *    y2;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
76	[BUG]  [BUGGY]  double  y1  =  oldDelta  /  tolerance;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  oldDelta  /  tolerance;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  /  tolerance;	      double    y1    =    y0    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  double  r3  =  x1  /  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  x1  /  y2;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  x1  /  y2;	  double    r3    =    y1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
78	[BUG]  [BUGGY]  double  r3  =  delta  /  y1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  delta  /  y1;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  delta  /  y1;	  double    r3    =    y1    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
79	[BUG]  [BUGGY]  double  x0  =  x1  /  x2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x0  =  x1  /  x2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  x1  /  x2;	      double    x0    =    x1    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
80	[BUG]  [BUGGY]  double  y1  =  y0  /  y1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  y0  /  y1);  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  /  y1);	      double    y1    =    y0    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
81	[BUG]  [BUGGY]  double  p1  =  dx  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  dx  /  oldDelta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  /  oldDelta;	      double    p1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
82	[BUG]  [BUGGY]  double  r3  =  y1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  y1  /  oldDelta;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y1  /  oldDelta;	  double    r3    =    y1    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
83	[BUG]  [BUGGY]  double  x1  =  dx  /  tolerance;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  dx  /  tolerance;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  /  tolerance;	      double    x1    =    dx    *    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
84	[BUG]  [BUGGY]  double  y0  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y0  =  dx  *  oldDelta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  dx  *  oldDelta;	      double    y0    =    oldDelta    *    x1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
85	[BUG]  [BUGGY]  double  p1  =  dx  *  tolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  dx  *  tolerance.doubleValue();  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  tolerance.doubleValue();	      double    p1    =    dx    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  Double  r3  =(Double)oldDelta.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  Double  r3  =(Double)oldDelta.clone();  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double)oldDelta.clone();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
87	[BUG]  [BUGGY]  double  r3  =  Math.abs(dx  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  Math.abs(dx  -  oldDelta);  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  Math.abs(dx  -  oldDelta);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
88	[BUG]  [BUGGY]  Double  r3  =(Double.isNaN(dx)||  Double.isNaN(r2));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  Double  r3  =(Double.isNaN(dx)||  Double.isNaN(r2));  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double.isNaN(dx)||  Double.isNaN(r2));	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
89	[BUG]  [BUGGY]  double  y1  =  dx  /  y2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  y1  =  dx  /  y2;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  /  y2;	      double    y1    =    dx    *    y2;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
90	[BUG]  [BUGGY]  double  x1  =  x1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  x1  =  x1  /  oldDelta;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x1  /  oldDelta;	      double    x1    =    x0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  double  p1  =  dx  /  dx;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  p1  =  dx  /  dx;  [BUGGY]    double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  /  dx;	      double    p1    =    dx    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
92	[BUG]  [BUGGY]  double  r3  =  dx  /  tolerance;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {    [BUGGY]  double  r3  =  dx  /  tolerance;  [BUGGY]    double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  /  tolerance;	  double    r3    =    y1    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
