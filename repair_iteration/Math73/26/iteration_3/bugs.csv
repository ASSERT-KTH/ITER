bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  y0  =  y1  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  y1  *  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  y1  *  oldDelta;	  double    y0    =    x1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
2	[BUG]  [BUGGY]  double  y0  =  y0  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  y0  *  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  y0  *  oldDelta;	  double    y0    =    x1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
3	[BUG]  [BUGGY]  double  x1  =  oldDelta  *  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  *  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  *  y0;	  double    x1    =    oldDelta    *    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
4	[BUG]  [BUGGY]  double  x1  =  oldDelta  *  delta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  *  delta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  *  delta;	  double    x1    =    oldDelta    *    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
5	[BUG]  [BUGGY]  double  r3  =  y2  /  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  y2  /  y0;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y2  /  y0;	  double    r3    =    y0    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
6	[BUG]  [BUGGY]  double  x1  =  oldDelta  /  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  /  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  /  dx;	  double    x1    =    dx    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
7	[BUG]  [BUGGY]  double  x1  =  y0  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  y0  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y0  /  oldDelta;	  double    x1    =    dx    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
8	[BUG]  [BUGGY]  double  x1  =  dx  /  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  /  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  /  y0;	  double    x1    =    dx    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
9	[BUG]  [BUGGY]  double  y1  =  oldDelta  /  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  oldDelta  /  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  /  y0;	  double    y1    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  double  r3  =  dx  *  r3;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  r3;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  r3;	  double    r3    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
11	[BUG]  [BUGGY]  double  r3  =  dx  *  r2;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  r2;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  r2;	  double    r3    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
12	[BUG]  [BUGGY]  double  r3  =  dx  *  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  oldDelta  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  oldDelta  +  1;	  double    r3    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
13	[BUG]  [BUGGY]  double  y0  =  oldDelta  /  y1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  oldDelta  /  y1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  /  y1;	  double    y0    =    oldDelta    *    y1;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
14	[BUG]  [BUGGY]  double  y0  =  oldDelta  *  y1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  oldDelta  *  y1  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  *  y1  +  1;	  double    y0    =    oldDelta    *    y1;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
15	[BUG]  [BUGGY]  double  x1  =  dx  *  x0  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  *  x0  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  x0  +  1;	  double    x1    =    dx    *    x0;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
16	[BUG]  [BUGGY]  double  x1  =  dx  *  x1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  *  x1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  x1;	  double    x1    =    dx    *    x0;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
17	[BUG]  [BUGGY]  double  x1  =  y0  /  x0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  y0  /  x0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y0  /  x0;	  double    x1    =    x0    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
18	[BUG]  [BUGGY]  double  x1  =  x1  /  x0;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  x1  /  x0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x1  /  x0;	  double    x1    =    x0    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
19	[BUG]  [BUGGY]  double  y0  =  delta  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  delta  *  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  delta  *  oldDelta;	  double    y0    =    oldDelta    *    delta;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
20	[BUG]  [BUGGY]  double  y0  =  oldDelta  *  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  oldDelta  *  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  *  dx;	  double    y0    =    oldDelta    *    delta;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
21	[BUG]  [BUGGY]  double  p1  =  dx  *  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  p1  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  p1  +  1;	  double    p1    =    dx    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
22	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  p1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  *  p1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  p1;	  double    p1    =    dx    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
23	[BUG]  [BUGGY]  double  r3  =  delta  /  y0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  delta  /  y0;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  delta  /  y0;	  double    r3    =    y0    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
24	[BUG]  [BUGGY]  double  p1  =  y0  *  dx;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  y0  *  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y0  *  dx;	  double    p1    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
25	[BUG]  [BUGGY]  double  p1  =  dx  *  y1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  y1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  y1;	  double    p1    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
26	[BUG]  [BUGGY]  double  p1  =  y2  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  y2  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y2  /  oldDelta;	  double    p1    =    oldDelta    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
27	[BUG]  [BUGGY]  double  y1  =  y2  /  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y2  /  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y2  /  dx;	  double    y1    =    dx    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
28	[BUG]  [BUGGY]  double  y1  =  y1  /  dx;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y1  /  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y1  /  dx;	  double    y1    =    dx    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
29	[BUG]  [BUGGY]  double  y1  =  y2  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y2  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y2  /  oldDelta;	  double    y1    =    y0    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  double  y1  =  y1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y1  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y1  /  oldDelta;	  double    y1    =    oldDelta    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
31	[BUG]  [BUGGY]  double  y1  =  oldDelta  /  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  oldDelta  /  delta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  /  delta;	  double    y1    =    oldDelta    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
32	[BUG]  [BUGGY]  double  r3  =  oldDelta  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  *  dx  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  *  dx  +  1;	  double    r3    =    oldDelta    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
33	[BUG]  [BUGGY]  double  p1  =  y0  /  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  y0  /  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y0  /  y0;	  double    p1    =    y0    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
34	[BUG]  [BUGGY]  double  r3  =  dx  *  tolerance;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  tolerance;	  double    r3    =    dx    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
35	[BUG]  [BUGGY]  double  r3  =  tolerance  /  dx;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  tolerance  /  dx;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance  /  dx;	  double    r3    =    dx    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
36	[BUG]  [BUGGY]  double  y0  =  dx  *  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  dx  *  oldDelta  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  dx  *  oldDelta  +  1;	  double    y0    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
37	[BUG]  [BUGGY]  double  y0  =  dx  *  y1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  dx  *  y1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  dx  *  y1;	  double    y0    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
38	[BUG]  [BUGGY]  double  y0  =  dx  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  dx  *  oldDelta.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  dx  *  oldDelta.doubleValue();	  double    y0    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
39	[BUG]  [BUGGY]  double  x1  =  y0  *  dx;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  y0  *  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y0  *  dx;	  double    x1    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
40	[BUG]  [BUGGY]  double  x1  =  dx  *  y1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  *  y1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  y1;	  double    x1    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
41	[BUG]  [BUGGY]  double  y1  =  y0  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y0  *  dx  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  *  dx  +  1;	  double    y1    =    dx    *    y0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  double  y1  =  dx  *  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  dx  *  oldDelta  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  *  oldDelta  +  1;	  double    y1    =    dx    *    y0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  double  y1  =  dx  *  y1  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  dx  *  y1  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  *  y1  +  1;	  double    y1    =    dx    *    y0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  Double  r3  =(Double)delta.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =(Double)delta.clone();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double)delta.clone();	  Double    r3    =(Double)oldDelta.clone();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
45	[BUG]  [BUGGY]  double  r3  =(Double)oldDelta.clone();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =(Double)oldDelta.clone();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =(Double)oldDelta.clone();	  Double    r3    =(Double)oldDelta.clone();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
46	[BUG]  [BUGGY]  Double  r3  =(Double)dx.clone();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =(Double)dx.clone();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double)dx.clone();	  Double    r3    =(Double)oldDelta.clone();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
47	[BUG]  [BUGGY]  double  x1  =  y0  *  x2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  y0  *  x2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y0  *  x2;	  double    x1    =    dx    *    x2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
48	[BUG]  [BUGGY]  Double  r3  =(Double.isNaN(x0)||  Double.isNaN(r2));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =(Double.isNaN(x0)||  Double.isNaN(r2));  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double.isNaN(x0)||  Double.isNaN(r2));	  Double    r3    =(Double.isNaN(dx)||    Double.isNaN(r2));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
49	[BUG]  [BUGGY]  Double  r3  =(Double.isNaN(dx)||  Double.isNaN(r3));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =(Double.isNaN(dx)||  Double.isNaN(r3));  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double.isNaN(dx)||  Double.isNaN(r3));	  Double    r3    =(Double.isNaN(dx)||    Double.isNaN(r2));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
50	[BUG]  [BUGGY]  Double  r3  =(Double.isNaN(dx)||  Double.isInfinite(r2));  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =(Double.isNaN(dx)||  Double.isInfinite(r2));  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double.isNaN(dx)||  Double.isInfinite(r2));	  Double    r3    =(Double.isNaN(dx)||    Double.isNaN(r2));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
51	[BUG]  [BUGGY]  Double  r3  =(Double.isNaN(dx)&&  Double.isNaN(r2));  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =(Double.isNaN(dx)&&  Double.isNaN(r2));  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double.isNaN(dx)&&  Double.isNaN(r2));	  Double    r3    =(Double.isNaN(dx)||    Double.isNaN(r2));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
52	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  *  delta.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  delta.doubleValue();	  double    p1    =    delta    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
53	[BUG]  [BUGGY]  double  p1  =  0.5  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  0.5  *  oldDelta.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  0.5  *  oldDelta.doubleValue();	  double    p1    =    delta    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
54	[BUG]  [BUGGY]  double  r3  =  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  delta.doubleValue();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  delta.doubleValue();	  double    r3    =    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
55	[BUG]  [BUGGY]  double  r3  =  new  Double(tolerance.doubleValue());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  new  Double(tolerance.doubleValue());  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  new  Double(tolerance.doubleValue());	  double    r3    =    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
56	[BUG]  [BUGGY]  double  r3  =  tolerance.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  tolerance.doubleValue()  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance.doubleValue()  +  1;	  double    r3    =    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
57	[BUG]  [BUGGY]  double  y1  =  y1  *  y2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y1  *  y2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y1  *  y2;	  double    y1    =    y0    *    y2;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
58	[BUG]  [BUGGY]  double  y1  =  y2  *  y0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y2  *  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y2  *  y0;	  double    y1    =    y0    *    y2;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
59	[BUG]  [BUGGY]  double  y1  =  y0  *  y1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y0  *  y1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  *  y1;	  double    y1    =    dx    *    y1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
60	[BUG]  [BUGGY]  double  x1  =  oldDelta  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  *  dx  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  *  dx  +  1;	  double    x1    =    dx    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
61	[BUG]  [BUGGY]  double  xx1  =  oldDelta  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  xx1  =  oldDelta  *  dx  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  xx1  =  oldDelta  *  dx  +  1;	  double    x1    =    dx    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
62	[BUG]  [BUGGY]  double  x1  =  dx  *  oldDelta  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  *  oldDelta  *  2  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  oldDelta  *  2  +  1;	  double    x1    =    dx    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
63	[BUG]  [BUGGY]  double  dx  =  oldDelta  *  r1;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx  =  oldDelta  *  r1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  oldDelta  *  r1;	  double    dx    =    oldDelta    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
64	[BUG]  [BUGGY]  double  dx  =  oldDelta  *  r2;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx  =  oldDelta  *  r2;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  oldDelta  *  r2;	  double    dx    =    oldDelta    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
65	[BUG]  [BUGGY]  double  dx  =  dx  *  r3;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx  =  dx  *  r3;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  dx  *  r3;	  double    dx    =    oldDelta    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
66	[BUG]  [BUGGY]  double  dx  =  oldDelta  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx  =  oldDelta  *  r3  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  oldDelta  *  r3  +  1;	  double    dx    =    oldDelta    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
67	[BUG]  [BUGGY]  double  y0  =  y1  *  y2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  y1  *  y2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  y1  *  y2;	  double    y0    =    oldDelta    *    y2;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
68	[BUG]  [BUGGY]  double  y0  =  dx  *  y2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  dx  *  y2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  dx  *  y2;	  double    y0    =    oldDelta    *    y2;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
69	[BUG]  [BUGGY]  double  r3  =  0.5  *  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  0.5  *  oldDelta  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  0.5  *  oldDelta  +  1;	  double    r3    =    0.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
70	[BUG]  [BUGGY]  double  r3  =  0.5  *  dx;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  0.5  *  dx;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  0.5  *  dx;	  double    r3    =    0.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
71	[BUG]  [BUGGY]  double  r3  =  0.5  *  oldDelta  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  0.5  *  oldDelta  -  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  0.5  *  oldDelta  -  1;	  double    r3    =    0.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
72	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  *  dx  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  dx  +  1;	  double    p1    =    oldDelta    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
73	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  y0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  *  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  y0;	  double    p1    =    oldDelta    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
74	[BUG]  [BUGGY]  double  r3  =  oldDelta  *  dx.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  *  dx.doubleValue();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  *  dx.doubleValue();	  double    r3    =    dx    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
75	[BUG]  [BUGGY]  double  r3  =  delta  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  delta  *  oldDelta.doubleValue();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  delta  *  oldDelta.doubleValue();	  double    r3    =    dx    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
76	[BUG]  [BUGGY]  double  r3  =  dx  *  oldDelta.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  oldDelta.doubleValue()  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  oldDelta.doubleValue()  +  1;	  double    r3    =    dx    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
77	[BUG]  [BUGGY]  double  r3  =  oldDelta.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta.doubleValue()  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta.doubleValue()  +  1;	  double    r3    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
78	[BUG]  [BUGGY]  double  r3  =  oldDelta.doubleValue()  *  tolerance;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta.doubleValue()  *  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta.doubleValue()  *  tolerance;	  double    r3    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
79	[BUG]  [BUGGY]  double  r3  =  oldDelta.doubleValue()  +  tolerance;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta.doubleValue()  +  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta.doubleValue()  +  tolerance;	  double    r3    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
80	[BUG]  [BUGGY]  double  p1  =  dx  *  p1  +  delta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  p1  +  delta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  p1  +  delta;	  double    p1    =    dx    *    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
81	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  dx  +  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  *  dx  +  delta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  dx  +  delta;	  double    p1    =    dx    *    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
82	[BUG]  [BUGGY]  double  p1  =  dx  *  oldDelta  +  tolerance;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  oldDelta  +  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  oldDelta  +  tolerance;	  double    p1    =    dx    *    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
83	[BUG]  [BUGGY]  double  p1  =  dx  *  y0  +  delta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  y0  +  delta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  y0  +  delta;	  double    p1    =    dx    *    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
84	[BUG]  [BUGGY]  double  r3  =  delta  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  delta  /  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  delta  /  oldDelta;	  double    r3    =    oldDelta    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
85	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  delta  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  /  delta  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  /  delta  +  1;	  double    r3    =    oldDelta    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
86	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  /  delta.doubleValue();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  /  delta.doubleValue();	  double    r3    =    oldDelta    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
87	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  tolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  *  tolerance.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  tolerance.doubleValue();	  double    p1    =    dx    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
88	[BUG]  [BUGGY]  double  p1  =  dx  *  y0.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  y0.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  y0.doubleValue();	  double    p1    =    dx    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
89	[BUG]  [BUGGY]  double  p1  =  dx  *  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  delta.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  delta.doubleValue();	  double    p1    =    dx    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
90	[BUG]  [BUGGY]  double  x1  =  oldDelta  /  x1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  /  x1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  /  x1;	  double    x1    =    x1    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
91	[BUG]  [BUGGY]  double  x1  =  y1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  y1  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y1  /  oldDelta;	  double    x1    =    x1    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
92	[BUG]  [BUGGY]  double  x1  =  y2  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  y2  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y2  /  oldDelta;	  double    x1    =    x1    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
93	[BUG]  [BUGGY]  double  x1  =  dx  *  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  *  oldDelta  +  delta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  oldDelta  +  delta;	  double    x1    =    dx    *    oldDelta    +    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
94	[BUG]  [BUGGY]  double  x1  =  oldDelta  *  dx  +  tolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  *  dx  +  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  *  dx  +  tolerance;	  double    x1    =    dx    *    oldDelta    +    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
95	[BUG]  [BUGGY]  double  x1  =  dx  *  y0  +  tolerance;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  *  y0  +  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  y0  +  tolerance;	  double    x1    =    dx    *    oldDelta    +    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
96	[BUG]  [BUGGY]  double  x1  =  dx  *  oldDelta  *  delta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  *  oldDelta  *  delta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  *  oldDelta  *  delta;	  double    x1    =    dx    *    oldDelta    +    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
97	[BUG]  [BUGGY]  double  r3  =  y1  /  x2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  y1  /  x2;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y1  /  x2;	  double    r3    =    x1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
98	[BUG]  [BUGGY]  double  r3  =  y0  /  x1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  y0  /  x1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y0  /  x1;	  double    r3    =    x1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
99	[BUG]  [BUGGY]  double  r3  =  x1  /  y0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  x1  /  y0;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  x1  /  y0;	  double    r3    =    x1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
100	[BUG]  [BUGGY]  double  y1  =  oldDelta  *  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  oldDelta  *  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  *  y0;	  double    y1    =    oldDelta    *    y2;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
101	[BUG]  [BUGGY]  double  p1  =  oldDelta  /  y1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  /  y1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  /  y1;	  double    p1    =    y2    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
102	[BUG]  [BUGGY]  double  x1  =  x1  /  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  x1  /  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x1  /  y0;	  double    x1    =    y0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
103	[BUG]  [BUGGY]  double  x1  =  y1  /  x2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  y1  /  x2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y1  /  x2;	  double    x1    =    y0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
104	[BUG]  [BUGGY]  double  r3  =  1.0  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  1.0  /  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  1.0  /  oldDelta;	  double    r3    =    1.0    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
105	[BUG]  [BUGGY]  double  r3  =  1.0  -  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  1.0  -  oldDelta  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  1.0  -  oldDelta  +  1;	  double    r3    =    1.0    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
106	[BUG]  [BUGGY]  double  r3  =  0.5  -  oldDelta;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  0.5  -  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  0.5  -  oldDelta;	  double    r3    =    1.0    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
107	[BUG]  [BUGGY]  double  r3  =  dx  *  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  y0;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  y0;	  double    r3    =    dx    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
108	[BUG]  [BUGGY]  double  r3  =  y0  /  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  y0  /  dx;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y0  /  dx;	  double    r3    =    dx    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
109	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  dx;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  /  dx;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  /  dx;	  double    r3    =    dx    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
110	[BUG]  [BUGGY]  double  r3  =  dx  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  /  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  /  oldDelta;	  double    r3    =    dx    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
111	[BUG]  [BUGGY]  double  p1  =  oldDelta  /  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  /  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  /  dx;	  double    p1    =    dx    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
112	[BUG]  [BUGGY]  double  p1  =  dx  /  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  /  oldDelta  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  /  oldDelta  +  1;	  double    p1    =    dx    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
113	[BUG]  [BUGGY]  double  p1  =  y0  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  y0  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y0  /  oldDelta;	  double    p1    =    dx    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
114	[BUG]  [BUGGY]  double  y1  =  y2  /  y1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y2  /  y1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y2  /  y1;	  double    y1    =    y1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
115	[BUG]  [BUGGY]  double  y1  =  y0  /  dx;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y0  /  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  /  dx;	  double    y1    =    dx    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
116	[BUG]  [BUGGY]  double  r3  =  oldDelta  *  y1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  *  y1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  *  y1;	  double    r3    =    oldDelta    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
117	[BUG]  [BUGGY]  double  y1  =  oldDelta  *  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  oldDelta  *  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  *  dx;	  double    y1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
118	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  y1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  /  y1);  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  /  y1);	  double    r3    =    y1    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
119	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  dx.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  *  dx.doubleValue()  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  dx.doubleValue()  +  1;	  double    p1    =    dx    *    oldDelta.doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
120	[BUG]  [BUGGY]  double  p1  =  dx  *  oldDelta.doubleValue()  /  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  oldDelta.doubleValue()  /  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  oldDelta.doubleValue()  /  1;	  double    p1    =    dx    *    oldDelta.doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
121	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  y0.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  *  y0.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  y0.doubleValue();	  double    p1    =    oldDelta    *    dx.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
122	[BUG]  [BUGGY]  double  x1  =  y0  /  tolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  y0  /  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y0  /  tolerance;	  double    x1    =    dx    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
123	[BUG]  [BUGGY]  double  x1  =  oldDelta  /  tolerance;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  /  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  /  tolerance;	  double    x1    =    dx    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
124	[BUG]  [BUGGY]  double  p1  =  oldDelta  /  delta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  /  delta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  /  delta;	  double    p1    =    oldDelta    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
125	[BUG]  [BUGGY]  double  x0  =  oldDelta  /  x1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  oldDelta  /  x1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  oldDelta  /  x1;	  double    x0    =    oldDelta    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
126	[BUG]  [BUGGY]  double  x0  =  oldDelta  /  delta;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  oldDelta  /  delta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  oldDelta  /  delta;	  double    x0    =    oldDelta    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
127	[BUG]  [BUGGY]  double  x0  =  y0  /  x0;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  y0  /  x0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  y0  /  x0;	  double    x0    =    oldDelta    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
128	[BUG]  [BUGGY]  double  r3  =  Math.abs(delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  Math.abs(delta  -  oldDelta);  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  Math.abs(delta  -  oldDelta);	  double    r3    =    Math.abs(dx    -    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
129	[BUG]  [BUGGY]  double  r3  =  Math.abs(oldDelta  -  dx);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  Math.abs(oldDelta  -  dx);  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  Math.abs(oldDelta  -  dx);	  double    r3    =    Math.abs(dx    -    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
130	[BUG]  [BUGGY]  double  r3  =  Math.abs(dx  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  Math.abs(dx  /  oldDelta);  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  Math.abs(dx  /  oldDelta);	  double    r3    =    Math.abs(dx    -    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
131	[BUG]  [BUGGY]  double  r3  =  Math.abs(tolerance  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  Math.abs(tolerance  -  oldDelta);  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  Math.abs(tolerance  -  oldDelta);	  double    r3    =    Math.abs(dx    -    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
132	[BUG]  [BUGGY]  double  p1  =  dx  /  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  /  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  /  y0;	  double    p1    =    dx    /    dx;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
133	[BUG]  [BUGGY]  double  p1  =  y0  /  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  y0  /  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y0  /  dx;	  double    p1    =    dx    /    dx;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
134	[BUG]  [BUGGY]  double  y1  =  y2  *  dx;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y2  *  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y2  *  dx;	  double    y1    =    y0    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
135	[BUG]  [BUGGY]  double  x0  =  y1  /  x2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  y1  /  x2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  y1  /  x2;	  double    x0    =    x1    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
136	[BUG]  [BUGGY]  double  x0  =  oldDelta  /  x2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  oldDelta  /  x2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  oldDelta  /  x2;	  double    x0    =    x1    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
137	[BUG]  [BUGGY]  double  x0  =  x1  /  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  x1  /  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  x1  /  y0;	  double    x0    =    y1    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
138	[BUG]  [BUGGY]  double  x0  =  y0  /  x1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  y0  /  x1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  y0  /  x1;	  double    x0    =    y1    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
139	[BUG]  [BUGGY]  double  r3  =  oldDelta  *  tolerance;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  *  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  *  tolerance;	  double    r3    =    oldDelta    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
140	[BUG]  [BUGGY]  double  r3  =  y0  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  y0  *  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y0  *  oldDelta;	  double    r3    =    oldDelta    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
141	[BUG]  [BUGGY]  double  r3  =  dx  *  y1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  y1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  y1;	  double    r3    =    dx    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
142	[BUG]  [BUGGY]  double  r3  =  y1  /  dx;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  y1  /  dx;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y1  /  dx;	  double    r3    =    dx    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
143	[BUG]  [BUGGY]  double  r3  =  dx  *  y2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  y2;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  y2;	  double    r3    =    dx    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
144	[BUG]  [BUGGY]  double  r3  =  tolerance  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  tolerance  *  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance  *  oldDelta;	  double    r3    =    tolerance    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
145	[BUG]  [BUGGY]  double  r3  =  oldDelta  *  y2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  *  y2;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  *  y2;	  double    r3    =    oldDelta    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
146	[BUG]  [BUGGY]  double  y1  =  oldDelta  /  y1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  oldDelta  /  y1);  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  /  y1);	  double    y1    =    y0    /    y1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
147	[BUG]  [BUGGY]  double  x0  =  y1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  y1  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  y1  /  oldDelta;	  double    x0    =    x1    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
148	[BUG]  [BUGGY]  double  x0  =  y2  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  y2  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  y2  /  oldDelta;	  double    x0    =    x1    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
149	[BUG]  [BUGGY]  double  p1  =  dx  *  oldDelta  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  oldDelta  *  2  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  oldDelta  *  2  +  1;	  double    p1    =    dx    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
150	[BUG]  [BUGGY]  double  p1  =  dx  *  oldDelta  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  oldDelta  +  2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  oldDelta  +  2;	  double    p1    =    dx    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
151	[BUG]  [BUGGY]  double  r3  =  delta  /  tolerance;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  delta  /  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  delta  /  tolerance;	  double    r3    =    tolerance    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
152	[BUG]  [BUGGY]  double  r3  =  tolerance  /  delta  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  tolerance  /  delta  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance  /  delta  +  1;	  double    r3    =    tolerance    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
153	[BUG]  [BUGGY]  double  y0  =  tolerance  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  tolerance  *  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  tolerance  *  oldDelta;	  double    y0    =    oldDelta    *    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
154	[BUG]  [BUGGY]  double  x1  =  oldDelta  /  x0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  /  x0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  /  x0;	  double    x1    =    x0    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
155	[BUG]  [BUGGY]  double  x1  =  y1  /  y0;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  y1  /  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y1  /  y0;	  double    x1    =    x0    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
156	[BUG]  [BUGGY]  double  x1  =  oldDelta  /  y0;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  /  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  /  y0;	  double    x1    =    x0    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
157	[BUG]  [BUGGY]  double  y1  =  y0  /  x0;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y0  /  x0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  /  x0;	  double    x1    =    x0    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
158	[BUG]  [BUGGY]  double  r3  =  delta  /  dx;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  delta  /  dx;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  delta  /  dx;	  double    r3    =    dx    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
159	[BUG]  [BUGGY]  double  r3  =  dx  *  delta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  delta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  delta;	  double    r3    =    dx    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
160	[BUG]  [BUGGY]  double  y1  =  oldDelta  *  y1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  oldDelta  *  y1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  *  y1;	  double    y1    =    dx    *    y1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
161	[BUG]  [BUGGY]  double  r3  =  oldDelta  *  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  *  delta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  *  delta;	  double    r3    =    oldDelta    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
162	[BUG]  [BUGGY]  double  p1  =  oldDelta  /  x0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  /  x0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  /  x0;	  double    p1    =    oldDelta    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
163	[BUG]  [BUGGY]  double  p1  =  oldDelta  /  tolerance;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  /  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  /  tolerance;	  double    p1    =    oldDelta    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
164	[BUG]  [BUGGY]  double  y0  =  x  *  dx;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  x  *  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  x  *  dx;	  double    y0    =    dx    *    x1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
165	[BUG]  [BUGGY]  Double  p1  =  oldDelta  /  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  p1  =  oldDelta  /  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  p1  =  oldDelta  /  dx;	  double    p1    =    dx    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
166	[BUG]  [BUGGY]  double  y1  =  dx  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  dx  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  /  oldDelta;	  double    y1    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
167	[BUG]  [BUGGY]  double  p1  =  oldDelta  *  dx  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  oldDelta  *  dx  -  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  oldDelta  *  dx  -  1;	  double    p1    =    oldDelta    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
168	[BUG]  [BUGGY]  double  p1  =  dx  *  oldDelta  *  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  oldDelta  *  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  oldDelta  *  1;	  double    p1    =    dx    *    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
169	[BUG]  [BUGGY]  Double  r3  =  oldDelta  /  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =  oldDelta  /  y0;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =  oldDelta  /  y0;	  double    r3    =    y0    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
170	[BUG]  [BUGGY]  double  r3  =  oldDelta  -  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  -  y0;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  -  y0;	  double    r3    =    y0    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
171	[BUG]  [BUGGY]  double  r3  =  Math.abs(dx  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  Math.abs(dx  *  oldDelta);  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  Math.abs(dx  *  oldDelta);	  double    r3    =    Math.abs(dx    -    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
172	[BUG]  [BUGGY]  double  y1  =  y1  *  dx;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y1  *  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y1  *  dx;	  double    y1    =    y0    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
173	[BUG]  [BUGGY]  double  x1  =  x0  /  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  x0  /  oldDelta  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x0  /  oldDelta  +  1;	  double    x1    =    x0    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
174	[BUG]  [BUGGY]  double  x1  =  oldDelta  *  x0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  *  x0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  *  x0;	  double    x1    =    oldDelta    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
175	[BUG]  [BUGGY]  double  x1  =  oldDelta  *  x2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  *  x2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  *  x2;	  double    x1    =    oldDelta    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
176	[BUG]  [BUGGY]  double  p1  =  dx  *  y0  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  y0  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  y0  +  1;	  double    p1    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
177	[BUG]  [BUGGY]  double  dx  =  oldDelta  *  tolerance;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx  =  oldDelta  *  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  oldDelta  *  tolerance;	  double    dx    =    oldDelta    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
178	[BUG]  [BUGGY]  double  dx  =  oldDelta  *  delta;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx  =  oldDelta  *  delta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  oldDelta  *  delta;	  double    dx    =    oldDelta    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
179	[BUG]  [BUGGY]  double  dx  =  r3  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx  =  r3  *  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  r3  *  oldDelta;	  double    dx    =    oldDelta    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
180	[BUG]  [BUGGY]  double  dx  =  0.5  *  r3;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx  =  0.5  *  r3;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  0.5  *  r3;	  double    dx    =    oldDelta    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
181	[BUG]  [BUGGY]  double  y0  =  oldDelta  /  delta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  oldDelta  /  delta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  /  delta;	  double    y0    =    oldDelta    *    delta;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
182	[BUG]  [BUGGY]  double  y0  =  x1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  x1  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  x1  /  oldDelta;	  double    y0    =    x1    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
183	[BUG]  [BUGGY]  double  r3  =  x1  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  x1  /  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  x1  /  oldDelta;	  double    r3    =    x1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
184	[BUG]  [BUGGY]  double  x1  =  dx  /  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  /  oldDelta  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  /  oldDelta  +  1;	  double    x1    =    dx    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
185	[BUG]  [BUGGY]  double  x1  =  y0  *  oldDelta  +  tolerance;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  y0  *  oldDelta  +  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  y0  *  oldDelta  +  tolerance;	  double    x1    =    dx    *    oldDelta    +    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
186	[BUG]  [BUGGY]  double  r3  =  value  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  value  *  oldDelta.doubleValue();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  value  *  oldDelta.doubleValue();	  double    r3    =    dx    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
187	[BUG]  [BUGGY]  double  y0  =  oldDelta  /  y2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  oldDelta  /  y2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  /  y2;	  double    y0    =    oldDelta    *    y2;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
188	[BUG]  [BUGGY]  double  x1  =  x0  *  dx;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  x0  *  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x0  *  dx;	  double    x1    =    dx    *    x0;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
189	[BUG]  [BUGGY]  double  r3  =  0.5  *  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  0.5  *  oldDelta  +  delta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  0.5  *  oldDelta  +  delta;	  double    r3    =    0.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
190	[BUG]  [BUGGY]  double  r3  =  0.5  *  oldDelta  -  delta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  0.5  *  oldDelta  -  delta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  0.5  *  oldDelta  -  delta;	  double    r3    =    0.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
191	[BUG]  [BUGGY]  double  x1  =  oldDelta  /  x2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  oldDelta  /  x2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  oldDelta  /  x2;	  double    x1    =    y0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
192	[BUG]  [BUGGY]  double  x1  =  x2  /  y0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  x2  /  y0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x2  /  y0;	  double    x1    =    y0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
193	[BUG]  [BUGGY]  Double  r3  =(Double.isNaN(oldDelta)||  Double.isNaN(r2));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =(Double.isNaN(oldDelta)||  Double.isNaN(r2));  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double.isNaN(oldDelta)||  Double.isNaN(r2));	  Double    r3    =(Double.isNaN(dx)||    Double.isNaN(r2));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
194	[BUG]  [BUGGY]  Double  r3  =(Double.isNaN(r2)||  Double.isNaN(dx));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =(Double.isNaN(r2)||  Double.isNaN(dx));  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double.isNaN(r2)||  Double.isNaN(dx));	  Double    r3    =(Double.isNaN(dx)||    Double.isNaN(r2));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
195	[BUG]  [BUGGY]  double  r3  =  oldDelta.doubleValue()  +  delta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta.doubleValue()  +  delta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta.doubleValue()  +  delta;	  double    r3    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
196	[BUG]  [BUGGY]  double  r3  =  oldDelta.doubleValue()  *  delta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta.doubleValue()  *  delta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta.doubleValue()  *  delta;	  double    r3    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
197	[BUG]  [BUGGY]  double  x1  =  dx  /  x0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  /  x0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  /  x0;	  double    x1    =    dx    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
198	[BUG]  [BUGGY]  double  p1  =  value  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  value  *  oldDelta.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  value  *  oldDelta.doubleValue();	  double    p1    =    delta    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
199	[BUG]  [BUGGY]  Double  p1  =  oldDelta  *  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  p1  =  oldDelta  *  delta.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  p1  =  oldDelta  *  delta.doubleValue();	  double    p1    =    delta    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
200	[BUG]  [BUGGY]  Double  r3  =(Double)oldDelta.getValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =(Double)oldDelta.getValue();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =(Double)oldDelta.getValue();	  Double    r3    =(Double)oldDelta.clone();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
201	[BUG]  [BUGGY]  double  r3  =  delta  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  delta  *  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  delta  *  oldDelta;	  double    r3    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
202	[BUG]  [BUGGY]  double  r3  =  dx  *  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  oldDelta  +  delta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  oldDelta  +  delta;	  double    r3    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
203	[BUG]  [BUGGY]  double  x0  =  oldDelta  *  x0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  oldDelta  *  x0;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  oldDelta  *  x0;	  double    x0    =    oldDelta    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
204	[BUG]  [BUGGY]  double  x0  =  oldDelta  /  tolerance;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  oldDelta  /  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  oldDelta  /  tolerance;	  double    x0    =    oldDelta    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
205	[BUG]  [BUGGY]  double  p1  =  y0  *  tolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  y0  *  tolerance.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y0  *  tolerance.doubleValue();	  double    p1    =    dx    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
206	[BUG]  [BUGGY]  double  y1  =  oldDelta  *  y0  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  oldDelta  *  y0  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  *  y0  +  1;	  double    y1    =    dx    *    y0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
207	[BUG]  [BUGGY]  double  x1  =  x1  /  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  x1  /  oldDelta  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x1  /  oldDelta  +  1;	  double    x1    =    x1    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
208	[BUG]  [BUGGY]  double  x0  =  x1  /  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  x1  /  oldDelta  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  x1  /  oldDelta  +  1;	  double    x0    =    x1    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
209	[BUG]  [BUGGY]  double  y1  =  y0  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y0  /  oldDelta);  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  /  oldDelta);	  double    y1    =    y0    /    y1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
210	[BUG]  [BUGGY]  double  y1  =  y0  /  tolerance);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y0  /  tolerance);  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  /  tolerance);	  double    y1    =    y0    /    y1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
211	[BUG]  [BUGGY]  double  r3  =  x1  /  tolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  x1  /  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  x1  /  tolerance;	  double    r3    =    x1    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
212	[BUG]  [BUGGY]  double  p1  =  dx  *  oldDelta  +  0.5;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  *  oldDelta  +  0.5;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  *  oldDelta  +  0.5;	  double    p1    =    dx    *    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
213	[BUG]  [BUGGY]  double  r3  =  tolerance  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  tolerance  *  oldDelta.doubleValue();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance  *  oldDelta.doubleValue();	  double    r3    =    dx    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
214	[BUG]  [BUGGY]  double  r3  =  dx  *  tolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  tolerance.doubleValue();  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  tolerance.doubleValue();	  double    r3    =    dx    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
215	[BUG]  [BUGGY]  double  r3  =  tolerance  /  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  tolerance  /  oldDelta  +  1;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  tolerance  /  oldDelta  +  1;	  double    r3    =    tolerance    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
216	[BUG]  [BUGGY]  double  x0  =  x0  /  y1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x0  =  x0  /  y1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x0  =  x0  /  y1;	  double    x0    =    y1    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
217	[BUG]  [BUGGY]  double  r3  =  1.0  -  oldDelta  *  tolerance;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  1.0  -  oldDelta  *  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  1.0  -  oldDelta  *  tolerance;	  double    r3    =    1.0    -    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
218	[BUG]  [BUGGY]  double  y1  =  dx  /  y1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  dx  /  y1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  /  y1;	  double    y1    =    dx    *    y1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
219	[BUG]  [BUGGY]  double  d3  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  d3  =  dx  *  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  d3  =  dx  *  oldDelta;	  double    r3    =    oldDelta    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
220	[BUG]  [BUGGY]  Double  r3  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  r3  =  dx  *  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  r3  =  dx  *  oldDelta;	  double    r3    =    oldDelta    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
221	[BUG]  [BUGGY]  double  y1  =  y0  /  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y0  /  oldDelta  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  /  oldDelta  +  1;	  double    y1    =    y0    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
222	[BUG]  [BUGGY]  double  r3  =  0.5  *  oldDelta  -  tolerance;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  0.5  *  oldDelta  -  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  0.5  *  oldDelta  -  tolerance;	  double    r3    =    0.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
223	[BUG]  [BUGGY]  double  r3  =  0.5  *  oldDelta  +  tolerance;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  0.5  *  oldDelta  +  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  0.5  *  oldDelta  +  tolerance;	  double    r3    =    0.5    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
224	[BUG]  [BUGGY]  double  p1  =  y0  *  dx.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  y0  *  dx.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y0  *  dx.doubleValue();	  double    p1    =    oldDelta    *    dx.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
225	[BUG]  [BUGGY]  Double  p1  =  dx  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  Double  p1  =  dx  *  oldDelta.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	Double  p1  =  dx  *  oldDelta.doubleValue();	  double    p1    =    oldDelta    *    dx.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
226	[BUG]  [BUGGY]  double  x1  =  dx  /  oldDelta  *  tolerance;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  /  oldDelta  *  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  /  oldDelta  *  tolerance;	  double    x1    =    dx    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
227	[BUG]  [BUGGY]  double  dx1  =  oldDelta  *  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx1  =  oldDelta  *  dx;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx1  =  oldDelta  *  dx;	  double    x1    =    oldDelta    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
228	[BUG]  [BUGGY]  double  x1  =  dx  /  x2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  dx  /  x2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  dx  /  x2;	  double    x1    =    dx    *    x2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
229	[BUG]  [BUGGY]  double  dx  =  tolerance  *  r3;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx  =  tolerance  *  r3;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  tolerance  *  r3;	  double    dx    =    oldDelta    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
230	[BUG]  [BUGGY]  double  dx  =  dx  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  dx  =  dx  *  oldDelta;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  dx  =  dx  *  oldDelta;	  double    dx    =    oldDelta    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
231	[BUG]  [BUGGY]  double  y1  =  dx  /  y0  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  dx  /  y0  +  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  /  y0  +  1;	  double    y1    =    dx    *    y0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
232	[BUG]  [BUGGY]  double  y1  =  dx  *  y0  /  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  dx  *  y0  /  1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  dx  *  y0  /  1;	  double    y1    =    dx    *    y0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
233	[BUG]  [BUGGY]  double  y1  =  y0  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  y0  *  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  y0  *  oldDelta;	  double    y1    =    y0    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
234	[BUG]  [BUGGY]  double  p1  =  dx  /  oldDelta  *  tolerance;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  dx  /  oldDelta  *  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  dx  /  oldDelta  *  tolerance;	  double    p1    =    dx    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
235	[BUG]  [BUGGY]  double  p1  =  y0  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  y0  *  oldDelta.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  y0  *  oldDelta.doubleValue();	  double    p1    =    delta    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
236	[BUG]  [BUGGY]  double  p1  =  tolerance  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  p1  =  tolerance  *  oldDelta.doubleValue();  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  p1  =  tolerance  *  oldDelta.doubleValue();	  double    p1    =    delta    *    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
237	[BUG]  [BUGGY]  double  y0  =  oldDelta  *  y1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  oldDelta  *  y1);  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  *  y1);	  double    y0    =    oldDelta    *    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
238	[BUG]  [BUGGY]  double  y0  =  oldDelta  /  tolerance;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  oldDelta  /  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  oldDelta  /  tolerance;	  double    y0    =    oldDelta    *    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
239	[BUG]  [BUGGY]  double  y1  =  oldDelta  *  tolerance;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y1  =  oldDelta  *  tolerance;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y1  =  oldDelta  *  tolerance;	  double    y1    =    oldDelta    *    y2;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
240	[BUG]  [BUGGY]  double  r3  =  y0  /  oldDelta  *  tolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  y0  /  oldDelta  *  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  y0  /  oldDelta  *  tolerance;	  double    r3    =    y0    /    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
241	[BUG]  [BUGGY]  double  r3  =  dx  *  oldDelta  *  tolerance;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  dx  *  oldDelta  *  tolerance;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  dx  *  oldDelta  *  tolerance;	  double    r3    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
242	[BUG]  [BUGGY]  double  r3  =  oldDelta  /  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  oldDelta  /  2;  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  oldDelta  /  2;	  double    r3    =    oldDelta    /    tolerance;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
243	[BUG]  [BUGGY]  double  x1  =  x1  /  y2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  x1  =  x1  /  y2;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  x1  =  x1  /  y2;	  double    x1    =    y0    /    x2;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
244	[BUG]  [BUGGY]  double  y0  =  dx  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  dx  /  oldDelta;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  dx  /  oldDelta;	  double    y0    =    dx    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
245	[BUG]  [BUGGY]  double  y0  =  dx  /  x1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  y0  =  dx  /  x1;  [BUGGY]      double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  y0  =  dx  /  x1;	  double    y0    =    dx    *    x1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
246	[BUG]  [BUGGY]  double  r3  =  Math.abs(dx  -  oldDelta  *  tolerance);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  delta  =  0.5  *  dx;  oldDelta  =  delta;  }  else  {      [BUGGY]  double  r3  =  Math.abs(dx  -  oldDelta  *  tolerance);  [BUGGY]      double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;  p1  =  1.0  -  r3;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	259	259	1	replace	double  r3  =  Math.abs(dx  -  oldDelta  *  tolerance);	  double    r3    =    Math.abs(dx    -    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
