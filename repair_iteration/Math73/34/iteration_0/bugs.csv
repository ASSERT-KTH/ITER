bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
67	[BUG] [BUGGY] y0 = y1; [FE] AssertionFailedError [CONTEXT]  delta = 0.5 * dx; oldDelta = delta; } else { oldDelta = delta; delta = p / p1; } }  x0 = x1; [BUGGY] y0 = y1; [BUGGY]  if (Math.abs(delta) > tolerance) { x1 = x1 + delta; } else if (dx > 0.0) { x1 = x1 + 0.5 * tolerance; } else if (dx <= 0.0) { x1 = x1 - 0.5 * tolerance; } y1 = f.value(x1); if ((y1 > 0) == (y2 > 0)) { [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	295	295	1	replace	
68	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  delta = 0.5 * dx; oldDelta = delta; } else { oldDelta = delta; delta = p / p1; } }  x0 = x1; [BUGGY] [BUGGY] y0 = y1;  if (Math.abs(delta) > tolerance) { x1 = x1 + delta; } else if (dx > 0.0) { x1 = x1 + 0.5 * tolerance; } else if (dx <= 0.0) { x1 = x1 - 0.5 * tolerance; } y1 = f.value(x1); if ((y1 > 0) == (y2 > 0)) { [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	295	295	1	add	
