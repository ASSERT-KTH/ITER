bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  p1  =  r3  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  r3  *  dx  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  r3  *  dx  +  1;	  p1    =    r3    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  double  r2  =  y0  /  x0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y0  /  x0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y0  /  x0;	  double    r2    =    y1    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
3	[BUG]  [BUGGY]  double  r2  =  x0  /  y1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  x0  /  y1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  x0  /  y1;	  double    r2    =    y1    /    x0;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
4	[BUG]  [BUGGY]  p1  =  1.0  /  x2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  /  x2;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  /  x2;	  p1    =    1.0    -    x2;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
5	[BUG]  [BUGGY]  double  r2  =  y0  /  p1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y0  /  p1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y0  /  p1;	  double    r2    =    y0    /    p;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
6	[BUG]  [BUGGY]  p1  =  r3  *  x0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  r3  *  x0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  r3  *  x0;	  p1    =    x0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
7	[BUG]  [BUGGY]  p1  =  r2  *  x0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  r2  *  x0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  r2  *  x0;	  p1    =    x0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
8	[BUG]  [BUGGY]  double  r2  =  y1  /  p0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y1  /  p0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y1  /  p0;	  double    r2    =    y1    /    p;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]  double  r2  =  dx  *  r3  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  dx  *  r3  +  2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  dx  *  r3  +  2;	  double    r2    =    dx    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
10	[BUG]  [BUGGY]  double  r2  =  y0  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y0  *  r3  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y0  *  r3  +  1;	  double    r2    =    dx    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
11	[BUG]  [BUGGY]  p1  =  1.0  -  x0  *  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  -  x0  *  dx;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  -  x0  *  dx;	  p1    =    1.0    -    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
12	[BUG]  [BUGGY]  double  r3  =  y0  *  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  y0  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  y0  *  dx;	  double    r3    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
13	[BUG]  [BUGGY]  double  r3  =  y1  *  dx;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  y1  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  y1  *  dx;	  double    r3    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
14	[BUG]  [BUGGY]  p1  =  1.0  /  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  /  dx  +  1;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  /  dx  +  1;	  p1    =    1.0    /    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
15	[BUG]  [BUGGY]  p1  =  1.0  /  r2  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  /  r2  +  1;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  /  r2  +  1;	  p1    =    1.0    /    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
16	[BUG]  [BUGGY]  p1  =  1.0  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  *  dx  +  1;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  *  dx  +  1;	  p1    =    1.0    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  double  r1  =  x0  *  r3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  x0  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  x0  *  r3;	  double    r1    =    x0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
18	[BUG]  [BUGGY]  double  r1  =  x0  /  r2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  x0  /  r2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  x0  /  r2;	  double    r1    =    x0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
19	[BUG]  [BUGGY]  double  r3  =  x0  *  p;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  x0  *  p;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  x0  *  p;	  double    r3    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
20	[BUG]  [BUGGY]  double  r3  =  p  *  r3;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  p  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  p  *  r3;	  double    r3    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  p1  =  dx  *  r2  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  dx  *  r2  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  dx  *  r2  +  1;	  p1    =    dx    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  double  r1  =  y0  /  r2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  y0  /  r2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  y0  /  r2;	  double    r1    =    y0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  double  r1  =  p  *  r2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  p  *  r2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  p  *  r2;	  double    r1    =    y0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  double  r3  =  y0  /  r3;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  y0  /  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  y0  /  r3;	  double    r3    =    y0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  double  r3  =  y1  *  r3;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  y1  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  y1  *  r3;	  double    r3    =    y0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  double  r3  =  x0  *  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  x0  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  x0  *  dx;	  double    r3    =    dx    *    x0;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
27	[BUG]  [BUGGY]  double  r2  =  y0  *  dx;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y0  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y0  *  dx;	  double    r2    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
28	[BUG]  [BUGGY]  double  r2  =  x0  *  dx;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  x0  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  x0  *  dx;	  double    r2    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
29	[BUG]  [BUGGY]  double  r2  =  y1  *  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y1  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y1  *  dx;	  double    r2    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
30	[BUG]  [BUGGY]  double  r3  =  p  *  dx;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  p  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  p  *  dx;	  double    r3    =    dx    *    p;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
31	[BUG]  [BUGGY]  double  p  =  dx  *  r3;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  p  =  dx  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  p  =  dx  *  r3;	  double    r3    =    dx    *    p;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  double  r3  =  y0  *  p;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  y0  *  p;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  y0  *  p;	  double    r3    =    dx    *    p;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  double  r3  =  y0  *  x2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  y0  *  x2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  y0  *  x2;	  double    r3    =    dx    *    x2;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
34	[BUG]  [BUGGY]  double  r3  =  x1  *  dx;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  x1  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  x1  *  dx;	  double    r3    =    dx    *    x2;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
35	[BUG]  [BUGGY]  double  r2  =  dx  *  y2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  dx  *  y2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  dx  *  y2;	  double    r2    =    dx    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
36	[BUG]  [BUGGY]  double  r2  =  y2  /  dx;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y2  /  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y2  /  dx;	  double    r2    =    dx    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
37	[BUG]  [BUGGY]  double  r1  =  dx  *  p;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  dx  *  p;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  dx  *  p;	  double    r1    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  double  r1  =  y0  *  r3;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  y0  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  y0  *  r3;	  double    r1    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  double  r1  =  p  *  r3;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  p  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  p  *  r3;	  double    r1    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  p1  =  1.0  -  dx  *  r2  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  -  dx  *  r2  +  1;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  -  dx  *  r2  +  1;	  p1    =    1.0    -    dx    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
41	[BUG]  [BUGGY]  double  r2  =  y0  *  r3;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y0  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y0  *  r3;	  double    r2    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
42	[BUG]  [BUGGY]  double  r2  =  x0  *  p;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  x0  *  p;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  x0  *  p;	  double    r2    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
43	[BUG]  [BUGGY]  double  r2  =  p  *  r3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  p  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  p  *  r3;	  double    r2    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
44	[BUG]  [BUGGY]  p  =  r1  *  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  r1  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  r1  *  dx;	  p    =    dx    *    r1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
45	[BUG]  [BUGGY]  double  r2  =  x1  /  y2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  x1  /  y2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  x1  /  y2;	  double    r2    =    x0    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
46	[BUG]  [BUGGY]  double  r2  =  y0  /  x2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y0  /  x2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y0  /  x2;	  double    r2    =    x0    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
47	[BUG]  [BUGGY]  p1  =  1.0  -  r3  *  dx;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  -  r3  *  dx;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  -  r3  *  dx;	  p1    =    1.0    -    dx    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
48	[BUG]  [BUGGY]  p  =  r3  *  x0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  r3  *  x0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  r3  *  x0;	  p    =    x0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
49	[BUG]  [BUGGY]  p  =  r2  *  x0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  r2  *  x0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  r2  *  x0;	  p    =    x0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
50	[BUG]  [BUGGY]  p  =  r3  *  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  r3  *  dx  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  r3  *  dx  +  1;	  p    =    r3    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  double  r2  =  p  *  dx;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  p  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  p  *  dx;	  double    r2    =    dx    *    p;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  double  p2  =  dx  *  r3;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  p2  =  dx  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  p2  =  dx  *  r3;	  double    r2    =    dx    *    p;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
53	[BUG]  [BUGGY]  double  r1  =  dx  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  dx  *  r3  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  dx  *  r3  +  1;	  double    r1    =    dx    *    r2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  double  r1  =  y0  *  r2  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  y0  *  r2  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  y0  *  r2  +  1;	  double    r1    =    dx    *    r2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  double  r2  =  x0  /  y0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  x0  /  y0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  x0  /  y0;	  double    r2    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
56	[BUG]  [BUGGY]  double  r3  =  y0  *  r2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  y0  *  r2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  y0  *  r2;	  double    r3    =    dx    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
57	[BUG]  [BUGGY]  double  r2  =  y0  *  r1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y0  *  r1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y0  *  r1;	  double    r2    =    dx    *    r1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
58	[BUG]  [BUGGY]  double  r2  =  x0  *  r1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  x0  *  r1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  x0  *  r1;	  double    r2    =    dx    *    r1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
59	[BUG]  [BUGGY]  double  r2  =  p  *  r1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  p  *  r1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  p  *  r1;	  double    r2    =    dx    *    r1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
60	[BUG]  [BUGGY]  double  r3  =  y0  *  p1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  y0  *  p1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  y0  *  p1;	  double    r3    =    dx    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  double  r2  =  y0  *  p1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y0  *  p1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y0  *  p1;	  double    r2    =    dx    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
62	[BUG]  [BUGGY]  double  r2  =  y3  /  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y3  /  y0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y3  /  y0;	  double    r2    =    y3    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
63	[BUG]  [BUGGY]  p  =  x0  *  r2  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  x0  *  r2  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  x0  *  r2  +  1;	  p    =    dx    *    r2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
64	[BUG]  [BUGGY]  p1  =  1.0  *  r2  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  *  r2  +  1;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  *  r2  +  1;	  p1    =    1.0    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  p1  =  1.0  *  r3  /  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  *  r3  /  1;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  *  r3  /  1;	  p1    =    1.0    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  double  r2  =  x0  /  r3;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  x0  /  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  x0  /  r3;	  double    r2    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
67	[BUG]  [BUGGY]  double  r2  =  x1  *  r3;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  x1  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  x1  *  r3;	  double    r2    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
68	[BUG]  [BUGGY]  double  r3  =  dx  *  r1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  dx  *  r1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  dx  *  r1;	  double    r3    =    dx    *    p1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
69	[BUG]  [BUGGY]  double  r3  =  x0  /  r3;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  x0  /  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  x0  /  r3;	  double    r3    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  double  r3  =  x1  *  r3;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  x1  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  x1  *  r3;	  double    r3    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  double  r3  =  dx  *  r2  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  dx  *  r2  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  dx  *  r2  +  1;	  double    r3    =    dx    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
72	[BUG]  [BUGGY]  double  r2  =  dx  /  r3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  dx  /  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  dx  /  r3;	  double    r2    =    dx    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
73	[BUG]  [BUGGY]  double  r2  =  x0  /  dx;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  x0  /  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  x0  /  dx;	  double    r2    =    x0    /    y2;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
74	[BUG]  [BUGGY]  double  r1  =  dx  *  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  dx  *  y0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  dx  *  y0;	  double    r1    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  double  r2  =  y3  /  y1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y3  /  y1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y3  /  y1;	  double    r2    =    y0    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
76	[BUG]  [BUGGY]  p  =  x0  *  r1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  x0  *  r1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  x0  *  r1;	  p    =    dx    *    r1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
77	[BUG]  [BUGGY]  p1  =  1.0  -  x0  *  r2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  -  x0  *  r2;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  -  x0  *  r2;	  p1    =    1.0    -    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
78	[BUG]  [BUGGY]  p  =  x0  *  dx;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  x0  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  x0  *  dx;	  p    =    r3    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
79	[BUG]  [BUGGY]  double  r2  =  y3  /  p;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y3  /  p;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y3  /  p;	  double    r2    =    y0    /    p;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
80	[BUG]  [BUGGY]  p1  =  1.0  *  d3;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  *  d3;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  *  d3;	  p1    =    1.0    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  p1  =  x0  *  dx;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  x0  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  x0  *  dx;	  p1    =    r2    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
82	[BUG]  [BUGGY]  double  r2  =  dx  *  r1  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  dx  *  r1  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  dx  *  r1  +  1;	  double    r2    =    dx    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
83	[BUG]  [BUGGY]  p1  =  x0  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  x0  *  r3  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  x0  *  r3  +  1;	  p1    =    dx    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
84	[BUG]  [BUGGY]  double  r1  =  y2  *  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  y2  *  y0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  y2  *  y0;	  double    r1    =    y0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
85	[BUG]  [BUGGY]  p1  =  1.0  /  dx2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  /  dx2;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  /  dx2;	  p1    =    1.0    /    dx;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
86	[BUG]  [BUGGY]  p1  =  y0  *  r2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  y0  *  r2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  y0  *  r2;	  p1    =    x0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
87	[BUG]  [BUGGY]  p  =  x1  *  r3;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  x1  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  x1  *  r3;	  p    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
88	[BUG]  [BUGGY]  p1  =  1.0  -  x0  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  -  x0  *  r3  +  1;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  -  x0  *  r3  +  1;	  p1    =    1.0    -    dx    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
89	[BUG]  [BUGGY]  p1  =  1.0  /  r3  +  1.0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  /  r3  +  1.0;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  /  r3  +  1.0;	  p1    =    1.0    /    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
90	[BUG]  [BUGGY]  p  =  x0  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  x0  *  r3  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  x0  *  r3  +  1;	  p    =    dx    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
91	[BUG]  [BUGGY]  double  r2  =  dx  *  r2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  dx  *  r2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  dx  *  r2;	  double    r2    =    dx    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
92	[BUG]  [BUGGY]  double  r1  =  dx  *  r2  /  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  dx  *  r2  /  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  dx  *  r2  /  1;	  double    r1    =    dx    *    r2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
93	[BUG]  [BUGGY]  double  r1  =  dx  *  y2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  dx  *  y2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  dx  *  y2;	  double    r1    =    dx    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
94	[BUG]  [BUGGY]  p1  =  1.0  /  x0  *  r3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  /  x0  *  r3;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  /  x0  *  r3;	  p1    =    1.0    -    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
95	[BUG]  [BUGGY]  p  =  r3  *  r2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  r3  *  r2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  r3  *  r2;	  p    =    x0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
96	[BUG]  [BUGGY]  double  r3  =  dy  *  r3;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  dy  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  dy  *  r3;	  double    r3    =    x0    *    r3;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  double  r1  =  x0  *  dx;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  x0  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  x0  *  dx;	  double    r1    =    x0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
98	[BUG]  [BUGGY]  p1  =  1.0  /  y0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  /  y0;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  /  y0;	  p1    =    1.0    /    r2;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
99	[BUG]  [BUGGY]  p  =  y0  *  dx;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p  =  y0  *  dx;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p  =  y0  *  dx;	  p    =    r3    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
100	[BUG]  [BUGGY]  p1  =  1.0  *  dx  *  r3;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  *  dx  *  r3;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  *  dx  *  r3;	  p1    =    1.0    *    dx;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
101	[BUG]  [BUGGY]  double  r3  =  x0  *  r2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  x0  *  r2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  x0  *  r2;	  double    r3    =    dx    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
102	[BUG]  [BUGGY]  double  r2  =  dx  /  y1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  dx  /  y1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  dx  /  y1;	  double    r2    =    y0    /    y1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
103	[BUG]  [BUGGY]  double  r1  =  y2  *  r3;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r1  =  y2  *  r3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r1  =  y2  *  r3;	  double    r1    =    y0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
104	[BUG]  [BUGGY]  double  r3  =  y0  *  x0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r3  =  y0  *  x0;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r3  =  y0  *  x0;	  double    r3    =    dx    *    x0;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
105	[BUG]  [BUGGY]  double  r2  =  x0  *  r3  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  x0  *  r3  +  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  x0  *  r3  +  1;	  double    r2    =    dx    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
106	[BUG]  [BUGGY]  double  r2  =  dx  *  r3  /  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  dx  *  r3  /  1;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  dx  *  r3  /  1;	  double    r2    =    dx    *    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
107	[BUG]  [BUGGY]  double  r2  =  y1  /  y3;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  double  r2  =  y1  /  y3;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	double  r2  =  y1  /  y3;	  double    r2    =    y1    /    y0;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
108	[BUG]  [BUGGY]  p1  =  1.0  /  dx  *  r3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  /  dx  *  r3;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  /  dx  *  r3;	  p1    =    1.0    /    dx;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
109	[BUG]  [BUGGY]  p1  =  1.0  /  dx  *  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  /  dx  *  y2;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  /  dx  *  y2;	  p1    =    1.0    /    dx;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
110	[BUG]  [BUGGY]  p1  =  r3  *  r2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  r3  *  r2;  [BUGGY]      p1  =  1.0  -  r3;  }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  r3  *  r2;	  p1    =    x0    *    r2;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
111	[BUG]  [BUGGY]  p1  =  1.0  /  x0  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  double  r3  =  y1  /  y0;  double  p;  double  p1;    if  (x0  ==  x2)  {  p  =  dx  *  r3;      [BUGGY]  p1  =  1.0  /  x0  +  1;  [BUGGY]      }  else  {  double  r1  =  y0  /  y2;  double  r2  =  y1  /  y2;  p  =  r3  *  (dx  *  r1  *  (r1  -  r2)  -  (x1  -  x0)  *  (r2  -  1.0));  p1  =  (r1  -  1.0)  *  (r2  -  1.0)  *  (r3  -  1.0);  }  if  (p  >  0.0)  {  p1  =  -p1;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	268	268	1	replace	p1  =  1.0  /  x0  +  1;	  p1    =    1.0    /    r3    +    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
