bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  oldDelta  =  p;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]  oldDelta  =  p;  [BUGGY]  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  p;	oldDelta  =  delta;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
2	[BUG]  [BUGGY]  oldDelta  =  delta  /  p1;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]  oldDelta  =  delta  /  p1;  [BUGGY]  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  delta  /  p1;	oldDelta  =  delta;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
3	[BUG]  [BUGGY]  oldDelta  =  delta  *  p1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]  oldDelta  =  delta  *  p1;  [BUGGY]  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  delta  *  p1;	oldDelta  =  delta;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
4	[BUG]  [BUGGY]  oldDelta  =  delta  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]  oldDelta  =  delta  +  1;  [BUGGY]  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  delta  +  1;	oldDelta  =  delta;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]    [BUGGY]  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	  	oldDelta  =  delta;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
6	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
7	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
8	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]    double  p  =  tolerance  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	    double  p  =  tolerance  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
9	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	    double  p  =  tolerance  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
10	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1);  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
11	[BUG]  [BUGGY]  oldDelta  =  delta  -  1;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]  oldDelta  =  delta  -  1;  [BUGGY]  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  delta  -  1;	oldDelta  =  delta;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
12	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1.doubleValue();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]    double  p  =  tolerance  *  p1.doubleValue();  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	    double  p  =  tolerance  *  p1.doubleValue();		non-compiled	[CE]  illegal  start  of  expression	32	None	add
13	[BUG]  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;  [BUGGY]    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(tolerance  *  p1);  [BUGGY]  oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	    double  p  =  tolerance  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(tolerance  *  p1);		non-compiled	[CE]  illegal  start  of  expression	32	None	add
