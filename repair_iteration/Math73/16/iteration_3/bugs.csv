bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  oldDelta  =  p  /  p1  +  delta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  p  /  p1  +  delta;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  p  /  p1  +  delta;	  oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2	[BUG]  [BUGGY]  oldDelta  =  p  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  p  /  1;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  p  /  1;	  oldDelta    =    p    -    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  oldDelta  -=  p  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  -=  p  -  1;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  -=  p  -  1;	  oldDelta    =    p    -    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  delta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  delta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  delta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
5	[BUG]  [BUGGY]  double  p  =  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
6	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  dx  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  dx  *  p1);	  double    p    =    dx    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
7	[BUG]  [BUGGY]  double  p  =  dx  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  dx  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  dx  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    dx    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
8	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
9	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
10	[BUG]  [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    p1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
11	[BUG]  [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    p1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
12	[BUG]  [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    p1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
13	[BUG]  [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    p1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
14	[BUG]  [BUGGY]  double  p  =  p  *  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  delta.doubleValue();  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  delta.doubleValue();	  double    p    =    delta    *    p1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
15	[BUG]  [BUGGY]  pendency  =  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  pendency  =  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	pendency  =  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
16	[BUG]  [BUGGY]  pendency  =  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  pendency  =  Math.abs(tolerance  *  p1);  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	pendency  =  Math.abs(tolerance  *  p1);	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
17	[BUG]  [BUGGY]  FixedTolerance  oldDelta  =  fixedTolerance(tolerance);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  FixedTolerance  oldDelta  =  fixedTolerance(tolerance);  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	FixedTolerance  oldDelta  =  fixedTolerance(tolerance);	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
18	[BUG]  [BUGGY]  pendency  =  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  pendency  =  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	pendency  =  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
19	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(tolerance  *  p2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(tolerance  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(tolerance  *  p2);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
21	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p2)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p2)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p2)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
22	[BUG]  [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  atically(delta  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  atically(delta  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	atically(delta  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(delta  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(delta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(delta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(delta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
26	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(delta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(delta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(delta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(delta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
27	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  dx);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  dx);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  dx);	  double    p    =    oldDelta    *    p1    +    Math.abs(0.5    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(0.5  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(0.5  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  +  Math.abs(0.5  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(0.5    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
29	[BUG]  [BUGGY]  double  p  =  p  *  p1  +  Math.abs(0.5  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  p1  +  Math.abs(0.5  *  oldDelta);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  p1  +  Math.abs(0.5  *  oldDelta);	  double    p    =    oldDelta    *    p1    +    Math.abs(0.5    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
30	[BUG]  [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance;    delta    =    p    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance;    delta    =    p    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(tolerance  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(tolerance  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  oldDelta  =  delta  /  p;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  delta  /  p;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  delta  /  p;	  oldDelta    =    p    /    delta;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    0.5    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
39	[BUG]  [BUGGY]  lungul(dx,  p1))  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  lungul(dx,  p1))  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	lungul(dx,  p1))  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    0.5    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
40	[BUG]  [BUGGY]  oldDelta  =  p  *  p1  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  p  *  p1  +  1;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  p  *  p1  +  1;	  oldDelta    =    delta    *    p1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
41	[BUG]  [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
42	[BUG]  [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
43	[BUG]  [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
44	[BUG]  [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(delta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  tolerance  *  p1  +  Math.abs(delta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
45	[BUG]  [BUGGY]  double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
46	[BUG]  [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
47	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  dx  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  dx  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  dx  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
48	[BUG]  [BUGGY]  double  p  =  p1  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p1  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p1  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
49	[BUG]  [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  p  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  p  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  p  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  p  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  p  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  p  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  oldDelta  =  p  +  delta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  p  +  delta;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  p  +  delta;	  oldDelta    =    delta    +    p1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
53	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
54	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
55	[BUG]  [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p1    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
56	[BUG]  [BUGGY]  double  p  =  p  *  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  oldDelta.doubleValue();  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  oldDelta.doubleValue();	  double    p    =    p    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  double  p  =  delta  *  tolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  tolerance.doubleValue();  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  tolerance.doubleValue();	  double    p    =    p    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  double  p  =  p  *  p1.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  p1.doubleValue()  +  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  p1.doubleValue()  +  1;	  double    p    =    p    *    p1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  oldDelta  =  delta  *  p;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  delta  *  p;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  delta  *  p;	  oldDelta    =    p    *    delta;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
60	[BUG]  [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(dx  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  tolerance  *  p1  +  Math.abs(dx  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
61	[BUG]  [BUGGY]  lungul(tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  lungul(tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	lungul(tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
62	[BUG]  [BUGGY]  lungul(dx,  p)>  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  lungul(dx,  p)>  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	lungul(dx,  p)>  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
63	[BUG]  [BUGGY]  lungul(tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  lungul(tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	lungul(tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
64	[BUG]  [BUGGY]  oldDelta  =  p  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  p  *  1;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  p  *  1;	  oldDelta    =    delta    *    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
65	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1.doubleValue()  +  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1.doubleValue()  +  1;	  double    p    =    oldDelta    *    p1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
66	[BUG]  [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
67	[BUG]  [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
68	[BUG]  [BUGGY]  p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
69	[BUG]  [BUGGY]  p  >  dx)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  dx)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  dx)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
70	[BUG]  [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  tolerance)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
71	[BUG]  [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  0)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
72	[BUG]  [BUGGY]  atically(delta  <  =  tolerance)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  atically(delta  <  =  tolerance)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	atically(delta  <  =  tolerance)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
73	[BUG]  [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  delta)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  delta)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
74	[BUG]  [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p1  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(0.5    *    tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
75	[BUG]  [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  dx  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(0.5    *    dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
76	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(0.5  *  dx  *  p1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(0.5  *  dx  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  +  Math.abs(0.5  *  dx  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(0.5    *    dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(0.5    *    dx    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  oldDelta  -=  p  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  -=  p  +  1;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  -=  p  +  1;	  oldDelta    =    p    +    1;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
79	[BUG]  [BUGGY]  oldDelta  -=  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  -=  delta;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  -=  delta;	  oldDelta    -=    p;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
80	[BUG]  [BUGGY]  oldDelta  -=  p1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  -=  p1;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  -=  p1;	  oldDelta    -=    p;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
81	[BUG]  [BUGGY]  oldDelta  -=  p  *  p1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  -=  p  *  p1;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  -=  p  *  p1;	  oldDelta    -=    p;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
82	[BUG]  [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(tolerance  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1)-  Math.abs(tolerance  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
83	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)/  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
84	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
85	[BUG]  [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(p  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(p  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  tolerance  *  p1  +  Math.abs(p  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
86	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  delta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  delta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
87	[BUG]  [BUGGY]  double  p  =  p  *  dx  +  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  dx  +  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  dx  +  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
88	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  delta  *  p1);	  double    p    =    delta    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
89	[BUG]  [BUGGY]  oldDelta  =  delta  +  tolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  delta  +  tolerance;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  delta  +  tolerance;	  oldDelta    =    delta    +    p1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
90	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)+  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)+  1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)+  1;	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
91	[BUG]  [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance;    delta    =    p    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
92	[BUG]  [BUGGY]  delta  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  delta  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	delta  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance;    delta    =    p    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
93	[BUG]  [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance;    delta    =    p    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
94	[BUG]  [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance;  delta  =  p  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance;    delta    =    p    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
95	[BUG]  [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  delta)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
96	[BUG]  [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
97	[BUG]  [BUGGY]  if(p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  if(p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	if(p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
98	[BUG]  [BUGGY]  double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    p    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
99	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    oldDelta    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
100	[BUG]  [BUGGY]  oldDelta  =  delta  *  p1  /  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  delta  *  p1  /  1;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  delta  *  p1  /  1;	  oldDelta    =    delta    *    p1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
101	[BUG]  [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  p1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  p1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
102	[BUG]  [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  p1;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  delta)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  p1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
103	[BUG]  [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  0.5  *  dx;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  0.5  *  dx;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  delta)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  0.5  *  dx;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
104	[BUG]  [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  tolerance  *  p1  +  Math.abs(oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
105	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(tolerance  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(tolerance  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
106	[BUG]  [BUGGY]  double  p  =  p  *  p1  +  Math.abs(delta  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  p1  +  Math.abs(delta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  p1  +  Math.abs(delta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
107	[BUG]  [BUGGY]  oldDelta  =  delta  /  2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  delta  /  2;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  delta  /  2;	  oldDelta    =    delta    /    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
108	[BUG]  [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(delta  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(delta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(delta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(delta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
109	[BUG]  [BUGGY]  double  p  =  p  *  dx  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  dx  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  dx  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    dx    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
110	[BUG]  [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
111	[BUG]  [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  delta)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    0.5    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
112	[BUG]  [BUGGY]  delta  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  delta  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	delta  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
113	[BUG]  [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  tolerance  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
114	[BUG]  [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
115	[BUG]  [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  p1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  p1;  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  oldDelta  *  p1  +  Math.abs(0.5  *  p1;	  double    p    =    p    *    p1    +    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
116	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
117	[BUG]  [BUGGY]  fixedTo(delta)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  fixedTo(delta)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	fixedTo(delta)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
118	[BUG]  [BUGGY]  aughtInvalidEquals(tolerance,  delta)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  aughtInvalidEquals(tolerance,  delta)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	aughtInvalidEquals(tolerance,  delta)  {  throw  new  IllegalStateException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
119	[BUG]  [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(delta  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(delta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(delta  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
120	[BUG]  [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p1  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    p1    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
121	[BUG]  [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  dx  +  Math.abs(tolerance  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
122	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
123	[BUG]  [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  +  Math.abs(tolerance  *  p2)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    delta    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
124	[BUG]  [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
125	[BUG]  [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  tolerance)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
126	[BUG]  [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucket  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  oldDelta  =  tolerance  /  p1;  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    oldDelta    =    tolerance    /    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
127	[BUG]  [BUGGY]  bucketMap.put(tolerance,  delta)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucketMap.put(tolerance,  delta)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucketMap.put(tolerance,  delta)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
128	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  aughtInvalidArgumentException( " ");  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	aughtInvalidArgumentException( " ");	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
129	[BUG]  [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
130	[BUG]  [BUGGY]  delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  oldDelta);  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
131	[BUG]  [BUGGY]  delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    oldDelta);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
132	[BUG]  [BUGGY]  double  p  =  p  *  oldDelta  +  Math.abs(0.5  *  p1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  oldDelta  +  Math.abs(0.5  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  oldDelta  +  Math.abs(0.5  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(0.5    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
133	[BUG]  [BUGGY]  double  p  =  delta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  delta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  delta  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    delta    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
134	[BUG]  [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  p1  +  Math.abs(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p2);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
135	[BUG]  [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	fixedTo(delta)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    p1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
136	[BUG]  [BUGGY]  delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	delta  <  =  p1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  delta  =  Math.abs(tolerance  *  p1);  }	  if(delta    <    =    tolerance)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    delta    =    Math.abs(tolerance    *    p1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
137	[BUG]  [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  dx  *  p1  +  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
138	[BUG]  [BUGGY]  oldDelta  =  p  /  p1  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  p  /  p1  +  1;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  p  /  p1  +  1;	  oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
139	[BUG]  [BUGGY]  oldDelta  =  p  /  p1  +  tolerance;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  oldDelta  =  p  /  p1  +  tolerance;  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	oldDelta  =  p  /  p1  +  tolerance;	  oldDelta    =    p    /    p1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
140	[BUG]  [BUGGY]  double  p  =  p1  *  p1.doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p1  *  p1.doubleValue();  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p1  *  p1.doubleValue();	  double    p    =    delta    *    p1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
141	[BUG]  [BUGGY]  if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
142	[BUG]  [BUGGY]  double  p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  +  1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
143	[BUG]  [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
144	[BUG]  [BUGGY]  if(p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  if(p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	if(p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  +  1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
145	[BUG]  [BUGGY]  if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
146	[BUG]  [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
147	[BUG]  [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
148	[BUG]  [BUGGY]  bucketMap.put(tolerance,  delta);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucketMap.put(tolerance,  delta);  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucketMap.put(tolerance,  delta);	  if(delta    <    =    tolerance)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
149	[BUG]  [BUGGY]  bucketMap.put(tolerance,  new  Double(delta));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  bucketMap.put(tolerance,  new  Double(delta));  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	bucketMap.put(tolerance,  new  Double(delta));	  if(delta    <    =    tolerance)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
150	[BUG]  [BUGGY]  double  p  =  p  *  oldDelta  +  Math.abs(0.5  *  tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  oldDelta  +  Math.abs(0.5  *  tolerance  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  oldDelta  +  Math.abs(0.5  *  tolerance  *  p1);	  double    p    =    oldDelta    *    p1    +    Math.abs(0.5    *    tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
151	[BUG]  [BUGGY]  double  p  =  p  *  p1  +  Math.sqrt(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  p1  +  Math.sqrt(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  p1  +  Math.sqrt(tolerance  *  p1)-  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    p    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
152	[BUG]  [BUGGY]  double  p  =  p  /  tolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  /  tolerance.doubleValue();  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  /  tolerance.doubleValue();	  double    p    =    p    *    tolerance.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
153	[BUG]  [BUGGY]  double  p  =  p  /  p1.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  /  p1.doubleValue();  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  /  p1.doubleValue();	  double    p    =    p    *    p1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
154	[BUG]  [BUGGY]  if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  p1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  p1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
155	[BUG]  [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  p1;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  i  *  p1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
156	[BUG]  [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  p1;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  p1;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  i  *  p1;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    i    *    p1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
157	[BUG]  [BUGGY]  double  p  =  p  *  dx  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  p  *  dx  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  p  *  dx  *  p1  -  Math.abs(tolerance  *  p1)+  Math.abs(0.5  *  oldDelta  *  p1);	  double    p    =    dx    *    p1    -    Math.abs(tolerance    *    p1)+    Math.abs(0.5    *    oldDelta    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
158	[BUG]  [BUGGY]  if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	if(p  >  dx)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    0.5    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
159	[BUG]  [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	p  >  tolerance)  {  for(int  i  =  0;  i  <  tolerance;  i++)  {  delta  =  0.5  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    0.5    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
160	[BUG]  [BUGGY]  if(p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  0.5  *  oldDelta;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  if(p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  0.5  *  oldDelta;  }  [BUGGY]      }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	if(p  >  tolerance)  {  for(int  i  =  0;  i  <  oldDelta;  i++)  {  delta  =  0.5  *  oldDelta;  }	  if(p    >    tolerance)    {    for(int    i    =    0;    i    <    tolerance;    i++)    {    delta    =    0.5    *    oldDelta;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
161	[BUG]  [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(dx  *  p1)-  Math.abs(tolerance  *  p1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (2.0  *  p  >=  1.5  *  dx  *  p1  -  Math.abs(tolerance  *  p1)  ||  p  >=  Math.abs(0.5  *  oldDelta  *  p1))  {    delta  =  0.5  *  dx;      [BUGGY]  double  p  =  tolerance  *  p1  +  Math.abs(dx  *  p1)-  Math.abs(tolerance  *  p1);  [BUGGY]      oldDelta  =  delta;  }  else  {  oldDelta  =  delta;  delta  =  p  /  p1;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	287	287	1	replace	double  p  =  tolerance  *  p1  +  Math.abs(dx  *  p1)-  Math.abs(tolerance  *  p1);	  double    p    =    dx    *    p1    +    Math.abs(tolerance    *    p1)-    Math.abs(tolerance    *    p1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
