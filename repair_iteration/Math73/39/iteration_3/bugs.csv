bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  y2  =  y1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  y1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  y1;	  y2    =    y0;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
2	[BUG]  [BUGGY]  y2  =  y0  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  y0  +  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  y0  +  1;	  y2    =    y0;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
3	[BUG]  [BUGGY]  y2  =  x1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  x1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  x1;	  y2    =    y0;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
4	[BUG]  [BUGGY]  if(y0  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y0  >=  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0  >=  0)  {	  if(y0!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
5	[BUG]  [BUGGY]  y2  =  f.value(x1)+  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x1)+  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1)+  2;	  y2    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
6	[BUG]  [BUGGY]  y2  =  f.value(x1)/  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x1)/  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1)/  1;	  y2    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
7	[BUG]  [BUGGY]  if(delta  >=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    x1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
8	[BUG]  [BUGGY]  ble  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  ble  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	ble  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;	  if(delta!=    0)    {    x1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
9	[BUG]  [BUGGY]  if(delta!=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(delta!=    0)    {    x1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
10	[BUG]  [BUGGY]  if(delta  >=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    x0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
11	[BUG]  [BUGGY]  if(delta  ==  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    x0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
12	[BUG]  [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    x0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
13	[BUG]  [BUGGY]  if(delta  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(delta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
14	[BUG]  [BUGGY]  if(delta  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(delta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
15	[BUG]  [BUGGY]  if(delta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }	  if(oldDelta    ==    null)    {    if(y0    >    0)    {    oldDelta    =    x1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
16	[BUG]  [BUGGY]  oldDelta  =  x1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  oldDelta  =  x1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	oldDelta  =  x1;	  if(oldDelta    ==    null)    {    if(y0    >    0)    {    oldDelta    =    x1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
17	[BUG]  [BUGGY]  if(y0  >  0)  {  oldDelta  =  x1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y0  >  0)  {  oldDelta  =  x1;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0  >  0)  {  oldDelta  =  x1;  }	  if(oldDelta    ==    null)    {    if(y0    >    0)    {    oldDelta    =    x1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
18	[BUG]  [BUGGY]  if(dx  >  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(DATE    >    0.0)    {    if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
19	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(DATE    >    0.0)    {    if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
20	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x2  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x2  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  x2  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }	  if(DATE    >    0.0)    {    if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
21	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x2  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x2  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  x2  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(DATE    >    0.0)    {    if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
22	[BUG]  [BUGGY]  y2  =  f.value(x2)+  delta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x2)+  delta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2)+  delta;	  y2    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
23	[BUG]  [BUGGY]  y2  =  f.value(x1)+  delta  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x1)+  delta  +  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1)+  delta  +  1;	  y2    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
24	[BUG]  [BUGGY]  y2  =  f.value(x1)/  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x1)/  delta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1)/  delta;	  y2    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
25	[BUG]  [BUGGY]  Integer  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  Integer  i  =  oldDelta.length();  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	Integer  i  =  oldDelta.length();	  int    i    =    oldDelta.length()    -    2;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
26	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y1;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  if(delta!=  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }	  if(delta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
29	[BUG]  [BUGGY]  if(delta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x0;  }	  if(delta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
30	[BUG]  [BUGGY]  if(delta!=  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }	  if(delta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
31	[BUG]  [BUGGY]  if(dx  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
32	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
33	[BUG]  [BUGGY]  if(dx  >  0)  {  if(y1  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  if(y1  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  if(y1  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
34	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  tolerance)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  tolerance)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  tolerance)  {	  if((    y1    >    0)    ==    (y2    >    0)&&(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y2  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y2  <  =  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  >  0)&&(y2  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)&&(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  delta)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  delta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  delta)  {	  if((    y1    >    0)    ==    (y2    >    0)&&(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  oldDelta  =  delta;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  oldDelta  =  delta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	oldDelta  =  delta;	  oldDelta    =    x0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
38	[BUG]  [BUGGY]  oldDelta  =  dx;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  oldDelta  =  dx;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	oldDelta  =  dx;	  oldDelta    =    x0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
39	[BUG]  [BUGGY]  float  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  float  i  =  oldDelta.length();  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	float  i  =  oldDelta.length();	  int    i    =    oldDelta.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
40	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y2  =  y1;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y2  =  y1;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x0;  y2  =  y1;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
41	[BUG]  [BUGGY]  if(delta  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
42	[BUG]  [BUGGY]  if(delta  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  <  =  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  =  0)  {	  if(delta    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
43	[BUG]  [BUGGY]  if(delta  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {	  if(delta    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
44	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y1  <  =  0))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y1  <  =  0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y1  <  =  0))  {	  if((    y0    >    0)    ==    (y1    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
45	[BUG]  [BUGGY]  if((  y0  >  0)  <  (y1  >  0))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  <  (y1  >  0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  <  (y1  >  0))  {	  if((    y0    >    0)    <    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
46	[BUG]  [BUGGY]  if((  y0  >  0)  <  =(y2  >  0))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  <  =(y2  >  0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  <  =(y2  >  0))  {	  if((    y0    >    0)    <    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
47	[BUG]  [BUGGY]  if((  y0  >  0)  <  (y2  >  0)||(y1  <  =  0.0))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  <  (y2  >  0)||(y1  <  =  0.0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  <  (y2  >  0)||(y1  <  =  0.0))  {	  if((    y0    >    0)    <    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
48	[BUG]  [BUGGY]  if(dx  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
49	[BUG]  [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(dx    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
50	[BUG]  [BUGGY]  if(dx  >=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
51	[BUG]  [BUGGY]  if(i  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
52	[BUG]  [BUGGY]  if(i  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
53	[BUG]  [BUGGY]  if(i  >=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
54	[BUG]  [BUGGY]  if(oldDelta  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta  <  =  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  <  =  0)  {	  if(oldDelta    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
55	[BUG]  [BUGGY]  if(i  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {	  if(oldDelta    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
56	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    <    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  if(dx  >  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0.0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
58	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  <  =  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  <  =  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0.0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
59	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0.0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0.0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0.0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
60	[BUG]  [BUGGY]  double  y2  =  f.value(x2)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  y2  =  f.value(x2)+  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x2)+  1;	  double    y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  y2  =  f.value(y2)+  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(y2)+  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(y2)+  2;	  y2    =    f.value(y2)+    1;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
62	[BUG]  [BUGGY]  y2  =  f.value(y2)+  3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(y2)+  3;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(y2)+  3;	  y2    =    f.value(y2)+    1;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
63	[BUG]  [BUGGY]  if(delta!=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {	  if(oldDelta!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
64	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  i  =  oldDelta.length()  -  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  i  =  oldDelta.length()  -  1;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
65	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  i  =  oldDelta.length()  +  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  i  =  oldDelta.length()  +  1;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
66	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  /  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  i  =  oldDelta.length()  /  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  i  =  oldDelta.length()  /  2;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
67	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  *  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  i  =  oldDelta.length()  *  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  i  =  oldDelta.length()  *  2;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
68	[BUG]  [BUGGY]  if(delta  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
69	[BUG]  [BUGGY]  if(delta  <  =  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  <  =  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  =  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
70	[BUG]  [BUGGY]  if(delta  >  0)  {  if(delta  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >  0)  {  if(delta  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >  0)  {  if(delta  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
71	[BUG]  [BUGGY]  if(delta!=  null)  {  if(y2  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  null)  {  if(y2  >  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  null)  {  if(y2  >  0)  {  y2  =  y0;  }	  if(oldDelta!=    null)    {    if(y2    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
72	[BUG]  [BUGGY]  if(y0  <  =  0.0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y0  <  =  0.0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0  <  =  0.0)  {  y2  =  y0;  }	  if(y0    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
73	[BUG]  [BUGGY]  if(y0  <  =  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y0  <  =  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0  <  =  0)  {  y2  =  y0;  }	  if(y0    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
74	[BUG]  [BUGGY]  double  y2  =  f.value(y2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  y2  =  f.value(y2);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(y2);	  double    y2    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
75	[BUG]  [BUGGY]  double  y2  =  f.value(y1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  y2  =  f.value(y1);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(y1);	  double    y2    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
76	[BUG]  [BUGGY]  if(y1  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(y1!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
77	[BUG]  [BUGGY]  if(y1  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(y1!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
78	[BUG]  [BUGGY]  if(dx  >  0)  {  if(y1!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  if(y1!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  if(y1!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(y1!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
79	[BUG]  [BUGGY]  if(delta  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
80	[BUG]  [BUGGY]  if(delta  <  =  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  <  =  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  =  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
81	[BUG]  [BUGGY]  if(delta  <  =  0)  {  if(delta  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  <  =  0)  {  if(delta  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  =  0)  {  if(delta  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
82	[BUG]  [BUGGY]  if((  y0  >  0)  >>  (y1  >  0))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  >>  (y1  >  0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  >>  (y1  >  0))  {	  if((    y0    >    0)    >=    (y1    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
83	[BUG]  [BUGGY]  if(delta!=  0)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x1  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
84	[BUG]  [BUGGY]  if(delta  ==  null)  {  if(y0  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  null)  {  if(y0  >  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  null)  {  if(y0  >  0)  {  y2  =  y0;  }	  if(oldDelta    ==    null)    {    if(y0    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
85	[BUG]  [BUGGY]  if(delta  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(delta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
86	[BUG]  [BUGGY]  if(delta  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(delta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
87	[BUG]  [BUGGY]  double  y2  =  f.value(x1)/  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  y2  =  f.value(x1)/  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x1)/  1;	  double    y2    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
88	[BUG]  [BUGGY]  double  y2  =  f.value(x2)-  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  y2  =  f.value(x2)-  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x2)-  1;	  double    y2    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
89	[BUG]  [BUGGY]  double  y2  =  f.value(x2)/  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  y2  =  f.value(x2)/  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x2)/  1;	  double    y2    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
90	[BUG]  [BUGGY]  if(delta  <  0  ||  delta  >  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  <  0  ||  delta  >  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  0  ||  delta  >  oldDelta)  {	  if(delta    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
91	[BUG]  [BUGGY]  if(y1  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(y1!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
92	[BUG]  [BUGGY]  if(y1!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(y1!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
93	[BUG]  [BUGGY]  if(y1!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  System.arraycopy(x1,  0,  oldDelta,  0,  oldDelta);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  System.arraycopy(x1,  0,  oldDelta,  0,  oldDelta);  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  System.arraycopy(x1,  0,  oldDelta,  0,  oldDelta);  }	  if(y1!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
94	[BUG]  [BUGGY]  y2  =  f.value(x2)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x2)/  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2)/  2;	  y2    =    f.value(x2)+    2;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
95	[BUG]  [BUGGY]  y2  =  f.value(x2)+  3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x2)+  3;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2)+  3;	  y2    =    f.value(x2)+    2;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
96	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    oldDelta)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
97	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    oldDelta)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
98	[BUG]  [BUGGY]  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    oldDelta)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
99	[BUG]  [BUGGY]  if(y0  <  =  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y0  <  =  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0  <  =  0)  {	  if(y0    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
100	[BUG]  [BUGGY]  if(delta  ==  null)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  null)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  null)  {  if(y1  >  0)  {  y2  =  y0;  }	  if(delta!=    null)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
101	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)||(y1  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)||(y1  <  =  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  >  0)||(y1  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
102	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  if(dx  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  <  =  0.0)  {  if(dx  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  <  =  0.0)  {  if(dx  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
103	[BUG]  [BUGGY]  if(dx  >  0)  {  if(dx  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  if(dx  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  if(dx  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
104	[BUG]  [BUGGY]  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
105	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
106	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(y1  >  0)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta!=  null)  {  if(y1  >  0)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(y1  >  0)  {  y1  =  y0;  }	  if(oldDelta!=    null)    {    if(y2    >    0)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
107	[BUG]  [BUGGY]  if(delta!=  null)  {  if(y2  >  0)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  null)  {  if(y2  >  0)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  null)  {  if(y2  >  0)  {  y1  =  y0;  }	  if(oldDelta!=    null)    {    if(y2    >    0)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
108	[BUG]  [BUGGY]  y1  =  y0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y1  =  y0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y1  =  y0;	  if(oldDelta!=    null)    {    if(y2    >    0)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
109	[BUG]  [BUGGY]  if(dx  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  y2  =  y0;  }	  if(oldDelta!=    null)    {    if(dx    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
110	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(dx  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta  ==  null)  {  if(dx  >  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  ==  null)  {  if(dx  >  0)  {  y2  =  y0;  }	  if(oldDelta!=    null)    {    if(dx    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
111	[BUG]  [BUGGY]  if(dx  >=  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y2  =  y0;  }	  if(oldDelta!=    null)    {    if(dx    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
112	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
113	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
114	[BUG]  [BUGGY]  if(Math.abs(delta)  <  =  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  =  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  =  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
115	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  x0  =  x0;  y1  =  y0;  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  x0  =  x0;  y1  =  y0;  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  x0  =  x0;  y1  =  y0;  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
116	[BUG]  [BUGGY]  if(delta  <  =  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  <  =  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  =  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta    >=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
117	[BUG]  [BUGGY]  y2  =  f.value(x3)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x3)+  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x3)+  1;	  y2    =    f.value(x3);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
118	[BUG]  [BUGGY]  if(delta  ==  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }	  if(oldDelta!=    null)    {    if(y1    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
119	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(y2  >  0)  {  oldDelta  =  x0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta!=  null)  {  if(y2  >  0)  {  oldDelta  =  x0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(y2  >  0)  {  oldDelta  =  x0;  }	  if(oldDelta!=    null)    {    if(y1    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
120	[BUG]  [BUGGY]  if(dx  >  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
121	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
122	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)||(y2  <  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)||(y2  <  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  >  0)||(y2  <  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y1    >    0)||(y1    <    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
123	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y2  <  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y2  <  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  >  0)&&(y2  <  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y1    >    0)||(y1    <    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
124	[BUG]  [BUGGY]  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    oldDelta)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
125	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    oldDelta)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
126	[BUG]  [BUGGY]  y2  =  f.value(x2)/  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x2)/  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2)/  1;	  y2    =    f.value(x2)-    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
127	[BUG]  [BUGGY]  y2  =  f.value(x2)-  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x2)-  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2)-  2;	  y2    =    f.value(x2)-    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
128	[BUG]  [BUGGY]  y2  =  f.value(x1)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x1)-  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1)-  1;	  y2    =    f.value(x2)-    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
129	[BUG]  [BUGGY]  if(i  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
130	[BUG]  [BUGGY]  if(i  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
131	[BUG]  [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y2  =  y1;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y2  =  y1;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y0  =  x0;  y2  =  y1;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
132	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
133	[BUG]  [BUGGY]  double  y2  =  f.value(x1)+  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  y2  =  f.value(x1)+  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x1)+  2;	  double    y2    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
134	[BUG]  [BUGGY]  if(dx  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  ==  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  ==  0)  {	  if(i    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
135	[BUG]  [BUGGY]  if(i!=  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i!=  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i!=  0)  {	  if(i    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
136	[BUG]  [BUGGY]  if(dx  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  <  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  <  0)  {	  if(oldDelta    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
137	[BUG]  [BUGGY]  if(y0  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y0  >  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0  >  0)  {	  if(y1    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
138	[BUG]  [BUGGY]  if(delta  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
139	[BUG]  [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
140	[BUG]  [BUGGY]  y2  =  f.value(x2,  y0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x2,  y0);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2,  y0);	  y2    =    f.value(x2,    y2);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
141	[BUG]  [BUGGY]  y2  =  f.value(x2,  y1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x2,  y1);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2,  y1);	  y2    =    f.value(x2,    y2);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
142	[BUG]  [BUGGY]  y2  =  f.value(y2,  x2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(y2,  x2);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(y2,  x2);	  y2    =    f.value(x2,    y2);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
143	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  0)>  tolerance)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  0)>  tolerance)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  0)>  tolerance)  {	  if((    y1    >    0)    ==    (y2    >    0)&&(y1    <    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
144	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  0)>  x1)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  0)>  x1)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  0)>  x1)  {	  if((    y1    >    0)    ==    (y2    >    0)&&(y1    <    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
145	[BUG]  [BUGGY]  if(x1!=  x0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(x1!=  x0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(x1!=  x0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(x0!=    x1)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
146	[BUG]  [BUGGY]  if(x1!=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(x1!=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(x1!=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(x0!=    x1)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
147	[BUG]  [BUGGY]  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1  >  0)  {  y2  =  y0;  }	  if(oldDelta    ==    null)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
148	[BUG]  [BUGGY]  if(delta  ==  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }	  if(y2    ==    0)    {    if(oldDelta!=    null)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
149	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta!=  null)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  y1  =  y0;  }	  if(y2    ==    0)    {    if(oldDelta!=    null)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
150	[BUG]  [BUGGY]  if(delta!=  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }	  if(y2    ==    0)    {    if(oldDelta!=    null)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
151	[BUG]  [BUGGY]  y2  =  f.value(x1,  y2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x1,  y2);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1,  y2);	  y2    =    f.value(x1,    y1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
152	[BUG]  [BUGGY]  y2  =  f.value(x1,  y0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x1,  y0);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1,  y0);	  y2    =    f.value(x1,    y1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
153	[BUG]  [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y1  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y1  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y0  =  x0;  y1  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(i    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
154	[BUG]  [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(i    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
155	[BUG]  [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(i    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
156	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)||(y1  >  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)||(y1  >  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y1  >  0)||(y1  >  0)>  oldDelta)  {	  if((    y0    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
157	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)||(y2  >  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)||(y2  >  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y1  >  0)||(y2  >  0)>  oldDelta)  {	  if((    y0    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
158	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)&&(y1  >  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)&&(y1  >  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y1  >  0)&&(y1  >  0)>  oldDelta)  {	  if((    y0    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
159	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)||(y0  >  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)||(y0  >  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y1  >  0)||(y0  >  0)>  oldDelta)  {	  if((    y0    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
160	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    y0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
161	[BUG]  [BUGGY]  if(Math.abs(delta)  <  =  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  =  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  =  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    y0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
162	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    y0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
163	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    y0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
164	[BUG]  [BUGGY]  if(delta!=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0.0)    {    if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
165	[BUG]  [BUGGY]  if(delta  >=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0.0)    {    if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
166	[BUG]  [BUGGY]  if(dx  <  =  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  <  =  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  <  =  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0.0)    {    if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
167	[BUG]  [BUGGY]  y2  =  f.value(x3)-  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x3)-  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x3)-  1;	  y2    =    f.value(x3);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
168	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(delta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
169	[BUG]  [BUGGY]  if(delta!=  0.0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0.0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0.0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
170	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y2;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y2;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x0;  y1  =  y2;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
171	[BUG]  [BUGGY]  if(delta!=  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(delta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
172	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    oldDelta)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
173	[BUG]  [BUGGY]  if(dx  >  0.0)  {  y0  =  y0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0.0)  {  y0  =  y0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0.0)  {  y0  =  y0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0.0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
174	[BUG]  [BUGGY]  if(delta  >  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta    >=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
175	[BUG]  [BUGGY]  if(delta  >=  0)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta    >=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
176	[BUG]  [BUGGY]  if(delta  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
177	[BUG]  [BUGGY]  if(delta!=  0.0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0.0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0.0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
178	[BUG]  [BUGGY]  if(delta  <  0  ||  oldDelta  >  0.0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  <  0  ||  oldDelta  >  0.0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  0  ||  oldDelta  >  0.0)  {	  if(delta    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
179	[BUG]  [BUGGY]  if((  y1  >  0)  >=  (y1  >  0)&&(y2  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  >=  (y1  >  0)&&(y2  <  =  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  >=  (y1  >  0)&&(y2  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y1    >    0)&&(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
180	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y1    >    0)&&(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
181	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(y2  >  0)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta  ==  null)  {  if(y2  >  0)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  ==  null)  {  if(y2  >  0)  {  y1  =  y0;  }	  if(oldDelta!=    null)    {    if(y2    >    0)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
182	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(dx  >  0)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta!=  null)  {  if(dx  >  0)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(dx  >  0)  {  y1  =  y0;  }	  if(oldDelta!=    null)    {    if(y2    >    0)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
183	[BUG]  [BUGGY]  if(delta!=  0)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
184	[BUG]  [BUGGY]  if(delta  ==  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
185	[BUG]  [BUGGY]  double  y2  =  f.value(x2)+  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  y2  =  f.value(x2)+  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x2)+  2;	  double    y2    =    f.value(x1)+    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
186	[BUG]  [BUGGY]  if(x0!=  x1)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(x0!=  x1)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(x0!=  x1)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(x0!=    x1)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
187	[BUG]  [BUGGY]  if(delta!=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(x0!=    x1)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
188	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(y2  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta  ==  null)  {  if(y2  >  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  ==  null)  {  if(y2  >  0)  {  y2  =  y0;  }	  if(oldDelta!=    null)    {    if(y2    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
189	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y0  >  0))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y0  >  0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y0  >  0))  {	  if((    y0    >    0)    ==    (y1    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
190	[BUG]  [BUGGY]  if((  y1  >  0)  >=  (y2  >  0)&&(y1  <  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  >=  (y2  >  0)&&(y1  <  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  >=  (y2  >  0)&&(y1  <  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    <    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
191	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y2  >  0)||(y1  <  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y2  >  0)||(y1  <  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y2  >  0)||(y1  <  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    <    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
192	[BUG]  [BUGGY]  ((  y1  >  0)  ==  (y2  >  0))  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  ((  y1  >  0)  ==  (y2  >  0))  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	((  y1  >  0)  ==  (y2  >  0))  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
193	[BUG]  [BUGGY]  if(i  >=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
194	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(y1  >  0)  {  oldDelta  =  x1;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta!=  null)  {  if(y1  >  0)  {  oldDelta  =  x1;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(y1  >  0)  {  oldDelta  =  x1;  }	  if(oldDelta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x1;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
195	[BUG]  [BUGGY]  if(Math.abs(oldDelta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(oldDelta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(oldDelta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
196	[BUG]  [BUGGY]  y2  =  y0  +  delta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  y0  +  delta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  y0  +  delta;	  y2    =    y0;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
197	[BUG]  [BUGGY]  Int  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  Int  i  =  oldDelta.length();  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	Int  i  =  oldDelta.length();	  int    i    =    oldDelta.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
198	[BUG]  [BUGGY]  if((  y1  >  0)  >=  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  >=  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  >=  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
199	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y2  >  0)&&(y1  <  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y2  >  0)&&(y1  <  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y2  >  0)&&(y1  <  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)&&(y1    <    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
200	[BUG]  [BUGGY]  if(dx  >  0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
201	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0.0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0.0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
202	[BUG]  [BUGGY]  if(dx  >=  0)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
203	[BUG]  [BUGGY]  if(delta  >=  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }	  if(y2    ==    0)    {    if(oldDelta!=    null)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
204	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta  ==  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  ==  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }	  if(oldDelta!=    null)    {    if(y1    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
205	[BUG]  [BUGGY]  double  y2  =  f.value(x2)-  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  y2  =  f.value(x2)-  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x2)-  2;	  double    y2    =    f.value(x1)-    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
206	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)&&(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
207	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  =  0)>  tolerance)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  =  0)>  tolerance)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  =  0)>  tolerance)  {	  if((    y1    >    0)    ==    (y2    >    0)&&(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
208	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  oldDelta))  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  oldDelta))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  oldDelta))  {	  if((    y1    >    0)    ==    (y2    >    0)&&(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
209	[BUG]  [BUGGY]  if(dx  >=  0)  {  y1  =  0.0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0)  {  y1  =  0.0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y1  =  0.0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
210	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
211	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y2;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y2;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y2;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
212	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y1;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y1;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  y1;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
213	[BUG]  [BUGGY]  if(i  >=  0)  {  y0  =  x1;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  y0  =  x1;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y0  =  x1;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(i    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
214	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0.0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0.0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(i    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
215	[BUG]  [BUGGY]  if(delta  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
216	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
217	[BUG]  [BUGGY]  if(y1  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1  ==  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(y1!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
218	[BUG]  [BUGGY]  if(y1!=  0)  {  y0  =  x2;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1!=  0)  {  y0  =  x2;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1!=  0)  {  y0  =  x2;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(y1!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
219	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(oldDelta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(oldDelta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
220	[BUG]  [BUGGY]  if(delta!=  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(DATE    >    0.0)    {    if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
221	[BUG]  [BUGGY]  if(delta  >=  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(DATE    >    0.0)    {    if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
222	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)&&(y2  >  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)&&(y2  >  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y1  >  0)&&(y2  >  0)>  oldDelta)  {	  if((    y0    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
223	[BUG]  [BUGGY]  if((  y0  >  0)  >=  (y1  >  0)||(y2  >  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  >=  (y1  >  0)||(y2  >  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  >=  (y1  >  0)||(y2  >  0)>  oldDelta)  {	  if((    y0    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
224	[BUG]  [BUGGY]  if((  y0  >  0)  >=  (y1  >  0)&&(y2  >  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  >=  (y1  >  0)&&(y2  >  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  >=  (y1  >  0)&&(y2  >  0)>  oldDelta)  {	  if((    y0    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
225	[BUG]  [BUGGY]  if(dx  >  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0.0)    {    if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
226	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  if(oldDelta  ==  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0.0)  {  if(oldDelta  ==  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0.0)  {  if(oldDelta  ==  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0.0)    {    if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
227	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  if(y2!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0.0)  {  if(y2!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0.0)  {  if(y2!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0.0)    {    if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
228	[BUG]  [BUGGY]  if(delta!=  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
229	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(oldDelta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(oldDelta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    y0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
230	[BUG]  [BUGGY]  if(Math.abs(delta)  <  =  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  =  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  =  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    y0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
231	[BUG]  [BUGGY]  y2  =  f.value(y2)/  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(y2)/  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(y2)/  1;	  y2    =    f.value(y2)+    1;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
232	[BUG]  [BUGGY]  (y0  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  (y0  >  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	(y0  >  0)  {  y2  =  y0;  }	  if(y0    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
233	[BUG]  [BUGGY]  if(y0  >  0)  {  y2  =  y1;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y0  >  0)  {  y2  =  y1;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0  >  0)  {  y2  =  y1;  }	  if(y0    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
234	[BUG]  [BUGGY]  if(y0  >  0)  {  y2  =  x0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y0  >  0)  {  y2  =  x0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0  >  0)  {  y2  =  x0;  }	  if(y0    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
235	[BUG]  [BUGGY]  ((  y1  >  0)  ==  (y2  >  0))  {  x1  =  x0;  y1  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  ((  y1  >  0)  ==  (y2  >  0))  {  x1  =  x0;  y1  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	((  y1  >  0)  ==  (y2  >  0))  {  x1  =  x0;  y1  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
236	[BUG]  [BUGGY]  ((  y1  >  0)  ==  (y2)  >  0))  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  ((  y1  >  0)  ==  (y2)  >  0))  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	((  y1  >  0)  ==  (y2)  >  0))  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
237	[BUG]  [BUGGY]  double  y2  =  f.value(x3);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  y2  =  f.value(x3);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x3);	  double    y2    =    f.value(x0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
238	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  <  <  0)||(y1  <  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  ==  (y1  <  <  0)||(y1  <  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  <  <  0)||(y1  <  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y1    >    0)||(y1    <    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
239	[BUG]  [BUGGY]  if(delta!=  null)  {  if(dx  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  null)  {  if(dx  >  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  null)  {  if(dx  >  0)  {  y2  =  y0;  }	  if(oldDelta!=    null)    {    if(dx    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
240	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(dx  >  0)  {  y2  =  oldDelta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta!=  null)  {  if(dx  >  0)  {  y2  =  oldDelta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(dx  >  0)  {  y2  =  oldDelta;  }	  if(oldDelta!=    null)    {    if(dx    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
241	[BUG]  [BUGGY]  if(delta  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
242	[BUG]  [BUGGY]  if(delta  ==  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
243	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x0;  y1  =  y2;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
244	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  <  =  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  =  0.0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta    >=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
245	[BUG]  [BUGGY]  if(dx  >  0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
246	[BUG]  [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
247	[BUG]  [BUGGY]  if(delta  <  =  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  <  =  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  =  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
248	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    oldDelta)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
249	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    oldDelta)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
250	[BUG]  [BUGGY]  if(delta!=  0)  {  x0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  x0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    x0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
251	[BUG]  [BUGGY]  luate(x0,  y2);  delta  =  x1  -  x0;  oldDelta  =  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  luate(x0,  y2);  delta  =  x1  -  x0;  oldDelta  =  0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	luate(x0,  y2);  delta  =  x1  -  x0;  oldDelta  =  0;	  if(delta!=    0)    {    x0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
252	[BUG]  [BUGGY]  if(delta  ==  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  ==  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    x1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
253	[BUG]  [BUGGY]  if(delta!=  0)  {  delta  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  delta  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  delta  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    x1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
254	[BUG]  [BUGGY]  if((  y1  >  0)!=  (y0  >  0))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)!=  (y0  >  0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)!=  (y0  >  0))  {	  if((    y0    >    0)!=    (y1    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
255	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(y1  >  0)  {  oldDelta  =  x1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta  ==  null)  {  if(y1  >  0)  {  oldDelta  =  x1;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  ==  null)  {  if(y1  >  0)  {  oldDelta  =  x1;  }	  if(oldDelta    ==    null)    {    if(y0    >    0)    {    oldDelta    =    x1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
256	[BUG]  [BUGGY]  if(i  >  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >  0)  {	  if(i    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
257	[BUG]  [BUGGY]  if((  y1  >  0)  >=  (y0  >  0))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  >  0)  >=  (y0  >  0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  >=  (y0  >  0))  {	  if((    y0    >    0)    >=    (y1    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
258	[BUG]  [BUGGY]  if((  y0  >  0)  >=  (y1  >  0)&&(y1  <  =  0))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  >=  (y1  >  0)&&(y1  <  =  0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  >=  (y1  >  0)&&(y1  <  =  0))  {	  if((    y0    >    0)    >=    (y1    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
259	[BUG]  [BUGGY]  if(x1!=  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(x1!=  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(x1!=  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }	  if(oldDelta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x1;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
260	[BUG]  [BUGGY]  if((  y1  <  =  0)  ==  (y1  >  0)&&(y1  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  <  =  0)  ==  (y1  >  0)&&(y1  <  =  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  <  =  0)  ==  (y1  >  0)&&(y1  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y1    >    0)&&(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
261	[BUG]  [BUGGY]  if((  y0  >  0)  <  (y2  >  0)||(y1  <  0))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  <  (y2  >  0)||(y1  <  0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  <  (y2  >  0)||(y1  <  0))  {	  if((    y0    >    0)    <    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
262	[BUG]  [BUGGY]  oldDelta  =  y0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  oldDelta  =  y0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	oldDelta  =  y0;	  oldDelta    =    x0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
263	[BUG]  [BUGGY]  if(i  >  0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >  0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >  0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(DATE    >    0.0)    {    if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
264	[BUG]  [BUGGY]  if(i  >=  0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(DATE    >    0.0)    {    if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
265	[BUG]  [BUGGY]  if(DATE  >=  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(DATE  >=  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(DATE  >=  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(DATE    >    0.0)    {    if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
266	[BUG]  [BUGGY]  if(dx  >  0)  {  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    oldDelta)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
267	[BUG]  [BUGGY]  y2  =  y0  +  f.value(x2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  y0  +  f.value(x2);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  y0  +  f.value(x2);	  y2    =    y0;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
268	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(i  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta  ==  null)  {  if(i  >  0)  {  y2  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  ==  null)  {  if(i  >  0)  {  y2  =  y0;  }	  if(oldDelta    ==    null)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
269	[BUG]  [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
270	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  =  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    >    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
271	[BUG]  [BUGGY]  if(dx  >=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
272	[BUG]  [BUGGY]  if(y1!=  null)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1!=  null)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1!=  null)  {  y1  =  y0;  }	  if(y2    ==    0)    {    if(oldDelta!=    null)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
273	[BUG]  [BUGGY]  if(i  >  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }	  if(y2    ==    0)    {    if(oldDelta!=    null)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
274	[BUG]  [BUGGY]  if(y0!=  null)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y0!=  null)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0!=  null)  {  if(oldDelta!=  null)  {  y1  =  y0;  }	  if(y2    ==    0)    {    if(oldDelta!=    null)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
275	[BUG]  [BUGGY]  if(i  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(delta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
276	[BUG]  [BUGGY]  if(y1  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1  >  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(y1!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
277	[BUG]  [BUGGY]  if((  y1  <  =  0)  ==  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y1  <  =  0)  ==  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  <  =  0)  ==  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)&&(y1    <    =    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
278	[BUG]  [BUGGY]  if(delta  >  0  ||  oldDelta  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  >  0  ||  oldDelta  <  =  0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >  0  ||  oldDelta  <  =  0)  {	  if(delta    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
279	[BUG]  [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
280	[BUG]  [BUGGY]  if(dx  >=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(delta!=    0)    {    x1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
281	[BUG]  [BUGGY]  if((  y0  >  0)!=  (y2  >  0)||(y1  <  =  0.0))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)!=  (y2  >  0)||(y1  <  =  0.0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)!=  (y2  >  0)||(y1  <  =  0.0))  {	  if((    y0    >    0)!=    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
282	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0.0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0.0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0.0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
283	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  x0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0.0)  {  x0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0.0)  {  x0  =  x1;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(dx    >=    0.0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
284	[BUG]  [BUGGY]  if(i  >=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(i    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
285	[BUG]  [BUGGY]  if(i  >=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(i    >=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
286	[BUG]  [BUGGY]  y2  =  f.value(x2)+  oldDelta;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x2)+  oldDelta;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2)+  oldDelta;	  y2    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
287	[BUG]  [BUGGY]  y2  =  f.value(x1)+  y0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x1)+  y0;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1)+  y0;	  y2    =    f.value(x1)+    delta;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
288	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(oldDelta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(oldDelta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    y0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
289	[BUG]  [BUGGY]  if((  y0  >  0)  <  (y1  >  0)||(y2  >  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  <  (y1  >  0)||(y2  >  0)>  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  <  (y1  >  0)||(y2  >  0)>  oldDelta)  {	  if((    y0    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
290	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  oldDelta)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    oldDelta)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
291	[BUG]  [BUGGY]  if(y1  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1  >  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(y1!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
292	[BUG]  [BUGGY]  if(i  >=  0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0.0)    {    if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
293	[BUG]  [BUGGY]  if(i  >  0)  {  if(dx  >=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >  0)  {  if(dx  >=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >  0)  {  if(dx  >=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0.0)    {    if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
294	[BUG]  [BUGGY]  if(delta!=  null)  {  if(y0  <  =  0)  {  oldDelta  =  x0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  null)  {  if(y0  <  =  0)  {  oldDelta  =  x0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  null)  {  if(y0  <  =  0)  {  oldDelta  =  x0;  }	  if(delta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
295	[BUG]  [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(delta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
296	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  int  i  =  oldDelta.length()  *  1;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	int  i  =  oldDelta.length()  *  1;	  int    i    =    oldDelta.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
297	[BUG]  [BUGGY]  double  i  =  oldDelta.length()  -  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  double  i  =  oldDelta.length()  -  2;  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  i  =  oldDelta.length()  -  2;	  double    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
298	[BUG]  [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(delta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
299	[BUG]  [BUGGY]  if(dx  >  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
300	[BUG]  [BUGGY]  if((  y0  >  0)!=  (y1  >  0)||(y2  >  0))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)!=  (y1  >  0)||(y2  >  0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)!=  (y1  >  0)||(y2  >  0))  {	  if((    y0    >    0)!=    (y1    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
301	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)||(y0  <  =  0.0))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  ==  (y1  >  0)||(y0  <  =  0.0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y1  >  0)||(y0  <  =  0.0))  {	  if((    y0    >    0)    ==    (y1    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
302	[BUG]  [BUGGY]  if((  y0  >  0)  >=  (y2  >  0)||(y1  <  =  0.0))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if((  y0  >  0)  >=  (y2  >  0)||(y1  <  =  0.0))  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  >=  (y2  >  0)||(y1  <  =  0.0))  {	  if((    y0    >    0)    >=    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
303	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(i  >  0)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(oldDelta!=  null)  {  if(i  >  0)  {  y1  =  y0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(i  >  0)  {  y1  =  y0;  }	  if(oldDelta!=    null)    {    if(y2    >    0)    {    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
304	[BUG]  [BUGGY]  if(Math.abs(delta)  <  =  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)  <  =  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  =  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)    <    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
305	[BUG]  [BUGGY]  y2  =  f.value(x4);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  y2  =  f.value(x4);  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x4);	  y2    =    f.value(x3);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
306	[BUG]  [BUGGY]  if(Math.abs(oldDelta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(oldDelta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(oldDelta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
307	[BUG]  [BUGGY]  if(dx  >  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
308	[BUG]  [BUGGY]  if(dx  >=  0)  {  y0  =  x1;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  0)  {  y0  =  x1;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y0  =  x1;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	  if(dx    >=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
309	[BUG]  [BUGGY]  if(y1  >  0  ||  oldDelta  <  =  0.0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1  >  0  ||  oldDelta  <  =  0.0)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1  >  0  ||  oldDelta  <  =  0.0)  {	  if(y1    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
310	[BUG]  [BUGGY]  if(y1  >  0  ||  dx  >  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(y1  >  0  ||  dx  >  oldDelta)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1  >  0  ||  dx  >  oldDelta)  {	  if(y1    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
311	[BUG]  [BUGGY]  if(x0  ==  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(x0  ==  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(x0  ==  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(x0!=    x1)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
312	[BUG]  [BUGGY]  if(x0!=  x1)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(x0!=  x1)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(x0!=  x1)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(x0!=    x1)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
313	[BUG]  [BUGGY]  if(dx  >=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(dx  >=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	  if(x0!=    x1)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
314	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  x0  =  x1;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	  if(Math.abs(delta)>    tolerance)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
315	[BUG]  [BUGGY]  if(delta  <  0  ||  oldDelta  >  x1)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(delta  <  0  ||  oldDelta  >  x1)  {  [BUGGY]      x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  0  ||  oldDelta  >  x1)  {	  if(delta    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
316	[BUG]  [BUGGY]  if(x0!=  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);      [BUGGY]  if(x0!=  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }  [BUGGY]      if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(x0!=  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }	  if(oldDelta!=    null)    {    if(y1    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
