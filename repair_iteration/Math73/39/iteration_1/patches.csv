bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(delta  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta  ==  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  ==  0)  {	  if(oldDelta    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  if(oldDelta!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta!=  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  0)  {	  if(oldDelta    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  if(i  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(i  ==  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  ==  0)  {	  if(oldDelta    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
5	[BUG]  [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)  <  tolerance)  {  y0  =  y0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)||(y1  <  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)||(y1  <  0)>  oldDelta)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  >  0)||(y1  <  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
9	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)||(y1  <  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)||(y1  <  0)>  oldDelta)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y2  >  0)||(y1  <  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
10	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)||(y1  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)||(y1  <  =  0)>  oldDelta)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y2  >  0)||(y1  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
11	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
12	[BUG]  [BUGGY]  double  y2  =  f.value(x1)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  double  y2  =  f.value(x1)+  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x1)+  1;	      double    y2    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  double  y2  =  f.value(x2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  double  y2  =  f.value(x2);  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x2);	      double    y2    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  double  y2  =  f.value(x1)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  double  y2  =  f.value(x1)-  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x1)-  1;	      double    y2    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  if(delta!=  null)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  null)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  null)  {  if(y1  >  0)  {  y2  =  y0;  }	      if(oldDelta!=    null)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
16	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(y1  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta  ==  null)  {  if(y1  >  0)  {  y2  =  y0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  ==  null)  {  if(y1  >  0)  {  y2  =  y0;  }	      if(oldDelta!=    null)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
17	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(y2  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta!=  null)  {  if(y2  >  0)  {  y2  =  y0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(y2  >  0)  {  y2  =  y0;  }	      if(oldDelta!=    null)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
18	[BUG]  [BUGGY]  y2  =  y0;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  y0;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  y0;	      if(oldDelta!=    null)    {    if(y0    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
19	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(y0  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta  ==  null)  {  if(y0  >  0)  {  y2  =  y0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  ==  null)  {  if(y0  >  0)  {  y2  =  y0;  }	      if(oldDelta!=    null)    {    if(y0    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
20	[BUG]  [BUGGY]  y2  =  f.value(x2)+  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(x2)+  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2)+  1;	      y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  y2  =  f.value(x2)-  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(x2)-  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2)-  1;	      y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  if(delta  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
24	[BUG]  [BUGGY]  if(y1!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(y1!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(oldDelta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  y2  =  f.value(x1)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(x1)+  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1)+  1;	      y2    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  y2  =  f.value(x1,  y1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(x1,  y1);  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1,  y1);	      y2    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  if(y2!=  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(y2!=  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y2!=  0)  {	  if(y1!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  if(y0!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(y0!=  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0!=  0)  {	  if(y1!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y1  >  0))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y0  >  0)  ==  (y1  >  0))  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y1  >  0))  {	  if((    y0    >    0)    ==    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
31	[BUG]  [BUGGY]  if((  y0  >  0)  >=  (y1  >  0))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y0  >  0)  >=  (y1  >  0))  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  >=  (y1  >  0))  {	  if((    y0    >    0)    ==    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  if((  y0  >  0)!=  (y1  >  0))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y0  >  0)!=  (y1  >  0))  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)!=  (y1  >  0))  {	  if((    y0    >    0)    ==    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
33	[BUG]  [BUGGY]  if(y0  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(y0  ==  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0  ==  0)  {	  if(y1    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  if(y2  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(y2  ==  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y2  ==  0)  {	  if(y1    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
40	[BUG]  [BUGGY]  if(dx  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(dx  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(Math.abs(delta)>  tolerance)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  oldDelta)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
43	[BUG]  [BUGGY]  if(delta!=  null)  {  if(y0  >  0)  {  oldDelta  =  x0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  null)  {  if(y0  >  0)  {  oldDelta  =  x0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  null)  {  if(y0  >  0)  {  oldDelta  =  x0;  }	      if(oldDelta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
44	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta!=  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }	      if(oldDelta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
45	[BUG]  [BUGGY]  oldDelta  =  x0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  oldDelta  =  x0;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	oldDelta  =  x0;	      if(oldDelta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
46	[BUG]  [BUGGY]  if(delta  >  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta  >  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >  0)  {	  if(oldDelta    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
47	[BUG]  [BUGGY]  if(delta  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta  <  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  <  0)  {	  if(oldDelta    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
48	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  int  i  =  oldDelta.length()  -  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	int  i  =  oldDelta.length()  -  1;	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
49	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  int  i  =  oldDelta.length()  +  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	int  i  =  oldDelta.length()  +  1;	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  int  i  =  oldDelta.length()  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  int  i  =  oldDelta.length()  -  2;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	int  i  =  oldDelta.length()  -  2;	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  double  i  =  oldDelta.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  double  i  =  oldDelta.length();  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  i  =  oldDelta.length();	      int    i    =    oldDelta.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  if((  y0  >  0)!=  (y2  >  0))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y0  >  0)!=  (y2  >  0))  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)!=  (y2  >  0))  {	  if((    y1    >    0)!=    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
53	[BUG]  [BUGGY]  y2  =  f.value(y1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(y1);  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(y1);	      y2    =    f.value(y2);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  if(delta!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
55	[BUG]  [BUGGY]  if(delta  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
56	[BUG]  [BUGGY]  if(y1!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(y1!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  if(delta!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(oldDelta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
58	[BUG]  [BUGGY]  if((  y1  >  0)  >>  (y2  >  0))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y1  >  0)  >>  (y2  >  0))  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  >>  (y2  >  0))  {	  if((    y1    >    0)    >=    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
59	[BUG]  [BUGGY]  if(y1  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(y1  >  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y1  >  0)  {	  if(y1    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  if(delta!=  null)  {  if(y0  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  null)  {  if(y0  >  0)  {  y2  =  y0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  null)  {  if(y0  >  0)  {  y2  =  y0;  }	      if(oldDelta!=    null)    {    if(y0    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
61	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x1;  }	      if(oldDelta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
62	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta!=  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(y1  >  0)  {  oldDelta  =  x0;  }	      if(oldDelta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
63	[BUG]  [BUGGY]  if(oldDelta  >=  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta  >=  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  >=  0)  {	  if(oldDelta    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
64	[BUG]  [BUGGY]  if(oldDelta  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta  <  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  <  0)  {	  if(oldDelta    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
65	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(dx  >=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0.0)  {  if(oldDelta!=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
66	[BUG]  [BUGGY]  if(delta  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta  >=  0)  {  x0  =  x0;  y0  =  y1;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    x0    =    x0;    y0    =    y1;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(dx  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta!=  null)  {  if(dx  >  0)  {  y2  =  y0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(dx  >  0)  {  y2  =  y0;  }	      if(oldDelta!=    null)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
68	[BUG]  [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  >  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
69	[BUG]  [BUGGY]  if(delta!=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
70	[BUG]  [BUGGY]  y2  =  f.value(x1)+  delta;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(x1)+  delta;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x1)+  delta;	      y2    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(delta!=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(delta!=  0)  {  x0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
72	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  0)>  oldDelta)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y2  >  0)&&(y1  <  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
73	[BUG]  [BUGGY]  if((  y0  >  0)  ==  (y2  >  0)||(y1  >  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y0  >  0)  ==  (y2  >  0)||(y1  >  0)>  oldDelta)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  ==  (y2  >  0)||(y1  >  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
74	[BUG]  [BUGGY]  y2  =  f.value(x2)+  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(x2)+  2;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2)+  2;	      y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  if((  y0  >  0)  >=  (y2  >  0))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y0  >  0)  >=  (y2  >  0))  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  >=  (y2  >  0))  {	  if((    y0    >    0)    ==    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
76	[BUG]  [BUGGY]  double  y2  =  f.value(x0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  double  y2  =  f.value(x0);  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	double  y2  =  f.value(x0);	      double    y2    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
77	[BUG]  [BUGGY]  y2  =  f.value(y2)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(y2)+  1;  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(y2)+  1;	      y2    =    f.value(y2);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  y2  =  f.value(x2,  y2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(x2,  y2);  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x2,  y2);	      y2    =    f.value(y2);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  if(y2  ==  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(y2  ==  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y2  ==  0)  {  if(oldDelta!=  null)  {  y1  =  y0;  }	      if(oldDelta!=    null)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
80	[BUG]  [BUGGY]  if(oldDelta!=  null)  {  if(y2  >  0)  {  y1  =  y0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta!=  null)  {  if(y2  >  0)  {  y1  =  y0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta!=  null)  {  if(y2  >  0)  {  y1  =  y0;  }	      if(oldDelta!=    null)    {    if(y1    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
81	[BUG]  [BUGGY]  if(DATE  >  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(DATE  >  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(DATE  >  0.0)  {  if(oldDelta!=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)>  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)>    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
82	[BUG]  [BUGGY]  if(oldDelta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(oldDelta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(oldDelta  ==  null)  {  if(y0  >  0)  {  oldDelta  =  x0;  }	      if(oldDelta!=    null)    {    if(y0    >    0)    {    oldDelta    =    x0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
83	[BUG]  [BUGGY]  y2  =  f.value(x3);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(x3);  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x3);	      y2    =    f.value(x2);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
84	[BUG]  [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(dx  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
85	[BUG]  [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
86	[BUG]  [BUGGY]  if(x0!=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(x0!=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(x0!=  x1)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
87	[BUG]  [BUGGY]  if(dx  >=  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(dx  >=  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0.0)  {  y0  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
88	[BUG]  [BUGGY]  if((  y0  >  0)  <  (y2  >  0))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y0  >  0)  <  (y2  >  0))  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y0  >  0)  <  (y2  >  0))  {	  if((    y0    >    0)    ==    (y2    >    0))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
89	[BUG]  [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(i  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y0  =  x0;  y1  =  y0;  if(Math.abs(delta)  <  tolerance)  {  x1  =  x1  +  delta;  }	      if(oldDelta!=    0)    {    y0    =    x0;    y1    =    y0;    if(Math.abs(delta)    <    tolerance)    {    x1    =    x1    +    delta;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
90	[BUG]  [BUGGY]  if(i  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(i  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(i  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
91	[BUG]  [BUGGY]  if(dx  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(dx  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(dx  >=  0)  {  y1  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  0;  }	      if(oldDelta!=    0)    {    y1    =    x0;    y2    =    y0;    delta    =    x1    -    x0;    oldDelta    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
92	[BUG]  [BUGGY]  if(y2  >=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(y2  >=  0)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y2  >=  0)  {	  if(y1    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
93	[BUG]  [BUGGY]  if(y0  >  0)  {  y2  =  y0;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if(y0  >  0)  {  y2  =  y0;  }  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if(y0  >  0)  {  y2  =  y0;  }	      if(oldDelta!=    null)    {    if(y0    >    0)    {    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
94	[BUG]  [BUGGY]  y2  =  f.value(x0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  y2  =  f.value(x0);  [BUGGY]    if  ((y1  >  0)  ==  (y2  >  0))  {  x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	y2  =  f.value(x0);	      y2    =    f.value(x1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
95	[BUG]  [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  oldDelta)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    y0  =  y1;  if  (Math.abs(delta)  >  tolerance)  {  x1  =  x1  +  delta;  }  else  if  (dx  >  0.0)  {  x1  =  x1  +  0.5  *  tolerance;  }  else  if  (dx  <=  0.0)  {  x1  =  x1  -  0.5  *  tolerance;  }  y1  =  f.value(x1);    [BUGGY]  if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  oldDelta)  {  [BUGGY]    x2  =  x0;  y2  =  y0;  delta  =  x1  -  x0;  oldDelta  =  delta;  }  i++;  }  throw  new  MaxIterationsExceededException(maximalIterationCount);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	305	305	1	replace	if((  y1  >  0)  ==  (y1  >  0)&&(y1  <  =  0)>  oldDelta)  {	  if((    y1    >    0)    ==    (y2    >    0)||(y1    >    0)>    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
