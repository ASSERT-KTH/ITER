bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return solve(f, min, yMin, max, yMax, initial, yInitial); [FE] AssertionFailedError testBadEndpoints [CONTEXT] return result; }  if (yInitial * yMax < 0) { return solve(f, initial, yInitial, max, yMax, initial, yInitial); }   [BUGGY] return solve(f, min, yMin, max, yMax, initial, yInitial); [BUGGY]  } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError testBadEndpoints [CONTEXT] return result; }  if (yInitial * yMax < 0) { return solve(f, initial, yInitial, max, yMax, initial, yInitial); }   [BUGGY] [BUGGY] return solve(f, min, yMin, max, yMax, initial, yInitial); } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	138	138	1	add	
3	[BUG] [BUGGY] throw MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE, min, max, yMin, yMax); [FE] AssertionFailedError testBadEndpoints [CONTEXT] } else if (Math.abs(yMax) <= functionValueAccuracy) { setResult(max, 0); ret = max; } else {  [BUGGY] throw MathRuntimeException.createIllegalArgumentException(      NON_BRACKETING_MESSAGE, min, max, yMin, yMax); [BUGGY] NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	185	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError testBadEndpoints [CONTEXT] } else if (Math.abs(yMax) <= functionValueAccuracy) { setResult(max, 0); ret = max; } else {  [BUGGY] [BUGGY] throw MathRuntimeException.createIllegalArgumentException(      NON_BRACKETING_MESSAGE, min, max, yMin, yMax); NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	185	1	add	
5	[BUG] [BUGGY] clearResult(); [FE] AssertionFailedError testBadEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { [BUGGY] clearResult(); [BUGGY] verifySequence(min, initial, max);  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }   [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	102	102	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError testBadEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { [BUGGY] [BUGGY] clearResult(); verifySequence(min, initial, max);  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }   [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	102	102	1	add	
7	[BUG] [BUGGY] verifySequence(min, initial, max); [FE] AssertionFailedError testBadEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); [BUGGY] verifySequence(min, initial, max); [BUGGY]   double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	103	103	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError testBadEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); [BUGGY] [BUGGY] verifySequence(min, initial, max);  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	103	103	1	add	
9	[BUG] [BUGGY] double yInitial = f.value(initial); [FE] AssertionFailedError testBadEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); verifySequence(min, initial, max);  [BUGGY] double yInitial = f.value(initial); [BUGGY] if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	106	106	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError testBadEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); verifySequence(min, initial, max);  [BUGGY] [BUGGY] double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	106	106	1	add	
11	[BUG] [BUGGY] if (Math.abs(yInitial) <= functionValueAccuracy) { [FE] AssertionFailedError testBadEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); verifySequence(min, initial, max);  double yInitial = f.value(initial); [BUGGY] if (Math.abs(yInitial) <= functionValueAccuracy) { [BUGGY] setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	107	107	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError testBadEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); verifySequence(min, initial, max);  double yInitial = f.value(initial); [BUGGY] [BUGGY] if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	107	107	1	add	
13	[BUG] [BUGGY] double yMin = f.value(min); [FE] AssertionFailedError testBadEndpoints [CONTEXT] verifySequence(min, initial, max);  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  [BUGGY] double yMin = f.value(min); [BUGGY] if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; }  if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }  [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	113	113	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError testBadEndpoints [CONTEXT] verifySequence(min, initial, max);  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  [BUGGY] [BUGGY] double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; }  if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }  [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	113	113	1	add	
15	[BUG] [BUGGY] if (Math.abs(yMin) <= functionValueAccuracy) { [FE] AssertionFailedError testBadEndpoints [CONTEXT]  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); [BUGGY] if (Math.abs(yMin) <= functionValueAccuracy) { [BUGGY] setResult(yMin, 0); return result; }  if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }   [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	114	114	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError testBadEndpoints [CONTEXT]  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); [BUGGY] [BUGGY] if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; }  if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }   [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	114	114	1	add	
17	[BUG] [BUGGY] if (yInitial * yMin < 0) { [FE] AssertionFailedError testBadEndpoints [CONTEXT] }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; }  [BUGGY] if (yInitial * yMin < 0) { [BUGGY] return solve(f, min, yMin, initial, yInitial, min, yMin); }  double yMax = f.value(max); if (Math.abs(yMax) <= functionValueAccuracy) { setResult(yMax, 0); return result; }  [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	120	120	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError testBadEndpoints [CONTEXT] }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; }  [BUGGY] [BUGGY] if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }  double yMax = f.value(max); if (Math.abs(yMax) <= functionValueAccuracy) { setResult(yMax, 0); return result; }  [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	120	120	1	add	
19	[BUG] [BUGGY] double yMax = f.value(max); [FE] AssertionFailedError testBadEndpoints [CONTEXT] setResult(yMin, 0); return result; }  if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }  [BUGGY] double yMax = f.value(max); [BUGGY] if (Math.abs(yMax) <= functionValueAccuracy) { setResult(yMax, 0); return result; }  if (yInitial * yMax < 0) { return solve(f, initial, yInitial, max, yMax, initial, yInitial); }  [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	125	125	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError testBadEndpoints [CONTEXT] setResult(yMin, 0); return result; }  if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }  [BUGGY] [BUGGY] double yMax = f.value(max); if (Math.abs(yMax) <= functionValueAccuracy) { setResult(yMax, 0); return result; }  if (yInitial * yMax < 0) { return solve(f, initial, yInitial, max, yMax, initial, yInitial); }  [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	125	125	1	add	
