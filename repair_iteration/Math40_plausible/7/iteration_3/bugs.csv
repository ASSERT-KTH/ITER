bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  ==  2)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	if(maximalOrder  ==  2)  {	  if    (maximalOrder    ==    1)    {    	compilable	  [FE]  AssertionError  	21	3	replace
2	[BUG]  [BUGGY]  if(maximalOrder  ==  2)  {  [FE]  AssertionError  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  ==  2)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder  ==  2)  {	  if    (maximalOrder    ==    1)    {    	compilable	  [FE]  AssertionError  	21	3	replace
3	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
4	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING  +  1;  [CE]  illegal  start  of  type  [FE]                          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING  +  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING  +  1;	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
5	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
6	[BUG]  [BUGGY]  this.maximalOrder  -=  maximalOrder;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  -=  maximalOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  -=  maximalOrder;	  this.maximalOrder    -=    absoluteAccuracy;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
7	[BUG]  [BUGGY]  this.maximalOrder  -=  maximumOrder;  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  -=  maximumOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  -=  maximumOrder;	  this.maximalOrder    -=    absoluteAccuracy;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
8	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    absoluteAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	28	None	replace
9	[BUG]  [BUGGY]  [FE]  NumberIsTooSmallException  [FE]    NumberIsTooSmallException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  >  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	if(maximalOrder  >  0)  {	  if(maximalOrder    >=    0)    {    	compilable	  [FE]  NumberIsTooSmallException  	72	4	replace
10	[BUG]  [BUGGY]  if(maximalOrder  >  0)  {  [FE]  NumberIsTooSmallException  [FE]    NumberIsTooSmallException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  >  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder  >  0)  {	  if(maximalOrder    >=    0)    {    	compilable	  [FE]  NumberIsTooSmallException  	72	4	replace
11	[BUG]  [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_ALLOW;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_ALLOW;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelativeAccuracy.ANY_ALLOW;	  this.allowed    =    AllowedSolution.ANY_ALLOW;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
12	[BUG]  [BUGGY]  this.allowed  =  RelatedSolution.ANY_ALLOW;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelatedSolution.ANY_ALLOW;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelatedSolution.ANY_ALLOW;	  this.allowed    =    AllowedSolution.ANY_ALLOW;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
13	[BUG]  [BUGGY]  this.allowed  =  allowedSolution.ANY_ALLOW;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  allowedSolution.ANY_ALLOW;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  allowedSolution.ANY_ALLOW;	  this.allowed    =    AllowedSolution.ANY_ALLOW;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
14	[BUG]  [BUGGY]  this.allowed  =  RelativeSolution.ANY_SIDE;  [CE]  illegal  start  of  type  [FE]        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelativeSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelativeSolution.ANY_SIDE;	  this.allowed    =    RelatedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
15	[BUG]  [BUGGY]  this.allowed  =  allowedSolution.ANY_SIDE;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  allowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  allowedSolution.ANY_SIDE;	  this.allowed    =    RelatedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
16	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  MAXIMAL_AGING)  {  if  (maximalOrder  <  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  MAXIMAL_AGING)  {  if  (maximalOrder  <  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  MAXIMAL_AGING)  {  if  (maximalOrder  <  0)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
17	[BUG]  [BUGGY]  [FE]  NumberIsTooSmallException  [FE]          AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	if(relativeAccuracy  <  maximalOrder)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    <    0)    {    	compilable	  [FE]  NumberIsTooSmallException  	29	4	replace
18	[BUG]  [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  [FE]  NumberIsTooSmallException  [FE]          AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  maximalOrder)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    <    0)    {    	compilable	  [FE]  NumberIsTooSmallException  	29	4	replace
19	[BUG]  [BUGGY]  if(relativeAccuracy  <  maximumOrder)  {  [CE]  cannot  find  symbol  maximumOrder  [FE]            AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximumOrder)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  maximumOrder)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  maximumOrder	29	None	replace
20	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY    &&    relativeAccuracy    ==    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
21	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY    &&    relativeAccuracy    ==    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY    &&    relativeAccuracy    ==    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
23	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    >=    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    >=    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    relativeAccuracy    /    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
26	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    relativeAccuracy    /    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
27	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [CE]  illegal  start  of  type  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY  +  1;	  this.relativeAccuracy    =    relativeAccuracy    /    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
28	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    maximalOrder    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	56	None	replace
29	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    maximalOrder    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	56	None	replace
30	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    maximalOrder    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	56	None	replace
31	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
32	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
33	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
34	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  ')'  expected	61	None	replace
35	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
36	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  ';'  expected  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  ';'  expected	78	None	replace
37	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	69	1	add
38	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	69	1	add
39	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [CE]  incompatible  types  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  incompatible  types	69	None	add
40	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	69	1	add
41	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [FE]  TooManyEvaluationsException  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	69	1	add
42	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	69	1	add
43	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [FE]  TooManyEvaluationsException  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	69	1	add
44	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [CE]  incompatible  types  [FE]            TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	  	non-compiled	[CE]  incompatible  types	69	None	add
45	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	64	1	add
46	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	64	1	add
47	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [CE]  incompatible  types  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  incompatible  types	64	None	add
48	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	64	1	add
49	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [FE]  TooManyEvaluationsException  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	64	1	add
50	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [CE]  incompatible  types  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	  	non-compiled	[CE]  incompatible  types	64	None	add
51	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]            TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	64	1	add
52	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [FE]  TooManyEvaluationsException  [FE]            TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	64	1	add
53	[BUG]  [BUGGY]  if  (maximalOrder  ==  1)  {  if  (maximalOrder  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if  (maximalOrder  ==  1)  {  if  (maximalOrder  ==  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if    (maximalOrder    ==    1)    {    if  (maximalOrder  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
54	[BUG]  [BUGGY]  if  (maximalOrder  ==  1)  {  If  (maximalOrder  ==  1)  {  [CE]  ';'  expected  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if  (maximalOrder  ==  1)  {  If  (maximalOrder  ==  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if    (maximalOrder    ==    1)    {    If  (maximalOrder  ==  1)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
55	[BUG]  [BUGGY]  if  (maximalOrder  ==  1)  {  if  (maximalOrder  >=  1)  {  [CE]  illegal  start  of  expression  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if  (maximalOrder  ==  1)  {  if  (maximalOrder  >=  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if    (maximalOrder    ==    1)    {    if  (maximalOrder  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
56	[BUG]  [BUGGY]  if  (maximalOrder  ==  1)  {  if  (maximalOrder  ==  2)  {  [CE]  illegal  start  of  expression  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if  (maximalOrder  ==  1)  {  if  (maximalOrder  ==  2)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if    (maximalOrder    ==    1)    {    if  (maximalOrder  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
57	[BUG]  [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [CE]  cannot  find  symbol  maximumOrder  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  cannot  find  symbol  maximumOrder	65	None	replace
58	[BUG]  [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true  [CE]  ')'  expected  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  ')'  expected	65	None	replace
59	[BUG]  [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAcc  [CE]  ')'  expected  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAcc  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAcc	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  ')'  expected	65	None	replace
60	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    ==    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    ==    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  int  maximumOrder  =  relativeAccuracy.getMaximumOrder();  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  int  maximumOrder  =  relativeAccuracy.getMaximumOrder();  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	int  maximumOrder  =  relativeAccuracy.getMaximumOrder();	  int    maximalOrder    =    relativeAccuracy.getMaximumOrder()    +    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
63	[BUG]  [BUGGY]  int  maximalOrder  =  relativeAccuracy.getMaximumOrder()  /  1;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  int  maximalOrder  =  relativeAccuracy.getMaximumOrder()  /  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	int  maximalOrder  =  relativeAccuracy.getMaximumOrder()  /  1;	  int    maximalOrder    =    relativeAccuracy.getMaximumOrder()    +    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  [CE]  cannot  find  symbol  maximumOrder  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    	non-compiled	[CE]  cannot  find  symbol  maximumOrder	70	None	replace
65	[BUG]  [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  [CE]  illegal  start  of  expression  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
66	[BUG]  [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true  [CE]  ')'  expected  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
67	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURAC  [CE]  illegal  start  of  expression  [FE]        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURAC  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURAC	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValu    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
68	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [CE]  illegal  start  of  expression  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValu    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
69	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  illegal  start  of  expression  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValu    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
70	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTo  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTo  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTo	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValu    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
71	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	41	1	add
72	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	41	1	add
73	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  This.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [CE]  cannot  find  symbol  This  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  This.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    This.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  cannot  find  symbol  This	41	None	add
74	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [CE]  incompatible  types  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  incompatible  types	41	None	add
75	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  allowedSolution.ANY_SIDE;  [CE]  cannot  find  symbol  allowedSolution  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  allowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  allowedSolution.ANY_SIDE;	  	non-compiled	[CE]  cannot  find  symbol  allowedSolution	41	None	add
76	[BUG]  [BUGGY]  this.allowed  =  RelativeAccuracy.ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelativeAccuracy.ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelativeAccuracy.ABSOLUTE_ACCURACY;	  this.allowed    =    RelativeAccuracy.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
77	[BUG]  [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_SIDE  |  RelativeAccuracy.ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_SIDE  |  RelativeAccuracy.ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelativeAccuracy.ANY_SIDE  |  RelativeAccuracy.ABSOLUTE_ACCURACY;	  this.allowed    =    RelativeAccuracy.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
78	[BUG]  [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_SIDE  +  1;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_SIDE  +  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelativeAccuracy.ANY_SIDE  +  1;	  this.allowed    =    RelativeAccuracy.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
79	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING  -  1;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING  -  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAXIMAL_AGING  -  1;	  this.allowed    =    Integer.MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
80	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING  +  1;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING  +  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAXIMAL_AGING  +  1;	  this.allowed    =    Integer.MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
81	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING  |  Integer.MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING  |  Integer.MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAXIMAL_AGING  |  Integer.MAXIMAL_AGING;	  this.allowed    =    Integer.MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
82	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  absoluteAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  expression  [FE]                          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  absoluteAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  absoluteAccuracy  ==  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    absoluteAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    ==    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
83	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [CE]  illegal  start  of  expression  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
84	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
85	[BUG]  [BUGGY]  this.allowed  =  Integer.MIN_VALUE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MIN_VALUE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MIN_VALUE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
86	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
87	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
88	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	81	None	replace
89	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	81	None	replace
90	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
91	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	81	None	replace
92	[BUG]  [BUGGY]  this.allowed  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MIN_VALUE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MIN_VALUE;	  this.allowed    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
93	[BUG]  [BUGGY]  this.allowed  =  Integer.MAX_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAX_VALUE  +  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAX_VALUE  +  1;	  this.allowed    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
94	[BUG]  [BUGGY]  this.allowed  =  Integer.MAX_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAX_VALUE  -  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAX_VALUE  -  1;	  this.allowed    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
95	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	9	None	replace
96	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
97	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
98	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
99	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
100	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	26	None	replace
101	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	26	None	replace
102	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	26	None	replace
103	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
104	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  ';'  expected  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  ';'  expected	2	None	replace
105	[BUG]  [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  AllowedSolution.ANY_SIDE;	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
106	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  maximalOrder;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  maximalOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  +  maximalOrder;	  this.relativeAccuracy    =    absoluteAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
107	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  maximumOrder;  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  maximumOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  +  maximumOrder;	  this.relativeAccuracy    =    absoluteAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
108	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  relativeAccuracy;  [CE]  illegal  start  of  type  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  relativeAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  +  relativeAccuracy;	  this.relativeAccuracy    =    absoluteAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
109	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  *  functionValueAccuracy;  [CE]  illegal  start  of  type  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  *  functionValueAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  *  functionValueAccuracy;	  this.relativeAccuracy    =    absoluteAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
110	[BUG]  [BUGGY]  [FE]  NumberIsTooSmallException  [FE]              AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if  (relativeAccuracy  <  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	if  (relativeAccuracy  <  1)  {	  if    (maximalOrder    <    1)    {    if    (maximalOrder    <    2)    {    	compilable	  [FE]  NumberIsTooSmallException  	40	4	replace
111	[BUG]  [BUGGY]  if  (relativeAccuracy  <  1)  {  [FE]  NumberIsTooSmallException  [FE]              AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if  (relativeAccuracy  <  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if  (relativeAccuracy  <  1)  {	  if    (maximalOrder    <    1)    {    if    (maximalOrder    <    2)    {    	compilable	  [FE]  NumberIsTooSmallException  	40	4	replace
112	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
113	[BUG]  [BUGGY]  if(maximalOrder  >=  0)  {  if(maximalOrder  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    NumberIsTooSmallException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  >=  0)  {  if(maximalOrder  >=  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    >=    0)    {    if(maximalOrder  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
114	[BUG]  [BUGGY]  if(maximalOrder  >=  0)  {  if(maximalOrder!=  0)  {  [CE]  illegal  start  of  expression  [FE]      NumberIsTooSmallException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  >=  0)  {  if(maximalOrder!=  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    >=    0)    {    if(maximalOrder!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
115	[BUG]  [BUGGY]  if(maximalOrder  >=  0)  {  if(maximalOrder  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        NumberIsTooSmallException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  >=  0)  {  if(maximalOrder  ==  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    >=    0)    {    if(maximalOrder  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
116	[BUG]  [BUGGY]  if(maximalOrder  >=  0)  {  if(maximalOrder  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          NumberIsTooSmallException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  >=  0)  {  if(maximalOrder  >>  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    >=    0)    {    if(maximalOrder  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
117	[BUG]  [BUGGY]  this.maximalOrder  =  totalOrder;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  totalOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  totalOrder;	  this.maximalOrder    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
118	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
119	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
120	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
121	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
122	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
123	[BUG]  [BUGGY]  double  maximalOrder  =  absoluteAccuracy.getMaximumOrder();  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  double  maximalOrder  =  absoluteAccuracy.getMaximumOrder();  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	double  maximalOrder  =  absoluteAccuracy.getMaximumOrder();	  int    maximalOrder    =    absoluteAccuracy.getMaximumOrder();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
124	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
125	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
126	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
127	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximumOrder);  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximumOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximumOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
128	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  ';'  expected  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  ';'  expected	6	None	replace
129	[BUG]  [BUGGY]  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maxi  [CE]  ')'  expected  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maxi  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maxi	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    	non-compiled	[CE]  ')'  expected	68	None	replace
130	[BUG]  [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [CE]  illegal  start  of  type  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelativeAccuracy.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
131	[BUG]  [BUGGY]  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(max  [CE]  ')'  expected  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(max  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(max	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    	non-compiled	[CE]  ')'  expected	68	None	replace
132	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    0?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
133	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    0?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
134	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    0?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
135	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
136	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
137	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
138	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  ';'  expected  [FE]                            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  ';'  expected	52	None	replace
139	[BUG]  [BUGGY]  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;	  this.allowed    =    maximalOrder;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
140	[BUG]  [BUGGY]  this.allowed  =  RELATIVE_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RELATIVE_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RELATIVE_ABSOLUTE_ACCURACY;	  this.allowed    =    maximalOrder;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
141	[BUG]  [BUGGY]  this.allowed  =  absoluteAccuracy;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  absoluteAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  absoluteAccuracy;	  this.allowed    =    maximalOrder;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
142	[BUG]  [BUGGY]  this.allowed  =  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  DEFAULT_MAXIMAL_AGING;	  this.allowed    =    maximalOrder;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
143	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    maximalOrder);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
144	[BUG]  [BUGGY]  this.allowed  =  DEFAULT_REDUCTION_FACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  DEFAULT_REDUCTION_FACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  DEFAULT_REDUCTION_FACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    maximalOrder);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
145	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    maximalOrder);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
146	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
147	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  MAXIMAL_AGING)  {  if  (maximalOrder  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  MAXIMAL_AGING)  {  if  (maximalOrder  >=  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  MAXIMAL_AGING)  {  if  (maximalOrder  >=  0)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
148	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [CE]  ')'  expected  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_ORDER):    Integer.toString(DEFAULT_MA    	non-compiled	[CE]  ')'  expected	58	None	replace
149	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [CE]  ')'  expected  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_ORDER):    Integer.toString(DEFAULT_MA    	non-compiled	[CE]  ')'  expected	58	None	replace
150	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [CE]  ')'  expected  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_ORDER):    Integer.toString(DEFAULT_MA    	non-compiled	[CE]  ')'  expected	58	None	replace
151	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [CE]  illegal  start  of  expression  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_ORDER):    Integer.toString(DEFAULT_MA    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
152	[BUG]  [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  if  (maximalOrder  >=  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  if  (maximalOrder  >=  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  maximalOrder)  {  if  (maximalOrder  >=  1)  {	  if    (maximalOrder    <    1)    {    if    (maximalOrder    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
153	[BUG]  [BUGGY]  if(relativeAccuracy  <  maximumOrder)  {  if  (maximalOrder  >=  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximumOrder)  {  if  (maximalOrder  >=  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  maximumOrder)  {  if  (maximalOrder  >=  1)  {	  if    (maximalOrder    <    1)    {    if    (maximalOrder    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
154	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder!=?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder!=?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder!=?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    >=?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
155	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  ==?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  ==?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  ==?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    >=?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
156	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  >=?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  >=?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  >=?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    >=?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
157	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==?  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==?  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==?  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    >=?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
158	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
159	[BUG]  [BUGGY]  This.allowed  =  AllowedSolution.ANY_SIDE;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  This.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	This.allowed  =  AllowedSolution.ANY_SIDE;	          this.allowed    =    AllowedSolution.ANY_SIDE;    This.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
160	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  maximalOrder  +  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  maximalOrder  +  DEFAULT_ABSOLUTE_ACCURACY;	  this.maximalOrder    =    maximalOrder    +    relativeAccuracy;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
161	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  /  relativeAccuracy;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  maximalOrder  /  relativeAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  maximalOrder  /  relativeAccuracy;	  this.maximalOrder    =    maximalOrder    +    relativeAccuracy;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
162	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  maximalOrder  +  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  maximalOrder  +  DEFAULT_MAXIMAL_AGING;	  this.maximalOrder    =    maximalOrder    +    relativeAccuracy;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
163	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  *  relativeAccuracy;  [CE]  illegal  start  of  type  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  maximalOrder  *  relativeAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  maximalOrder  *  relativeAccuracy;	  this.maximalOrder    =    maximalOrder    +    relativeAccuracy;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
164	[BUG]  [BUGGY]  int  maximalOrder  =  relativeAccuracy.getMinimumOrder()  +  1;  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  int  maximalOrder  =  relativeAccuracy.getMinimumOrder()  +  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	int  maximalOrder  =  relativeAccuracy.getMinimumOrder()  +  1;	  int    maximalOrder    =    relativeAccuracy.getMinimumOrder();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
165	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximumOrder);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximumOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximumOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    maximalOrder);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
166	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    maximalOrder);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
167	[BUG]  [BUGGY]  double  maximalOrder  =  relativeAccuracy.getMaximumOrder()  +  1;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  double  maximalOrder  =  relativeAccuracy.getMaximumOrder()  +  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	double  maximalOrder  =  relativeAccuracy.getMaximumOrder()  +  1;	  double    maximalOrder    =    relativeAccuracy.getMaximumOrder();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
168	[BUG]  [BUGGY]  double  maximalOrder  =  relativeAccuracy.getMaximumOrder()  -  1;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  double  maximalOrder  =  relativeAccuracy.getMaximumOrder()  -  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	double  maximalOrder  =  relativeAccuracy.getMaximumOrder()  -  1;	  double    maximalOrder    =    relativeAccuracy.getMaximumOrder();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
169	[BUG]  [BUGGY]  double  maximalOrder  =  relativeAccuracy.getMaximumOrder()  /  2;  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  double  maximalOrder  =  relativeAccuracy.getMaximumOrder()  /  2;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	double  maximalOrder  =  relativeAccuracy.getMaximumOrder()  /  2;	  double    maximalOrder    =    relativeAccuracy.getMaximumOrder();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
170	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    &&    relativeAccuracy    ==    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
171	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;	  this.maximalOrder    =    MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
172	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  DEFAULT_MAXIMAL_AGING;	  this.maximalOrder    =    MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
173	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  illegal  start  of  expression  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
174	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
175	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absolute  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absolute  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absolute	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
176	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIs  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIs  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIs	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
177	[BUG]  [BUGGY]  if(maximalOrder  ==  0)  {  if(maximalOrder  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  ==  0)  {  if(maximalOrder  ==  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    ==    0)    {    if(maximalOrder  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
178	[BUG]  [BUGGY]  if(maximalOrder  ==  0)  {  If(maximalOrder  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  ==  0)  {  If(maximalOrder  ==  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    ==    0)    {    If(maximalOrder  ==  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
179	[BUG]  [BUGGY]  if(maximalOrder  ==  0)  {  if(maximalOrder  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  ==  0)  {  if(maximalOrder  >=  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    ==    0)    {    if(maximalOrder  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
180	[BUG]  [BUGGY]  if(maximalOrder  ==  0)  {  if(maximalOrder!=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  ==  0)  {  if(maximalOrder!=  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    ==    0)    {    if(maximalOrder!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
181	[BUG]  [BUGGY]  If  (maximalOrder  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  If  (maximalOrder  <  =  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	If  (maximalOrder  <  =  0)  {	  if    (maximalOrder    <    0)    {    If    (maximalOrder    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
182	[BUG]  [BUGGY]  If  (relativeAccuracy  <  0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  If  (relativeAccuracy  <  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	If  (relativeAccuracy  <  0)  {	  if    (maximalOrder    <    0)    {    If    (maximalOrder    <    0)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
183	[BUG]  [BUGGY]  If  (maximalOrder  <  0)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  If  (maximalOrder  <  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	If  (maximalOrder  <  0)  {	  if    (maximalOrder    <    0)    {    If    (maximalOrder    <    0)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
184	[BUG]  [BUGGY]  If  (relativeAccuracy  <  0  ||  maximalOrder  <  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  If  (relativeAccuracy  <  0  ||  maximalOrder  <  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	If  (relativeAccuracy  <  0  ||  maximalOrder  <  0)  {	  if    (maximalOrder    <    0)    {    If    (maximalOrder    <    0)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
185	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    relativeAccuracy    +    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
186	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  *  functionValueAccuracy;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  maximalOrder  *  functionValueAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  maximalOrder  *  functionValueAccuracy;	  this.maximalOrder    =    maximalOrder    /    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
187	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  maximalOrder  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  maximalOrder  /  DEFAULT_ABSOLUTE_ACCURACY;	  this.maximalOrder    =    maximalOrder    /    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
188	[BUG]  [BUGGY]  this.maximalOrder  =  absoluteAccuracy  /  functionValueAccuracy;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  absoluteAccuracy  /  functionValueAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  absoluteAccuracy  /  functionValueAccuracy;	  this.maximalOrder    =    maximalOrder    /    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
189	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  /  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  maximalOrder  /  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  maximalOrder  /  DEFAULT_MAXIMAL_AGING;	  this.maximalOrder    =    maximalOrder    /    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
190	[BUG]  [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  If  (maximalOrder  <  1)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  If  (maximalOrder  <  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  maximalOrder)  {  If  (maximalOrder  <  1)  {	  if    (maximalOrder    <    1)    {    If    (maximalOrder    <    1)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
191	[BUG]  [BUGGY]  if(maximalOrder  <  =  1)  {  If  (maximalOrder  <  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  <  =  1)  {  If  (maximalOrder  <  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder  <  =  1)  {  If  (maximalOrder  <  1)  {	  if    (maximalOrder    <    1)    {    If    (maximalOrder    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
192	[BUG]  [BUGGY]  if(relativeAccuracy  <  maximumOrder)  {  If  (maximalOrder  <  1)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximumOrder)  {  If  (maximalOrder  <  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  maximumOrder)  {  If  (maximalOrder  <  1)  {	  if    (maximalOrder    <    1)    {    If    (maximalOrder    <    1)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
193	[BUG]  [BUGGY]  if(maximalOrder  <  2)  {  If(maximalOrder  <  1)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  <  2)  {  If(maximalOrder  <  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder  <  2)  {  If(maximalOrder  <  1)  {	  if    (maximalOrder    <    1)    {    If    (maximalOrder    <    1)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
194	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_ACCURATE_FACTOR):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
195	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_ACCURATE_FACTOR):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
196	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_ACCURATE_FACTOR):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
197	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  REDUCTION_FACTOR;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  REDUCTION_FACTOR;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  +  REDUCTION_FACTOR;	  this.relativeAccuracy    =    relativeAccuracy    +    REDUCTION_FACTOR;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
198	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  *  REDUCTION_FACTOR;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  *  REDUCTION_FACTOR;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  *  REDUCTION_FACTOR;	  this.relativeAccuracy    =    relativeAccuracy    +    REDUCTION_FACTOR;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
199	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  /  REDUCTION_FACTOR;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  /  REDUCTION_FACTOR;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  /  REDUCTION_FACTOR;	  this.relativeAccuracy    =    relativeAccuracy    +    REDUCTION_FACTOR;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
200	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	67	1	add
201	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	67	1	add
202	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	67	1	add
203	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [FE]  TooManyEvaluationsException  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	67	1	add
204	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [CE]  incompatible  types  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  incompatible  types	67	None	add
205	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [CE]  incompatible  types  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	  	non-compiled	[CE]  incompatible  types	67	None	add
206	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]            TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	67	1	add
207	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  [FE]  TooManyEvaluationsException  [FE]            TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	67	1	add
208	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  /  functionValueAccuracy;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  /  functionValueAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  /  functionValueAccuracy;	  this.relativeAccuracy    =    relativeAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
209	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,  absoluteAccuracy);  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,  absoluteAccuracy);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,  absoluteAccuracy);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    maximalOrder);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
210	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
211	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(RELATIVE_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
212	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(RELATIVE_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
213	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(RELATIVE_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
214	[BUG]  [BUGGY]  this.relativeAccuracy  =  RELATIVE_ABSOLUTE_ACCURACY  |  RELATIVE_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  RELATIVE_ABSOLUTE_ACCURACY  |  RELATIVE_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  RELATIVE_ABSOLUTE_ACCURACY  |  RELATIVE_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    RELATIVE_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
215	[BUG]  [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  if  (maximalOrder  <  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  if  (maximalOrder  <  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  maximalOrder)  {  if  (maximalOrder  <  1)  {	  if    (maximalOrder    <    1)    {    if    (maximalOrder    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
216	[BUG]  [BUGGY]  if(relativeAccuracy  <  maximumOrder)  {  if  (maximalOrder  <  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximumOrder)  {  if  (maximalOrder  <  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  maximumOrder)  {  if  (maximalOrder  <  1)  {	  if    (maximalOrder    <    1)    {    if    (maximalOrder    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
217	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  ';'  expected  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  |  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  ';'  expected	1	None	replace
218	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }  [CE]  illegal  start  of  expression  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    0,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
219	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    0,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
220	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTo  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTo  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTo	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    0,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
221	[BUG]  [BUGGY]  this.allowed  =  RelatedSolution.ANY_ALLOWED;  [CE]  illegal  start  of  type  [FE]        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelatedSolution.ANY_ALLOWED;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelatedSolution.ANY_ALLOWED;	  this.allowed    =    AllowedSolution.ANY_ALLOWED;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
222	[BUG]  [BUGGY]  this.allowed  =  allowedSolution.ANY_ALLOWED;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  allowedSolution.ANY_ALLOWED;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  allowedSolution.ANY_ALLOWED;	  this.allowed    =    AllowedSolution.ANY_ALLOWED;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
223	[BUG]  [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_ALLOWED;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_ALLOWED;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelativeAccuracy.ANY_ALLOWED;	  this.allowed    =    AllowedSolution.ANY_ALLOWED;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
224	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    >=    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	27	None	replace
225	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    >=    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	27	None	replace
226	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy!=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy!=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy!=  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    >=    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	27	None	replace
227	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
228	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsToo  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsToo  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsToo	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
229	[BUG]  [BUGGY]  int  maximalOrder  =  absoluteAccuracy.getMinimumOrder();  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  int  maximalOrder  =  absoluteAccuracy.getMinimumOrder();  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	int  maximalOrder  =  absoluteAccuracy.getMinimumOrder();	  int    maximalOrder    =    relativeAccuracy.getMinimumOrder();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
230	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  /  DEFAULT_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    relativeAccuracy    /    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
231	[BUG]  [BUGGY]  this.maximalOrder  =  relativeAccuracy  /  functionValueAccuracy;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  relativeAccuracy  /  functionValueAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  relativeAccuracy  /  functionValueAccuracy;	  this.maximalOrder    =    maximalOrder    /    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
232	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    maximalOrder);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
233	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    maximalOrder);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
234	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ALLOW_SIDE;  This.allowed  =  AllowedSolution.ANY_SIDE;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ALLOW_SIDE;  This.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ALLOW_SIDE;  This.allowed  =  AllowedSolution.ANY_SIDE;	          this.allowed    =    AllowedSolution.ANY_SIDE;    This.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
235	[BUG]  [BUGGY]  this.allowed  =  REDUCTION_FACTOR;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  REDUCTION_FACTOR;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  REDUCTION_FACTOR;	  this.allowed    =    maximalOrder;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
236	[BUG]  [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(  [CE]  illegal  start  of  expression  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
237	[BUG]  [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException  [CE]  '('  or  '['  expected  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    	non-compiled	[CE]  '('  or  '['  expected	70	None	replace
238	[BUG]  [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException  [CE]  '('  or  '['  expected  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    	non-compiled	[CE]  '('  or  '['  expected	70	None	replace
239	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
240	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [CE]  incompatible  types  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.maximalOrder  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  incompatible  types	64	None	add
241	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	64	1	add
242	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  [FE]  TooManyEvaluationsException  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	64	1	add
243	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;	  	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	64	None	add
244	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [CE]  cannot  find  symbol  MAXIMAL_AGING  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;	  	non-compiled	[CE]  cannot  find  symbol  MAXIMAL_AGING	64	None	add
245	[BUG]  [BUGGY]  if(relativeAccuracy  <  maximumOrder)  {  if  (maximalOrder  <  2)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximumOrder)  {  if  (maximalOrder  <  2)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  maximumOrder)  {  if  (maximalOrder  <  2)  {	  if    (maximalOrder    <    1)    {    if    (maximalOrder    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
246	[BUG]  [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  if  (maximalOrder  <  2)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  maximalOrder)  {  if  (maximalOrder  <  2)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  maximalOrder)  {  if  (maximalOrder  <  2)  {	  if    (maximalOrder    <    1)    {    if    (maximalOrder    <    2)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
247	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    absoluteAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
248	[BUG]  [BUGGY]  this.allowed  =  ReductionFACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  illegal  start  of  expression  [FE]        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  ReductionFACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  ReductionFACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValu    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
249	[BUG]  [BUGGY]  this.allowed  =  REDUCTION_FACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  illegal  start  of  expression  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  REDUCTION_FACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  REDUCTION_FACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValu    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
250	[BUG]  [BUGGY]  this.allowed  =  ReductionFACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy  [CE]  illegal  start  of  expression  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  ReductionFACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  ReductionFACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValu    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
251	[BUG]  [BUGGY]  this.allowed  =  absoluteAccuracy;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  absoluteAccuracy;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  absoluteAccuracy;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValu    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
252	[BUG]  [BUGGY]  if(maximalOrder  >=  0)  {  If(maximalOrder  >=  0)  {  [CE]  ';'  expected  [FE]    NumberIsTooSmallException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  >=  0)  {  If(maximalOrder  >=  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    >=    0)    {    If(maximalOrder  >=  0)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
253	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ABSOLUTE_ACCURACY;  this.allowed  =  AllowedSolution.ANY_SIDE;  [CE]  illegal  start  of  type  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ABSOLUTE_ACCURACY;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ABSOLUTE_ACCURACY;  this.allowed  =  AllowedSolution.ANY_SIDE;	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
254	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
255	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
256	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
257	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    >=    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	27	None	replace
258	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >>  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >>  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >>  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    >=    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	27	None	replace
259	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  ==  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ';'  expected  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  ==  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  ==  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    maximalOrder    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ';'  expected	56	None	replace
260	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  ==?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  ==?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  ==?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    maximalOrder    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
261	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  +  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  +  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  +  DEFAULT_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    relativeAccuracy    +    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
262	[BUG]  [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTo  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTo  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTo	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
263	[BUG]  [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsToo  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsToo  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsToo	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
264	[BUG]  [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  Number  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  Number  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  Number	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
265	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
266	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
267	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(MAXIMAL_AGING);  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
268	[BUG]  [BUGGY]  this.maximalOrder  =  absoluteOrder  +  1;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  absoluteOrder  +  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  absoluteOrder  +  1;	  this.maximalOrder    =    absoluteOrder;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
269	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_ALLOW  +  1;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_ALLOW  +  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_ALLOW  +  1;	  this.allowed    =    AllowedSolution.ANY_ALLOW;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
270	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_ALLOW  +  absoluteAccuracy;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_ALLOW  +  absoluteAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_ALLOW  +  absoluteAccuracy;	  this.allowed    =    AllowedSolution.ANY_ALLOW;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
271	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
272	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ';'  expected  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ';'  expected	9	None	replace
273	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	9	None	replace
274	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(relativeAccuracy,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(relativeAccuracy,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(relativeAccuracy,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_ACCURATE_FACTOR):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
275	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ACCURATE_FACTOR):  Integer.toString(RELATIVE_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_ACCURATE_FACTOR):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
276	[BUG]  [BUGGY]  [FE]  NumberIsTooSmallException  [FE]    AssertionError    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder!=  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	if(maximalOrder!=  0)  {	  if(maximalOrder    ==    0)    {    	compilable	  [FE]  NumberIsTooSmallException  	19	4	replace
277	[BUG]  [BUGGY]  if(maximalOrder!=  0)  {  [FE]  NumberIsTooSmallException  [FE]    AssertionError    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder!=  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder!=  0)  {	  if(maximalOrder    ==    0)    {    	compilable	  [FE]  NumberIsTooSmallException  	19	4	replace
278	[BUG]  [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_SIDE  +  absoluteAccuracy;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_SIDE  +  absoluteAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelativeAccuracy.ANY_SIDE  +  absoluteAccuracy;	  this.allowed    =    RelativeAccuracy.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
279	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  allowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [CE]  cannot  find  symbol  allowedSolution  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  allowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  allowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  cannot  find  symbol  allowedSolution	41	None	add
280	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.relativeAccuracy  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.relativeAccuracy  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    this.relativeAccuracy  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	41	None	add
281	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
282	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
283	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
284	[BUG]  [BUGGY]  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(  [CE]  illegal  start  of  expression  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
285	[BUG]  [BUGGY]  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException  [CE]  '('  or  '['  expected  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  '('  or  '['  expected	65	None	replace
286	[BUG]  [BUGGY]  [FE]  NumberIsTooSmallException  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	compilable	  [FE]  NumberIsTooSmallException  	65	3	replace
287	[BUG]  [BUGGY]  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [FE]  NumberIsTooSmallException  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	compilable	  [FE]  NumberIsTooSmallException  	65	3	replace
288	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
289	[BUG]  [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING)  {  this.allowed  =  AllowedSolution.A  [CE]  illegal  start  of  expression  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING)  {  this.allowed  =  AllowedSolution.A  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING)  {  this.allowed  =  AllowedSolution.A	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
290	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING)  {  this.allowed  =  AllowedSolution.  [CE]  illegal  start  of  expression  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING)  {  this.allowed  =  AllowedSolution.  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING)  {  this.allowed  =  AllowedSolution.	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
291	[BUG]  [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING)  {  this.allowed  =  AllowedSolution.  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING)  {  this.allowed  =  AllowedSolution.  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  DEFAULT_MAXIMAL_AGING)  {  this.allowed  =  AllowedSolution.	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
292	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_ACCURACY):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_ACCURACY):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_ACCURACY):  Integer.toString(RELATIVE_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
293	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  REDUCTION_FACTOR;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  maximalOrder  +  REDUCTION_FACTOR;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  maximalOrder  +  REDUCTION_FACTOR;	  this.maximalOrder    =    maximalOrder    +    relativeAccuracy;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
294	[BUG]  [BUGGY]  this.allowed  =  ReductionFACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  ReductionFACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  ReductionFACTOR;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    maximalOrder);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
295	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    maximalOrder);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
296	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy?  DEFAULT_ABSOLUTE_ACCURACY  :  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy?  DEFAULT_ABSOLUTE_ACCURACY  :  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy?  DEFAULT_ABSOLUTE_ACCURACY  :  DEFAULT_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    RELATIVE_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
297	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    >=    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
298	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    >=    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
299	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.relativeAccuracy  =  absoluteAccuracy;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.relativeAccuracy  =  absoluteAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.relativeAccuracy  =  absoluteAccuracy;	  	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	67	None	add
300	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;	  	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	67	None	add
301	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [CE]  incompatible  types  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.maximalOrder  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  incompatible  types	67	None	add
302	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    ==    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
303	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_FACTOR):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    ==    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
304	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    ==    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
305	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
306	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(relativeAccuracy,  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(relativeAccuracy,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(relativeAccuracy,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
307	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    0?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
308	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    0?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
309	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(RELATIVE_ABSOLUTE_ACCURACY):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(RELATIVE_ABSOLUTE_ACCURACY):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(RELATIVE_ABSOLUTE_ACCURACY):  Integer.toString(RELATIVE_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    0?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
310	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(RELATIVE_ACCURACY):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(RELATIVE_ACCURACY):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(RELATIVE_ACCURACY):  Integer.toString(RELATIVE_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    0?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
311	[BUG]  [BUGGY]  if(maximalOrder  <  =  1)  {  if  (maximalOrder  >=  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  <  =  1)  {  if  (maximalOrder  >=  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder  <  =  1)  {  if  (maximalOrder  >=  1)  {	  if    (maximalOrder    <    1)    {    if    (maximalOrder    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
312	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_ORDER):    Integer.toString(DEFAULT_MA    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
313	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MA	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_ORDER):    Integer.toString(DEFAULT_MA    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  MAXIMAL_AGING  ||  relativeAccuracy  >  MAXIMAL_AGING)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	if(relativeAccuracy  >  MAXIMAL_AGING  ||  relativeAccuracy  >  MAXIMAL_AGING)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    >=    0)    {    	compilable	  [FE]  AssertionError  	31	2	replace
315	[BUG]  [BUGGY]  if(relativeAccuracy  >  MAXIMAL_AGING  ||  relativeAccuracy  >  MAXIMAL_AGING)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  MAXIMAL_AGING  ||  relativeAccuracy  >  MAXIMAL_AGING)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  MAXIMAL_AGING  ||  relativeAccuracy  >  MAXIMAL_AGING)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    >=    0)    {    	compilable	  [FE]  AssertionError  	31	2	replace
316	[BUG]  [BUGGY]  if(relativeAccuracy  >  MAXIMAL_AGING)  {  if  (maximalOrder  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  MAXIMAL_AGING)  {  if  (maximalOrder  <  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  MAXIMAL_AGING)  {  if  (maximalOrder  <  0)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
317	[BUG]  [BUGGY]  if(relativeAccuracy  >  MAXIMAL_AGING  ||  relativeAccuracy  <  =  MAXIMAL_AGING)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  MAXIMAL_AGING  ||  relativeAccuracy  <  =  MAXIMAL_AGING)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  MAXIMAL_AGING  ||  relativeAccuracy  <  =  MAXIMAL_AGING)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
318	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [CE]  illegal  start  of  expression  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
319	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
320	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	26	None	replace
321	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	26	None	replace
322	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
323	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  *  functionValueAccuracy;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  *  functionValueAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  *  functionValueAccuracy;	  this.relativeAccuracy    =    relativeAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
324	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  +  maximumOrder;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  +  maximumOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  +  maximumOrder;	  this.relativeAccuracy    =    relativeAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
325	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
326	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
327	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
328	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
329	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
330	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
331	[BUG]  [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIs  [CE]  illegal  start  of  expression  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIs  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIs	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    0,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
332	[BUG]  [BUGGY]  if(maximalOrder  ==  0)  {  if(maximalOrder  ==  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  ==  0)  {  if(maximalOrder  ==  2)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    ==    0)    {    if(maximalOrder  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
333	[BUG]  [BUGGY]  If  (maximalOrder  <  1)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  If  (maximalOrder  <  1)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	If  (maximalOrder  <  1)  {	  if    (maximalOrder    <    0)    {    If    (maximalOrder    <    0)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
334	[BUG]  [BUGGY]  If  (maximalOrder  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  If  (maximalOrder  ==  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	If  (maximalOrder  ==  0)  {	  if    (maximalOrder    <    0)    {    If    (maximalOrder    <    0)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
335	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  REDUCTION_FACTOR?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
336	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_STRING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [CE]  illegal  start  of  expression  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_STRING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_STRING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
337	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	69	1	add
338	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	69	1	add
339	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [CE]  incompatible  types  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.maximalOrder  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  incompatible  types	69	None	add
340	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;	  	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	69	None	add
341	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.relativeAccuracy  =  AllowedSolution.ANY_SIDE;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.relativeAccuracy  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.relativeAccuracy  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	69	None	add
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  MAXIMAL_AGING)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	if(relativeAccuracy  >  MAXIMAL_AGING)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    <    0)    {    	compilable	  [FE]  AssertionError  	29	2	replace
343	[BUG]  [BUGGY]  if(relativeAccuracy  >  MAXIMAL_AGING)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  MAXIMAL_AGING)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  MAXIMAL_AGING)  {	  if    (maximalOrder    <    0)    {    if    (maximalOrder    <    0)    {    	compilable	  [FE]  AssertionError  	29	2	replace
344	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximumOrder);  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximumOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximumOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    maximalOrder);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
345	[BUG]  [BUGGY]  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(  [CE]  illegal  start  of  expression  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
346	[BUG]  [BUGGY]  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException  [CE]  '('  or  '['  expected  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    	non-compiled	[CE]  '('  or  '['  expected	68	None	replace
347	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [CE]  cannot  find  symbol  MAXIMAL_AGING  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.maximalOrder  =  Integer.MAXIMAL_AGING;	  	non-compiled	[CE]  cannot  find  symbol  MAXIMAL_AGING	64	None	add
348	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	64	None	add
349	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.maximalOrder  =  Integer.parseInt(relativeAccuracy);  [CE]  no  suitable  method  found  for  parseInt(double)  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.maximalOrder  =  Integer.parseInt(relativeAccuracy);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.maximalOrder  =  Integer.parseInt(relativeAccuracy);	  	non-compiled	[CE]  no  suitable  method  found  for  parseInt(double)	64	None	add
350	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;  [CE]  incompatible  types  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;	  	non-compiled	[CE]  incompatible  types	64	None	add
351	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(relativeAccuracy,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(relativeAccuracy,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(relativeAccuracy,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_ACCURATE_FACTOR):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
352	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_ACCURATE_FACTOR,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_ACCURATE_FACTOR,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(RELATIVE_ACCURATE_FACTOR,	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_ACCURATE_FACTOR):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
353	[BUG]  [BUGGY]  this.allowed  =  Integer.MAX_VALUE  /  2.0;  [CE]  illegal  start  of  type  [FE]        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAX_VALUE  /  2.0;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAX_VALUE  /  2.0;	  this.allowed    =    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
354	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(maximumOrder);  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(maximumOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(maximumOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
355	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    &&    relativeAccuracy    ==    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
356	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >>  DEFAULT_ABSOLUTE_ACCURACY  &&  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    &&    relativeAccuracy    ==    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
357	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	9	None	replace
358	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  absoluteAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_ORDER):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    absoluteAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
359	[BUG]  [BUGGY]  this.relativeAccuracy  -=  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  -=  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  -=  DEFAULT_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
360	[BUG]  [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy  [CE]  illegal  start  of  expression  [FE]        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    else    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValu    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
361	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  /  totalOrder;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  maximalOrder  /  totalOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  maximalOrder  /  totalOrder;	  this.maximalOrder    =    maximalOrder    /    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
362	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  /  DEFAULT_MAXIMAL_ORDER;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  =  maximalOrder  /  DEFAULT_MAXIMAL_ORDER;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  =  maximalOrder  /  DEFAULT_MAXIMAL_ORDER;	  this.maximalOrder    =    maximalOrder    /    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
363	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >=  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  ==  DEFAULT_MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    ==    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
364	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING  |  Integer.MAXIMAL_VALUE;  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING  |  Integer.MAXIMAL_VALUE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAXIMAL_AGING  |  Integer.MAXIMAL_VALUE;	  this.allowed    =    Integer.MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
365	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY  ||  relativeAccuracy  >  MAXIMAL_AGING;	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
366	[BUG]  [BUGGY]  if(relativeAccuracy  <  0,  true)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [CE]  ')'  expected  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  <  0,  true)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  <  0,  true)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  ')'  expected	87	None	replace
367	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  +  functionValueAccuracy;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  +  functionValueAccuracy;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  +  functionValueAccuracy;	  this.relativeAccuracy    =    relativeAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
368	[BUG]  [BUGGY]  if(maximalOrder  ==  0)  {  if(minimalOrder  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(maximalOrder  ==  0)  {  if(minimalOrder  ==  0)  {  [BUGGY]      throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(maximalOrder    ==    0)    {    if(minimalOrder  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
369	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
370	[BUG]  [BUGGY]  double  maximalOrder  =  relativeAccuracy.getMinimumOrder();  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  double  maximalOrder  =  relativeAccuracy.getMinimumOrder();  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	double  maximalOrder  =  relativeAccuracy.getMinimumOrder();	  int    maximalOrder    =    relativeAccuracy.getMinimumOrder();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
371	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionVal  [CE]  illegal  start  of  expression  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionVal  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionVal	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
372	[BUG]  [BUGGY]  this.allowed  =  allowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [CE]  illegal  start  of  expression  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  allowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  allowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValu	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
373	[BUG]  [BUGGY]  this.allowed  =  allowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionVal  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  allowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionVal  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  allowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionVal	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
374	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    maximalOrder    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
375	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING  [CE]  ')'  expected  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING    	non-compiled	[CE]  ')'  expected	26	None	replace
376	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    ==    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
377	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
378	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
379	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximalOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximalOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximalOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
380	[BUG]  [BUGGY]  this.allowed  =  allowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  allowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  allowedSolution.ANY_ALLOWED;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    maximalOrder);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
381	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAXIMAL_AGING;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    absoluteAccuracy,    maximalOrder);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
382	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(relativeAccuracy,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(relativeAccuracy,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(relativeAccuracy,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
383	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
384	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	67	None	add
385	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [CE]  cannot  find  symbol  MAXIMAL_AGING  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;	  	non-compiled	[CE]  cannot  find  symbol  MAXIMAL_AGING	67	None	add
386	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [CE]  cannot  find  symbol  MAXIMAL_AGING  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.maximalOrder  =  Integer.MAXIMAL_AGING;	  	non-compiled	[CE]  cannot  find  symbol  MAXIMAL_AGING	67	None	add
387	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  Integer.parseInt(relativeAccuracy);  [CE]  no  suitable  method  found  for  parseInt(double)  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  Integer.parseInt(relativeAccuracy);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    this.maximalOrder  =  Integer.parseInt(relativeAccuracy);	  	non-compiled	[CE]  no  suitable  method  found  for  parseInt(double)	67	None	add
388	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY);	  this.relativeAccuracy    =    relativeAccuracy    <    0?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
389	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  0?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    0?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
390	[BUG]  [BUGGY]  this.allowed  =  InternalSolution.ANY_SIDE;  [CE]  illegal  start  of  type  [FE]        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  InternalSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  InternalSolution.ANY_SIDE;	  this.allowed    =    RelatedSolution.ANY_SIDE;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
391	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                      TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(RELATIVE_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
392	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  Integer.toString(RELATIVE_ABSOLUTE_ACCURACY):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    <    =    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
393	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(maximumOrder);  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(maximumOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(maximumOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
394	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
395	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  expression  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
396	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [CE]  incompatible  types  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;	  	non-compiled	[CE]  incompatible  types	41	None	add
397	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [CE]  incompatible  types  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;	  	non-compiled	[CE]  incompatible  types	41	None	add
398	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;  [CE]  incompatible  types  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    this.maximalOrder  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;	  	non-compiled	[CE]  incompatible  types	41	None	add
399	[BUG]  [BUGGY]  this.maximalOrder  -=  relativeAccuracy  +  1;  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  -=  relativeAccuracy  +  1;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  -=  relativeAccuracy  +  1;	  this.maximalOrder    -=    relativeAccuracy;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
400	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    >=    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
401	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [CE]  illegal  start  of  type  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
402	[BUG]  [BUGGY]  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException(max  [CE]  ')'  expected  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException(max  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException(max	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(maximalOrder,    2,    true);    }    	non-compiled	[CE]  ')'  expected	68	None	replace
403	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [CE]  illegal  start  of  type  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  2,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    2,    true);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
404	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(relativeAccuracy,  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(relativeAccuracy,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(RELATIVE_MAXIMAL_AGING):  Integer.toString(relativeAccuracy,	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
405	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy?  RELATIVE_ABSOLUTE_ACCURACY  :  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy?  RELATIVE_ABSOLUTE_ACCURACY  :  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy?  RELATIVE_ABSOLUTE_ACCURACY  :  DEFAULT_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    RELATIVE_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
406	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy?  DEFAULT_ABSOLUTE_ACCURACY  :  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy?  DEFAULT_ABSOLUTE_ACCURACY  :  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy?  DEFAULT_ABSOLUTE_ACCURACY  :  DEFAULT_ABSOLUTE_ACCURACY;	  this.relativeAccuracy    =    RELATIVE_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
407	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ALLOWED;  [CE]  illegal  start  of  type  [FE]        TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ALLOWED;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ALLOWED;	  this.allowed    =    AllowedSolution.ANY_ALLOWED;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
408	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_ORDER  [CE]  ')'  expected  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_ORDER  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(DEFAULT_MAXIMAL_ORDER	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_ORDER):    Integer.toString(DEFAULT_MA    	non-compiled	[CE]  ')'  expected	58	None	replace
409	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  >  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
410	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  [CE]  illegal  start  of  type  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
411	[BUG]  [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(max  [CE]  ')'  expected  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(max  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(max	          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
412	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	add	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	69	1	add
413	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    if(maximalOrder  <  1)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }	  	compilable	  [FE]  TooManyEvaluationsException  	69	1	add
414	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [CE]  cannot  find  symbol  MAXIMAL_AGING  [FE]      TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.maximalOrder  =  Integer.MAXIMAL_AGING;	  	non-compiled	[CE]  cannot  find  symbol  MAXIMAL_AGING	69	None	add
415	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]        TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  maximalOrder;	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	69	None	add
416	[BUG]  [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [CE]  cannot  find  symbol  MAXIMAL_AGING  [FE]          TooManyEvaluationsException    [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]          this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;  if(maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  1,  true);  }  this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	                this.allowed        =        AllowedSolution.ANY_SIDE;        this.allowed    =    AllowedSolution.ANY_SIDE;    if(maximalOrder    <    2)    {    throw    new    NumberIsTooSmallException(relativeAccuracy,    1,    true);    }    this.allowed  =  AllowedSolution.ANY_SIDE;  this.maximalOrder  =  Integer.MAXIMAL_AGING;	  	non-compiled	[CE]  cannot  find  symbol  MAXIMAL_AGING	69	None	add
417	[BUG]  [BUGGY]  this.allowed  =  Integer.parseInt(relativeAccuracy);  [CE]  illegal  start  of  type  [FE]          TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.parseInt(relativeAccuracy);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.parseInt(relativeAccuracy);	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
418	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_ORDER;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  Integer.MAXIMAL_ORDER;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  Integer.MAXIMAL_ORDER;	          this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY    ||    relativeAccuracy    >    DEFAULT_MAXIMAL_AGING)    {    this.allowed    =    AllowedSolution.ANY_SIDE;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
419	[BUG]  [BUGGY]  long  maximalOrder  =  absoluteAccuracy.getMaximumOrder();  [CE]  illegal  start  of  type  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  long  maximalOrder  =  absoluteAccuracy.getMaximumOrder();  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	long  maximalOrder  =  absoluteAccuracy.getMaximumOrder();	  int    maximalOrder    =    absoluteAccuracy.getMaximumOrder();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
420	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(maximumOrder,  DEFAULT_MAXIMAL_AGING);  [CE]  illegal  start  of  expression  [FE]                TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(maximumOrder,  DEFAULT_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(maximumOrder,  DEFAULT_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    maximalOrder);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
421	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(relativeAccuracy):  Integer.toString(MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(relativeAccuracy):    Integer.toString(DEFAULT_MAXIMAL_AGING,    maximalOrder);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
422	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [CE]  illegal  start  of  type  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(DEFAULT_MAXIMAL_AGING,  maximalOrder);	  this.relativeAccuracy    =    relativeAccuracy    <    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    maximalOrder);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
423	[BUG]  [BUGGY]  this.allowed  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.allowed  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.allowed  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;	  this.allowed    =    maximalOrder;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
424	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY,  [CE]  illegal  start  of  expression  [FE]                  TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  ==?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  ==?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_ABSOLUTE_ACCURACY,	  this.relativeAccuracy    =    relativeAccuracy    >=?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
425	[BUG]  [BUGGY]  this.relativeAccuracy  =  maximalOrder  >>?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [CE]  illegal  start  of  expression  [FE]                    TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  maximalOrder  >>?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  maximalOrder  >>?  Integer.toString(DEFAULT_MAXIMAL_AGING):  Integer.toString(DEFAULT_MAXIMAL_AGING,	  this.relativeAccuracy    =    relativeAccuracy    >=?    Integer.toString(DEFAULT_MAXIMAL_AGING):    Integer.toString(DEFAULT_MAXIMAL_AGING,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
426	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [CE]  illegal  start  of  expression  [FE]              TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(RELATIVE_MAXIMAL_AGING);  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.relativeAccuracy  =  relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY?  Integer.toString(maximumOrder):  Integer.toString(RELATIVE_MAXIMAL_AGING);	  this.relativeAccuracy    =    relativeAccuracy    <    =    DEFAULT_ABSOLUTE_ACCURACY?    Integer.toString(RELATIVE_MAXIMAL_AGING):    Integer.toString(RELATIVE_MAXIMAL_AGING);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
427	[BUG]  [BUGGY]  this.maximalOrder  -=  MAXIMAL_AGING;  [CE]  illegal  start  of  type  [FE]            TooManyEvaluationsException      [CONTEXT]      public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);      [BUGGY]  this.maximalOrder  -=  MAXIMAL_AGING;  [BUGGY]      if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.4472135954999579	125	125	1	replace	this.maximalOrder  -=  MAXIMAL_AGING;	  this.maximalOrder    =    MAXIMAL_AGING;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
