bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	3	None	add
2	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	3	None	add
3	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	3	None	add
4	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_AGING;  }  [CE]  cannot  find  symbol  DEFAULT_MAXIMAL_AGING  [FE]          AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_AGING;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_AGING;  }	  	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAXIMAL_AGING	3	None	add
5	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  maximumOrder  =  DEFAULT_ABSOLUTE_ACCURACY;  }  [CE]  cannot  find  symbol  maximumOrder  [FE]            AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  maximumOrder  =  DEFAULT_ABSOLUTE_ACCURACY;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    if(relativeAccuracy  ==  DEFAULT_MAXIMAL_ORDER)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  maximumOrder  =  DEFAULT_ABSOLUTE_ACCURACY;  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	3	None	add
6	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	add	        this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	7	1	add
7	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  this.allowed  =  AllowedSolution.ANY_SIDE;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    this.allowed  =  AllowedSolution.ANY_SIDE;	  	compilable	  [FE]  TooManyEvaluationsException  	7	1	add
8	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [CE]  incomparable  types:  double  and  <null>  [FE]      TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	7	None	add
9	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  incomparable  types:  double  and  <null>  [FE]        TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	7	None	add
10	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  System.arraycopy(relativeAccuracy,  0,  this.allowed,  0,  maximumOrder);  }  [CE]  incomparable  types:  double  and  <null>  [FE]          TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  System.arraycopy(relativeAccuracy,  0,  this.allowed,  0,  maximumOrder);  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  System.arraycopy(relativeAccuracy,  0,  this.allowed,  0,  maximumOrder);  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	7	None	add
11	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  System.arraycopy(relativeAccuracy,  0,  this.allowed,  0,  maximalOrder);  }  [CE]  incomparable  types:  double  and  <null>  [FE]            TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  System.arraycopy(relativeAccuracy,  0,  this.allowed,  0,  maximalOrder);  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  ==  null)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  System.arraycopy(relativeAccuracy,  0,  this.allowed,  0,  maximalOrder);  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	7	None	add
12	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  -  2;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	add	this.maximalOrder  =  maximalOrder  -  2;	  this.maximalOrder    =    maximalOrder    -    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	3	replace
13	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  -  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  -  2;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  maximalOrder  -  2;	  this.maximalOrder    =    maximalOrder    -    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	3	replace
14	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  /  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	add	this.maximalOrder  =  maximalOrder  /  1;	  this.maximalOrder    =    maximalOrder    -    1;    	compilable	  [FE]  TooManyEvaluationsException  	20	1	replace
15	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  /  1;  [FE]  TooManyEvaluationsException  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  /  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  maximalOrder  /  1;	  this.maximalOrder    =    maximalOrder    -    1;    	compilable	  [FE]  TooManyEvaluationsException  	20	1	replace
16	[BUG]  [BUGGY]  this.maximalOrder  =  maximumOrder  -  2;  [CE]  cannot  find  symbol  maximumOrder  [FE]        AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximumOrder  -  2;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  maximumOrder  -  2;	  this.maximalOrder    =    maximalOrder    -    1;    	non-compiled	[CE]  cannot  find  symbol  maximumOrder	20	None	replace
17	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_ABSOLUTE_ACCURACY  |  DEFAULT_MAXIMAL_AGING;  [CE]  cannot  find  symbol  DEFAULT_MAXIMAL_AGING  [FE]          TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_ABSOLUTE_ACCURACY  |  DEFAULT_MAXIMAL_AGING;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  DEFAULT_ABSOLUTE_ACCURACY  |  DEFAULT_MAXIMAL_AGING;	  this.maximalOrder    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAXIMAL_AGING	2	None	replace
18	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_ABSOLUTE_ACCURACY  /  DEFAULT_MAXIMAL_AGING;  [CE]  cannot  find  symbol  DEFAULT_MAXIMAL_AGING  [FE]            TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_ABSOLUTE_ACCURACY  /  DEFAULT_MAXIMAL_AGING;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  DEFAULT_ABSOLUTE_ACCURACY  /  DEFAULT_MAXIMAL_AGING;	  this.maximalOrder    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAXIMAL_AGING	2	None	replace
19	[BUG]  [BUGGY]  this.relativeAccuracy  =  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]        TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.relativeAccuracy  =  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.relativeAccuracy  =  DEFAULT_ABSOLUTE_ACCURACY;	      this.relativeAccuracy    =    relativeAccuracy;    	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	6	None	replace
20	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]          TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.relativeAccuracy  =  relativeAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;	      this.relativeAccuracy    =    relativeAccuracy;    	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	6	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  2;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	add	this.maximalOrder  =  maximalOrder  +  2;	  this.maximalOrder    =    maximalOrder    +    1;    	compilable	  [FE]  AssertionError  	18	2	replace
22	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  2;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  maximalOrder  +  2;	  this.maximalOrder    =    maximalOrder    +    1;    	compilable	  [FE]  AssertionError  	18	2	replace
23	[BUG]  [BUGGY]  this.maximalOrder  =  maximumOrder  +  2;  [CE]  cannot  find  symbol  maximumOrder  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximumOrder  +  2;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  maximumOrder  +  2;	  this.maximalOrder    =    maximalOrder    +    1;    	non-compiled	[CE]  cannot  find  symbol  maximumOrder	18	None	replace
24	[BUG]  [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  this.maximalOrder  =  MAXIMAL_AGING;  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  this.maximalOrder  =  MAXIMAL_AGING;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    MAXIMAL_AGING;    this.maximalOrder  =  MAXIMAL_AGING;	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	13	None	add
25	[BUG]  [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    MAXIMAL_AGING;    if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	13	None	add
26	[BUG]  [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    MAXIMAL_AGING;    if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	13	None	add
27	[BUG]  [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  super.setRelativeAccuracy(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  super.setRelativeAccuracy(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    MAXIMAL_AGING;    if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  super.setRelativeAccuracy(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	13	None	add
28	[BUG]  [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximumOrder);  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximumOrder);  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    MAXIMAL_AGING;    if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  MAXIMAL_AGING;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximumOrder);  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	13	None	add
29	[BUG]  [BUGGY]  this.maximalOrder  =  MaximumOrder.MAXIMAL_AGING;  [CE]  cannot  find  symbol  MaximumOrder  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MaximumOrder.MAXIMAL_AGING;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  MaximumOrder.MAXIMAL_AGING;	  this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    	non-compiled	[CE]  cannot  find  symbol  MaximumOrder	4	None	replace
30	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  this.maximalOrder  =  maximalOrder  +  1;  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  this.maximalOrder  =  maximalOrder  +  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    +    1;    this.maximalOrder  =  maximalOrder  +  1;	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	17	None	add
31	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  this.maximalOrder  =  maximumOrder  +  1;  [CE]  cannot  find  symbol  maximumOrder  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  this.maximalOrder  =  maximumOrder  +  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    +    1;    this.maximalOrder  =  maximumOrder  +  1;	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	17	None	add
32	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  This.maximalOrder  =  maximalOrder  +  1;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  This.maximalOrder  =  maximalOrder  +  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    +    1;    This.maximalOrder  =  maximalOrder  +  1;	  	non-compiled	[CE]  cannot  find  symbol  This	17	None	add
33	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  this.maximalOrder  =  maximalOrder  +  2;  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  this.maximalOrder  =  maximalOrder  +  2;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    +    1;    this.maximalOrder  =  maximalOrder  +  2;	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	17	None	add
34	[BUG]  [BUGGY]  this.relativeAccuracy  =  functionValueAccuracy;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]              TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.relativeAccuracy  =  functionValueAccuracy;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.relativeAccuracy  =  functionValueAccuracy;	      this.relativeAccuracy    =    absoluteAccuracy;    	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	10	None	replace
35	[BUG]  [BUGGY]  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  maximumOrder);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  maximumOrder);  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  maximumOrder);	      super(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	12	None	replace
36	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  functionValueAccuracy;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]                TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  functionValueAccuracy;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.relativeAccuracy  =  absoluteAccuracy  +  functionValueAccuracy;	      this.relativeAccuracy    =    relativeAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	11	None	replace
37	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  *  functionValueAccuracy;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]                  TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  *  functionValueAccuracy;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.relativeAccuracy  =  absoluteAccuracy  *  functionValueAccuracy;	      this.relativeAccuracy    =    relativeAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	11	None	replace
38	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  /  functionValueAccuracy;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]                    TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  /  functionValueAccuracy;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.relativeAccuracy  =  absoluteAccuracy  /  functionValueAccuracy;	      this.relativeAccuracy    =    relativeAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	11	None	replace
39	[BUG]  [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  relativeAccuracy;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]                      TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.relativeAccuracy  =  absoluteAccuracy  +  relativeAccuracy;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.relativeAccuracy  =  absoluteAccuracy  +  relativeAccuracy;	      this.relativeAccuracy    =    relativeAccuracy    +    functionValueAccuracy;    	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	11	None	replace
40	[BUG]  [BUGGY]  this.maximalOrder  =  0;  this.maximalOrder  =  0;  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  this.maximalOrder  =  0;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    this.maximalOrder  =  0;	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	15	None	add
41	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  for(int  i  =  0,  maximalOrder  =  relativeAccuracy;  i  <  maximalOrder;  ++i)  {  this.maximalOrder  =  0;  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  for(int  i  =  0,  maximalOrder  =  relativeAccuracy;  i  <  maximalOrder;  ++i)  {  this.maximalOrder  =  0;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  ==  null)  {  for(int  i  =  0,  maximalOrder  =  relativeAccuracy;  i  <  maximalOrder;  ++i)  {  this.maximalOrder  =  0;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
42	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  for(int  i  =  0,  maximalOrder  =  relativeAccuracy;  i  <  maximumOrder;  ++i)  {  this.maximalOrder  =  0;  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  for(int  i  =  0,  maximalOrder  =  relativeAccuracy;  i  <  maximumOrder;  ++i)  {  this.maximalOrder  =  0;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  ==  null)  {  for(int  i  =  0,  maximalOrder  =  relativeAccuracy;  i  <  maximumOrder;  ++i)  {  this.maximalOrder  =  0;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
43	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  0;  }  else  {  maximumOrder  =  DEFAULT_MAXIMAL_AGING;  }  [CE]  incomparable  types:  double  and  <null>  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  0;  }  else  {  maximumOrder  =  DEFAULT_MAXIMAL_AGING;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  ==  null)  {  this.maximalOrder  =  0;  }  else  {  maximumOrder  =  DEFAULT_MAXIMAL_AGING;  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	15	None	add
44	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  for(int  i  =  0,  maximalOrder  =  relativeAccuracy;  i  <  maximalOrder;  ++i)  {  maximumOrder  =  absoluteAccuracy;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  for(int  i  =  0,  maximalOrder  =  relativeAccuracy;  i  <  maximalOrder;  ++i)  {  maximumOrder  =  absoluteAccuracy;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  ==  null)  {  for(int  i  =  0,  maximalOrder  =  relativeAccuracy;  i  <  maximalOrder;  ++i)  {  maximumOrder  =  absoluteAccuracy;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
45	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_VALUE;  [CE]  cannot  find  symbol  MAXIMAL_VALUE  [FE]            TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.allowed  =  Integer.MAXIMAL_VALUE;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.allowed  =  Integer.MAXIMAL_VALUE;	      this.allowed    =    Integer.MAXIMAL_AGING;    	non-compiled	[CE]  cannot  find  symbol  MAXIMAL_VALUE	9	None	replace
46	[BUG]  [BUGGY]  this.allowed  =  Integer.MIN_VALUE;  [CE]  incompatible  types  [FE]              TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.allowed  =  Integer.MIN_VALUE;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.allowed  =  Integer.MIN_VALUE;	      this.allowed    =    Integer.MAXIMAL_AGING;    	non-compiled	[CE]  incompatible  types	9	None	replace
47	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL_ORDER;  [CE]  cannot  find  symbol  MAXIMAL_ORDER  [FE]                TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.allowed  =  Integer.MAXIMAL_ORDER;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.allowed  =  Integer.MAXIMAL_ORDER;	      this.allowed    =    Integer.MAXIMAL_AGING;    	non-compiled	[CE]  cannot  find  symbol  MAXIMAL_ORDER	9	None	replace
48	[BUG]  [BUGGY]  this.allowed  =  Integer.MAXIMAL;  [CE]  cannot  find  symbol  MAXIMAL  [FE]                  TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.allowed  =  Integer.MAXIMAL;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.allowed  =  Integer.MAXIMAL;	      this.allowed    =    Integer.MAXIMAL_AGING;    	non-compiled	[CE]  cannot  find  symbol  MAXIMAL	9	None	replace
49	[BUG]  [BUGGY]  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [CE]  cannot  find  symbol  MAXIMAL_AGING  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  Integer.MAXIMAL_AGING;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  Integer.MAXIMAL_AGING;	  this.maximalOrder    =    0;    	non-compiled	[CE]  cannot  find  symbol  MAXIMAL_AGING	16	None	replace
50	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  this.maximalOrder  =  maximalOrder  -  1;  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  this.maximalOrder  =  maximalOrder  -  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    -    1;    this.maximalOrder  =  maximalOrder  -  1;	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	19	None	add
51	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  This.maximalOrder  =  maximalOrder  -  1;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  This.maximalOrder  =  maximalOrder  -  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    -    1;    This.maximalOrder  =  maximalOrder  -  1;	  	non-compiled	[CE]  cannot  find  symbol  This	19	None	add
52	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  this.maximalOrder  =  maximumOrder  -  1;  [CE]  cannot  find  symbol  maximumOrder  [FE]        AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  this.maximalOrder  =  maximumOrder  -  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    -    1;    this.maximalOrder  =  maximumOrder  -  1;	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	19	None	add
53	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  this.maximalOrder  =  maximalOrder  -  2;  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  this.maximalOrder  =  maximalOrder  -  2;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    -    1;    this.maximalOrder  =  maximalOrder  -  2;	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	19	None	add
54	[BUG]  [BUGGY]  REDUCTION_FACTOR  =  relativeAccuracy;  [CE]  cannot  assign  a  value  to  final  variable  REDUCTION_FACTOR  [FE]              TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  REDUCTION_FACTOR  =  relativeAccuracy;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	REDUCTION_FACTOR  =  relativeAccuracy;	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  REDUCTION_FACTOR	5	None	replace
55	[BUG]  [BUGGY]  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);	      super(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy,    maximalOrder);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	22	None	replace
56	[BUG]  [BUGGY]  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  DEFAULT_MAXIMAL_AGING);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  DEFAULT_MAXIMAL_AGING);  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  DEFAULT_MAXIMAL_AGING);	      super(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy,    maximalOrder);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	22	None	replace
57	[BUG]  [BUGGY]  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  maximalOrder,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  maximalOrder,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy,  maximalOrder,  DEFAULT_ABSOLUTE_ACCURACY);	      super(relativeAccuracy,    absoluteAccuracy,    functionValueAccuracy,    maximalOrder);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	22	None	replace
58	[BUG]  [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_SIDE;  [CE]  cannot  find  symbol  RelativeAccuracy  [FE]    TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.allowed  =  RelativeAccuracy.ANY_SIDE;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.allowed  =  RelativeAccuracy.ANY_SIDE;	      this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  cannot  find  symbol  RelativeAccuracy	8	None	replace
59	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_ALLOWED;  [CE]  cannot  find  symbol  ANY_ALLOWED  [FE]      TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.allowed  =  AllowedSolution.ANY_ALLOWED;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.allowed  =  AllowedSolution.ANY_ALLOWED;	      this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  cannot  find  symbol  ANY_ALLOWED	8	None	replace
60	[BUG]  [BUGGY]  this.allowed  =  allowedSolution.ANY_SIDE;  [CE]  cannot  find  symbol  allowedSolution  [FE]        TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.allowed  =  allowedSolution.ANY_SIDE;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.allowed  =  allowedSolution.ANY_SIDE;	      this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  cannot  find  symbol  allowedSolution	8	None	replace
61	[BUG]  [BUGGY]  this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]              TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.relativeAccuracy  =  RelativeAccuracy.DEFAULT_ABSOLUTE_ACCURACY;	      	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	5	None	replace
62	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	add	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	compilable	  [FE]  TooManyEvaluationsException  	7	1	add
63	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	compilable	  [FE]  TooManyEvaluationsException  	7	1	add
64	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	7	None	add
65	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  Integer.MAXIMAL_AGING;  }  [CE]  cannot  find  symbol  MAXIMAL_AGING  [FE]        TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  Integer.MAXIMAL_AGING;  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  Integer.MAXIMAL_AGING;  }	  	non-compiled	[CE]  cannot  find  symbol  MAXIMAL_AGING	7	None	add
66	[BUG]  [BUGGY]  [FE]  NumberIsTooSmallException  [FE]          TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	add	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }	  	compilable	  [FE]  NumberIsTooSmallException  	7	2	add
67	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }  [FE]  NumberIsTooSmallException  [FE]          TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  ==  absoluteAccuracy)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }	  	compilable	  [FE]  NumberIsTooSmallException  	7	2	add
68	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  -  1;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [CE]  cannot  find  symbol  maximumOrder  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  -  1;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    -    1;    if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  -  1;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	19	None	add
69	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  -  1;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  cannot  find  symbol  maximumOrder  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  -  1;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    -    1;    if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  -  1;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	19	None	add
70	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  -  1;  }  else  {  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  }  [CE]  cannot  find  symbol  maximumOrder  [FE]        AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  -  1;  }  else  {  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    -    1;    if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  -  1;  }  else  {  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	19	None	add
71	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  if(relativeAccuracy  >  maximumOrder)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  this.maximalOrder  =  maximalOrder  -  1;  [CE]  cannot  find  symbol  maximumOrder  [FE]          AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  -  1;  if(relativeAccuracy  >  maximumOrder)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  this.maximalOrder  =  maximalOrder  -  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    -    1;    if(relativeAccuracy  >  maximumOrder)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  this.maximalOrder  =  maximalOrder  -  1;	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	19	None	add
72	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [CE]  incomparable  types:  double  and  <null>  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  ==  null)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	15	None	add
73	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [CE]  incomparable  types:  double  and  <null>  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  ==  null)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximalOrder);  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	15	None	add
74	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximumOrder);  }  [CE]  incomparable  types:  double  and  <null>  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  null)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximumOrder);  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  ==  null)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  maximumOrder);  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	15	None	add
75	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  absoluteAccuracy)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  ==  absoluteAccuracy)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  ==  absoluteAccuracy)  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  0,  true);  }	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	15	None	add
76	[BUG]  [BUGGY]  this.maximalOrder  =  MaximumOrder.DEFAULT_MAXIMAL_ORDER;  [CE]  cannot  find  symbol  MaximumOrder  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MaximumOrder.DEFAULT_MAXIMAL_ORDER;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  MaximumOrder.DEFAULT_MAXIMAL_ORDER;	  this.maximalOrder    =    MAXIMAL_AGING;    	non-compiled	[CE]  cannot  find  symbol  MaximumOrder	14	None	replace
77	[BUG]  [BUGGY]  this.maximalOrder  =  REDUCTION_FACTOR;  [CE]  possible  loss  of  precision  [FE]            TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  REDUCTION_FACTOR;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  REDUCTION_FACTOR;	  this.maximalOrder    =    maximumOrder;    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
78	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	3	None	add
79	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  [CE]  variable  maximalOrder  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }	  	non-compiled	[CE]  variable  maximalOrder  might  already  have  been  assigned	3	None	add
80	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.allowed  =  allowedSolution.ANY_SIDE;  }  [CE]  cannot  find  symbol  allowedSolution  [FE]        AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.allowed  =  allowedSolution.ANY_SIDE;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.allowed  =  allowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  cannot  find  symbol  allowedSolution	3	None	add
81	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.relativeAccuracy  =  DEFAULT_  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.relativeAccuracy  =  DEFAULT_  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    if(DEFAULT_MAXIMAL_ORDER  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  }  else  {  this.relativeAccuracy  =  DEFAULT_	  	non-compiled	[CE]  ';'  expected	3	None	add
82	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [CE]  possible  loss  of  precision  [FE]          TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  DEFAULT_ABSOLUTE_ACCURACY  +  1;	  this.maximalOrder    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
83	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [CE]  cannot  find  symbol  maximumOrder  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    +    1;    if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	17	None	add
84	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  cannot  find  symbol  maximumOrder  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    +    1;    if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	17	None	add
85	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  }  [CE]  cannot  find  symbol  maximumOrder  [FE]        AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    +    1;    if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	17	None	add
86	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  this.allowed  =  Integer.MAXIMAL_AGING;  }  [CE]  cannot  find  symbol  maximumOrder  [FE]          AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  1;  if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  this.allowed  =  Integer.MAXIMAL_AGING;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    maximalOrder    +    1;    if(relativeAccuracy  >  maximumOrder)  {  this.maximalOrder  =  maximalOrder  +  1;  }  else  {  this.allowed  =  Integer.MAXIMAL_AGING;  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	17	None	add
87	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_ALLOW;  [CE]  cannot  find  symbol  ANY_ALLOW  [FE]    TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.allowed  =  AllowedSolution.ANY_ALLOW;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.allowed  =  AllowedSolution.ANY_ALLOW;	      this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  cannot  find  symbol  ANY_ALLOW	8	None	replace
88	[BUG]  [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.allowed  =  AllowedSolution.ANY_SIDE  +  1;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.allowed  =  AllowedSolution.ANY_SIDE  +  1;	      this.allowed    =    AllowedSolution.ANY_SIDE;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	8	None	replace
89	[BUG]  [BUGGY]  this.maximalOrder  =  maximumOrder  /  1;  [CE]  cannot  find  symbol  maximumOrder  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximumOrder  /  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  maximumOrder  /  1;	  this.maximalOrder    =    maximalOrder    -    1;    	non-compiled	[CE]  cannot  find  symbol  maximumOrder	20	None	replace
90	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  *  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	add	this.maximalOrder  =  maximalOrder  *  1;	  this.maximalOrder    =    maximalOrder    +    1;    	compilable	  [FE]  TooManyEvaluationsException  	18	1	replace
91	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  *  1;  [FE]  TooManyEvaluationsException  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  *  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  maximalOrder  *  1;	  this.maximalOrder    =    maximalOrder    +    1;    	compilable	  [FE]  TooManyEvaluationsException  	18	1	replace
92	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	add	this.maximalOrder  =  1;	  this.maximalOrder    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	4	replace
93	[BUG]  [BUGGY]  this.maximalOrder  =  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  1;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  1;	  this.maximalOrder    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	4	replace
94	[BUG]  [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  This.maximalOrder  =  MAXIMAL_AGING;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  This.maximalOrder  =  MAXIMAL_AGING;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    MAXIMAL_AGING;    This.maximalOrder  =  MAXIMAL_AGING;	  	non-compiled	[CE]  cannot  find  symbol  This	13	None	add
95	[BUG]  [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  this.maxialOrder  =  MAXIMAL_AGING;  [CE]  cannot  find  symbol  maxialOrder  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  this.maxialOrder  =  MAXIMAL_AGING;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    MAXIMAL_AGING;    this.maxialOrder  =  MAXIMAL_AGING;	  	non-compiled	[CE]  cannot  find  symbol  maxialOrder	13	None	add
96	[BUG]  [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  this.minimalOrder  =  MAXIMAL_AGING;  [CE]  cannot  find  symbol  minimalOrder  [FE]        AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  this.minimalOrder  =  MAXIMAL_AGING;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    MAXIMAL_AGING;    this.minimalOrder  =  MAXIMAL_AGING;	  	non-compiled	[CE]  cannot  find  symbol  minimalOrder	13	None	add
97	[BUG]  [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]        TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.relativeAccuracy  =  relativeAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.relativeAccuracy  =  relativeAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY;	      this.relativeAccuracy    =    relativeAccuracy;    	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	6	None	replace
98	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  cannot  find  symbol  maximumOrder  [FE]    TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	7	None	add
99	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.maximumOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  cannot  find  symbol  maximumOrder  [FE]      TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.maximumOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.maximumOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	7	None	add
100	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  cannot  find  symbol  maximumOrder  [FE]        TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	7	None	add
101	[BUG]  [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  Integer.MAXIMAL_AGING;  }  [CE]  cannot  find  symbol  maximumOrder  [FE]          TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]      this.allowed  =  AllowedSolution.ANY_SIDE;  if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  Integer.MAXIMAL_AGING;  }  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	        this.allowed    =    AllowedSolution.ANY_SIDE;    if(relativeAccuracy  >  maximumOrder)  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  else  {  this.allowed  =  Integer.MAXIMAL_AGING;  }	  	non-compiled	[CE]  cannot  find  symbol  maximumOrder	7	None	add
102	[BUG]  [BUGGY]  this.allowed  =  Integer.DEFAULT_MAXIMAL_ORDER;  [CE]  cannot  find  symbol  DEFAULT_MAXIMAL_ORDER  [FE]            TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.allowed  =  Integer.DEFAULT_MAXIMAL_ORDER;  [BUGGY]    this.maximalOrder  =  maximalOrder;  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.allowed  =  Integer.DEFAULT_MAXIMAL_ORDER;	      this.allowed    =    Integer.MAXIMAL_AGING;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAXIMAL_ORDER	9	None	replace
103	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  -=  MAXIMAL_AGING;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	add	this.maximalOrder  -=  MAXIMAL_AGING;	  this.maximalOrder    =    MAXIMAL_AGING;    	compilable	  [FE]  NegativeArraySizeException  	14	4	replace
104	[BUG]  [BUGGY]  this.maximalOrder  -=  MAXIMAL_AGING;  [FE]  NegativeArraySizeException  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  -=  MAXIMAL_AGING;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  -=  MAXIMAL_AGING;	  this.maximalOrder    =    MAXIMAL_AGING;    	compilable	  [FE]  NegativeArraySizeException  	14	4	replace
105	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  0;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  0;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  0;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
106	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  0;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  0;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  0;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
107	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  <  =  MAXIMAL_AGING)  {  this.maximalOrder  =  0;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  <  =  MAXIMAL_AGING)  {  this.maximalOrder  =  0;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  <  =  MAXIMAL_AGING)  {  this.maximalOrder  =  0;  }  else  {  this.allowed  =  AllowedSolution.ANY_SIDE;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
108	[BUG]  [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  0;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  0;  if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  0;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    0;    if(relativeAccuracy  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  this.maximalOrder  =  0;  }  else  {  throw  new  NumberIsTooSmallException(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
109	[BUG]  [BUGGY]  this.maximalOrder  =  maximalOrder  +  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  possible  loss  of  precision  [FE]          TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  maximalOrder  +  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  =  maximalOrder  +  DEFAULT_ABSOLUTE_ACCURACY;	  this.maximalOrder    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
110	[BUG]  [BUGGY]  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  this.maximumOrder  =  maximalOrder;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              TooManyEvaluationsException    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  this.maximumOrder  =  maximalOrder;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  this.maximumOrder  =  maximalOrder;	      	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	5	None	replace
111	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  -=  DEFAULT_MAXIMAL_ORDER;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	add	this.maximalOrder  -=  DEFAULT_MAXIMAL_ORDER;	  this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    	compilable	  [FE]  NegativeArraySizeException  	4	4	replace
112	[BUG]  [BUGGY]  this.maximalOrder  -=  DEFAULT_MAXIMAL_ORDER;  [FE]  NegativeArraySizeException  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  -=  DEFAULT_MAXIMAL_ORDER;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder  -=  DEFAULT_MAXIMAL_ORDER;	  this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    	compilable	  [FE]  NegativeArraySizeException  	4	4	replace
113	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  This.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  This.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    This.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;	  	non-compiled	[CE]  cannot  find  symbol  This	3	None	add
114	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  this.minimalOrder  =  DEFAULT_MAXIMAL_ORDER;  [CE]  cannot  find  symbol  minimalOrder  [FE]      AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  this.minimalOrder  =  DEFAULT_MAXIMAL_ORDER;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    this.minimalOrder  =  DEFAULT_MAXIMAL_ORDER;	  	non-compiled	[CE]  cannot  find  symbol  minimalOrder	3	None	add
115	[BUG]  [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  this.maximalOrder  =  DEFAULT_MINIMAL_ORDER;  [CE]  cannot  find  symbol  DEFAULT_MINIMAL_ORDER  [FE]        AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  DEFAULT_MAXIMAL_ORDER;  this.maximalOrder  =  DEFAULT_MINIMAL_ORDER;  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    DEFAULT_MAXIMAL_ORDER;    this.maximalOrder  =  DEFAULT_MINIMAL_ORDER;	  	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MINIMAL_ORDER	3	None	add
116	[BUG]  [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  this.maximalOrder  =  MAXIMAL_AGING);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    public  BracketingNthOrderBrentSolver(final  double  relativeAccuracy,  final  double  absoluteAccuracy,  final  double  functionValueAccuracy,  final  int  maximalOrder)  throws  NumberIsTooSmallException  {  super(relativeAccuracy,  absoluteAccuracy,  functionValueAccuracy);  if  (maximalOrder  <  2)  {  throw  new  NumberIsTooSmallException(maximalOrder,  2,  true);  }    [BUGGY]  this.maximalOrder  =  MAXIMAL_AGING;  this.maximalOrder  =  MAXIMAL_AGING);  [BUGGY]    this.allowed  =  AllowedSolution.ANY_SIDE;  }  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  <init>  [RETURN_TYPE]  BracketingNthOrderBrentSolver(double,double,double,int)  final  double  relativeAccuracy  final  double  absoluteAccuracy  final  double  functionValueAccuracy  final  int  maximalOrder  [VARIABLES]  AllowedSolution  allowed  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absoluteAccuracy  functionValueAccuracy  relativeAccuracy  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  maximalOrder  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.5	128	128	1	replace	this.maximalOrder    =    MAXIMAL_AGING;    this.maximalOrder  =  MAXIMAL_AGING);	  	non-compiled	[CE]  ';'  expected	13	None	add
