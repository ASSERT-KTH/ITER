bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  yB  =  y[signChangeIndex];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]    TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]    double  yB  =  y[signChangeIndex];  [BUGGY]  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	    double  yB  =  y[signChangeIndex];		non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	35	None	add
2	[BUG]  [BUGGY]    double  yB  =  FastMath.abs(y);  [CE]  no  suitable  method  found  for  abs(double[])  [FE]      TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]    double  yB  =  FastMath.abs(y);  [BUGGY]  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	    double  yB  =  FastMath.abs(y);		non-compiled	[CE]  no  suitable  method  found  for  abs(double[])	35	None	add
3	[BUG]  [BUGGY]    double  yA  =  FastMath.abs(yA);  [CE]  variable  yA  is  already  defined  in  method  doSolve()  [FE]        TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]    double  yA  =  FastMath.abs(yA);  [BUGGY]  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	    double  yA  =  FastMath.abs(yA);		non-compiled	[CE]  variable  yA  is  already  defined  in  method  doSolve()	35	None	add
4	[BUG]  [BUGGY]    double  yA  =  FastMath.abs(yB);  [CE]  variable  yA  is  already  defined  in  method  doSolve()  [FE]          TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]    double  yA  =  FastMath.abs(yB);  [BUGGY]  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	    double  yA  =  FastMath.abs(yB);		non-compiled	[CE]  variable  yA  is  already  defined  in  method  doSolve()	35	None	add
5	[BUG]  [BUGGY]    double  yB  =  y[getAbsoluteAccuracy()];  [CE]  possible  loss  of  precision  [FE]            TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]    double  yB  =  y[getAbsoluteAccuracy()];  [BUGGY]  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	    double  yB  =  y[getAbsoluteAccuracy()];		non-compiled	[CE]  possible  loss  of  precision	35	None	add
6	[BUG]  [BUGGY]  double  yB=  y[a];  [CE]  cannot  find  symbol  a  [FE]    TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[a];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	double  yB=  y[a];	double  yB=  y[signChangeIndex];  	non-compiled	[CE]  cannot  find  symbol  a	34	None	replace
7	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]      TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[0];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	add	double  yB=  y[0];	double  yB=  y[signChangeIndex];  	compilable	  [FE]  TooManyEvaluationsException  	34	1	replace
8	[BUG]  [BUGGY]  double  yB=  y[0];  [FE]  TooManyEvaluationsException  [FE]      TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[0];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	double  yB=  y[0];	double  yB=  y[signChangeIndex];  	compilable	  [FE]  TooManyEvaluationsException  	34	1	replace
9	[BUG]  [BUGGY]  double  yB=  y[tmpX];  [CE]  incompatible  types  [FE]        TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[tmpX];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	double  yB=  y[tmpX];	double  yB=  y[signChangeIndex];  	non-compiled	[CE]  incompatible  types	34	None	replace
10	[BUG]  [BUGGY]  double  yB=  y[ageA];  [CE]  cannot  find  symbol  ageA  [FE]          TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[ageA];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	double  yB=  y[ageA];	double  yB=  y[signChangeIndex];  	non-compiled	[CE]  cannot  find  symbol  ageA	34	None	replace
11	[BUG]  [BUGGY]    double  yB  =  FastMath.abs(yB);  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]    TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]    double  yB  =  FastMath.abs(yB);  [BUGGY]  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	    double  yB  =  FastMath.abs(yB);		non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	35	None	add
12	[BUG]  [BUGGY]  double  yB=  y[bPoints];  [CE]  cannot  find  symbol  bPoints  [FE]    TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[bPoints];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	double  yB=  y[bPoints];	double  yB=  y[signChangeIndex];  	non-compiled	[CE]  cannot  find  symbol  bPoints	34	None	replace
13	[BUG]  [BUGGY]  double  yB=  y[advanceA];  [CE]  cannot  find  symbol  advanceA  [FE]      TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[advanceA];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	double  yB=  y[advanceA];	double  yB=  y[signChangeIndex];  	non-compiled	[CE]  cannot  find  symbol  advanceA	34	None	replace
14	[BUG]  [BUGGY]    double  yA  =  FastMath.abs(y);  [CE]  variable  yA  is  already  defined  in  method  doSolve()  [FE]    TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]    double  yA  =  FastMath.abs(y);  [BUGGY]  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	    double  yA  =  FastMath.abs(y);		non-compiled	[CE]  variable  yA  is  already  defined  in  method  doSolve()	35	None	add
15	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[signChangeIndex  -  1];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	add	double  yB=  y[signChangeIndex  -  1];	double  yB=  y[signChangeIndex];  	compilable	  [FE]  TooManyEvaluationsException  	34	2	replace
16	[BUG]  [BUGGY]  double  yB=  y[signChangeIndex  -  1];  [FE]  TooManyEvaluationsException  [FE]    TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[signChangeIndex  -  1];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	double  yB=  y[signChangeIndex  -  1];	double  yB=  y[signChangeIndex];  	compilable	  [FE]  TooManyEvaluationsException  	34	2	replace
17	[BUG]  [BUGGY]  double  yB=  y[agency];  [CE]  cannot  find  symbol  agency  [FE]      TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[agency];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	double  yB=  y[agency];	double  yB=  y[signChangeIndex];  	non-compiled	[CE]  cannot  find  symbol  agency	34	None	replace
18	[BUG]  [BUGGY]  double  yB=  y[adjChangeIndex];  [CE]  cannot  find  symbol  adjChangeIndex  [FE]        TooManyEvaluationsException  [CONTEXT]    final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;  double  xB=  x[signChangeIndex];  [BUGGY]  double  yB=  y[adjChangeIndex];  [BUGGY]  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  if  (((xB  -  xA)  <=  xTol)  ||  (FastMath.max(absYA,  absYB)  <  getFunctionValueAccuracy()))  {  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	203	203	1	replace	double  yB=  y[adjChangeIndex];	double  yB=  y[signChangeIndex];  	non-compiled	[CE]  cannot  find  symbol  adjChangeIndex	34	None	replace
