bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  yB  =  FastMath.abs(yA);  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  yB  =  FastMath.abs(yA);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  FastMath.abs(yA);	      double    yB    =    FastMath.abs(yB);    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	21	None	replace
2	[BUG]  [BUGGY]  double  yB  =  FastMath.abs(y);  [CE]  no  suitable  method  found  for  abs(double[])  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  yB  =  FastMath.abs(y);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  FastMath.abs(y);	      double    yB    =    FastMath.abs(yB);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[])	21	None	replace
3	[BUG]  [BUGGY]  double  yB  =  FastMath.abs(yY);  [CE]  cannot  find  symbol  yY  [FE]                TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  yB  =  FastMath.abs(yY);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  FastMath.abs(yY);	      double    yB    =    FastMath.abs(yB);    	non-compiled	[CE]  cannot  find  symbol  yY	21	None	replace
4	[BUG]  [BUGGY]  double  xB=  tmpX[a];  [CE]  cannot  find  symbol  a  [FE]        TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[a];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[a];	  double    xB=    x[a];    	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
5	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);  [CE]  possible  loss  of  precision  [FE]        TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  possible  loss  of  precision	13	None	replace
6	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA));  [CE]  no  suitable  method  found  for  max(double)  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA));  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA));	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	13	None	replace
7	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA));  [CE]  no  suitable  method  found  for  max(double)  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA));  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA));	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	13	None	replace
8	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA));  [CE]  no  suitable  method  found  for  max(double)  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA));  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA));	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	13	None	replace
9	[BUG]  [BUGGY]  long  agingB  =  FastMath.abs(yA);  [CE]  possible  loss  of  precision  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  long  agingB  =  FastMath.abs(yA);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	long  agingB  =  FastMath.abs(yA);	      int    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
10	[BUG]  [BUGGY]  float  agingB  =  FastMath.abs(yA);  [CE]  possible  loss  of  precision  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  float  agingB  =  FastMath.abs(yA);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	float  agingB  =  FastMath.abs(yA);	      int    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
11	[BUG]  [BUGGY]  Double  agingB  =  FastMath.abs(yA);  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  Double  agingB  =  FastMath.abs(yA);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  agingB  =  FastMath.abs(yA);	      int    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	20	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[0];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[0];	  double    xB=    x[0];    	compilable	  [FE]  AssertionError  	4	5	replace
13	[BUG]  [BUGGY]  double  xB=  tmpX[0];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[0];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0];	  double    xB=    x[0];    	compilable	  [FE]  AssertionError  	4	5	replace
14	[BUG]  [BUGGY]  double  xB=  x[1];  double  xB=  x[1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[1];  double  xB=  x[1];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[1];    double  xB=  x[1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	17	None	add
15	[BUG]  [BUGGY]  double  xB=  x[1];  Double  xB=  x[1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[1];  Double  xB=  x[1];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[1];    Double  xB=  x[1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	17	None	add
16	[BUG]  [BUGGY]  double  xB=  x[1];  double  xB=  x[2];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]        AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[1];  double  xB=  x[2];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[1];    double  xB=  x[2];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	17	None	add
17	[BUG]  [BUGGY]  double  xB=  x[1];  int  xB=  x[1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]          AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[1];  int  xB=  x[1];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[1];    int  xB=  x[1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	17	None	add
18	[BUG]  [BUGGY]  double  xB=  x[1];  xB=  x[1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]            AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[1];  xB=  x[1];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[1];    xB=  x[1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	17	None	add
19	[BUG]  [BUGGY]  double  xB=  tmpX[bPoints];  [CE]  cannot  find  symbol  bPoints  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[bPoints];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[bPoints];	  double    xB=    x[bPoints];    	non-compiled	[CE]  cannot  find  symbol  bPoints	16	None	replace
20	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[tmpX.length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  final  double[]  xA  =  new  double[tmpX.length];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[tmpX.length];	      final    double[]    xA    =    new    double[x.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	11	None	replace
21	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[signChangeIndex];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  final  double[]  xA  =  new  double[signChangeIndex];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[signChangeIndex];	      final    double[]    xA    =    new    double[x.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	11	None	replace
22	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[s.length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  final  double[]  xA  =  new  double[s.length];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[s.length];	      final    double[]    xA    =    new    double[x.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	11	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[0];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  y[0];	  double    xB=    y[signChangeIndex];    	compilable	  [FE]  AssertionError  	7	6	replace
24	[BUG]  [BUGGY]  double  xB=  y[0];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[0];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[0];	  double    xB=    y[signChangeIndex];    	compilable	  [FE]  AssertionError  	7	6	replace
25	[BUG]  [BUGGY]  double  xB=  y[tmpX];  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[tmpX];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[tmpX];	  double    xB=    y[signChangeIndex];    	non-compiled	[CE]  incompatible  types	7	None	replace
26	[BUG]  [BUGGY]  double  xB=  y[bPoints];  [CE]  cannot  find  symbol  bPoints  [FE]        AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[bPoints];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[bPoints];	  double    xB=    y[signChangeIndex];    	non-compiled	[CE]  cannot  find  symbol  bPoints	7	None	replace
27	[BUG]  [BUGGY]  double  xA  =  x[tmpX];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]        TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xA  =  x[tmpX];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[tmpX];	      double    xA    =    x[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	19	None	replace
28	[BUG]  [BUGGY]  double  xA  =  x[0];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xA  =  x[0];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[0];	      double    xA    =    x[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	19	None	replace
29	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(tmpX);  [CE]  no  suitable  method  found  for  abs(double[])  [FE]        TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingB  =  FastMath.abs(tmpX);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(tmpX);	      double    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[])	9	None	replace
30	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(yA,  absYA);  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingB  =  FastMath.abs(yA,  absYA);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(yA,  absYA);	      double    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	9	None	replace
31	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(yA,  absYA);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingA  =  FastMath.abs(yA,  absYA);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(yA,  absYA);	      double    agingA    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	10	None	replace
32	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(tmpX);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingA  =  FastMath.abs(tmpX);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(tmpX);	      double    agingA    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	10	None	replace
33	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(xA);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingA  =  FastMath.abs(xA);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(xA);	      double    agingA    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	10	None	replace
34	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  tmpX[signChangeIndex];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  tmpX[signChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[signChangeIndex];    double  xB=  tmpX[signChangeIndex];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	1	None	add
35	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  Double  xB=  tmpX[signChangeIndex];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[signChangeIndex];  Double  xB=  tmpX[signChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[signChangeIndex];    Double  xB=  tmpX[signChangeIndex];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	1	None	add
36	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  tmpX[signChangeIndex].;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  tmpX[signChangeIndex].;  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[signChangeIndex];    double  xB=  tmpX[signChangeIndex].;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
37	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  tmpX[signChangeIndex],;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  tmpX[signChangeIndex],;  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[signChangeIndex];    double  xB=  tmpX[signChangeIndex],;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
38	[BUG]  [BUGGY]  double  xB=  x[0];  double  xB=  x[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[0];  double  xB=  x[0];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[0];    double  xB=  x[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	3	None	add
39	[BUG]  [BUGGY]  double  xB=  x[0];  Double  xB=  x[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[0];  Double  xB=  x[0];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[0];    Double  xB=  x[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	3	None	add
40	[BUG]  [BUGGY]  double  xB=  x[0];  int  xB=  x[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]        AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[0];  int  xB=  x[0];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[0];    int  xB=  x[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	3	None	add
41	[BUG]  [BUGGY]  double  xB=  x[0];  xB=  x[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]          AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[0];  xB=  x[0];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[0];    xB=  x[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	3	None	add
42	[BUG]  [BUGGY]  double  yB  =  y[signChangeIndex];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  yB  =  y[signChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  y[signChangeIndex];	      	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	8	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[1];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[1];	  double    xB=    tmpX[signChangeIndex];    	compilable	  [FE]  AssertionError  	2	5	replace
44	[BUG]  [BUGGY]  double  xB=  tmpX[1];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[1];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[1];	  double    xB=    tmpX[signChangeIndex];    	compilable	  [FE]  AssertionError  	2	5	replace
45	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex];  double  xB=  y[signChangeIndex];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[signChangeIndex];  double  xB=  y[signChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex];    double  xB=  y[signChangeIndex];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	6	None	add
46	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex];  Double  xB=  y[signChangeIndex];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[signChangeIndex];  Double  xB=  y[signChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex];    Double  xB=  y[signChangeIndex];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	6	None	add
47	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex];  double  xB=  y[adjChangeIndex];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]        AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[signChangeIndex];  double  xB=  y[adjChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex];    double  xB=  y[adjChangeIndex];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	6	None	add
48	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex];  double  xB=  y[saveA];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]          AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[signChangeIndex];  double  xB=  y[saveA];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex];    double  xB=  y[saveA];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	6	None	add
49	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex];  double  xB=  y[astY];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]            AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[signChangeIndex];  double  xB=  y[astY];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex];    double  xB=  y[astY];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	6	None	add
50	[BUG]  [BUGGY]  double  xB=  tmpX[tmpX];  [CE]  incompatible  types  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[tmpX];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[tmpX];	  double    xB=    x[tmpX];    	non-compiled	[CE]  incompatible  types	5	None	replace
51	[BUG]  [BUGGY]  double  xB=  x[tmpX]  +  absYA;  [CE]  incompatible  types  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[tmpX]  +  absYA;  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[tmpX]  +  absYA;	  double    xB=    x[tmpX];    	non-compiled	[CE]  incompatible  types	5	None	replace
52	[BUG]  [BUGGY]  double  xB=  x[tmpX],  absYA;  [CE]  incompatible  types  [FE]                TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[tmpX],  absYA;  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[tmpX],  absYA;	  double    xB=    x[tmpX];    	non-compiled	[CE]  incompatible  types	5	None	replace
53	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [CE]  possible  loss  of  precision  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
54	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(xA));  [CE]  no  suitable  method  found  for  max(double)  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(xA));  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(xA));	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	14	None	replace
55	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA));  [CE]  no  suitable  method  found  for  max(double)  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA));  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA));	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	14	None	replace
56	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(xB));  [CE]  cannot  find  symbol  xB  [FE]                TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(xB));  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(xB));	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  cannot  find  symbol  xB	14	None	replace
57	[BUG]  [BUGGY]  [FE]  TooManyEvaluationsException  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[2];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  x[2];	  double    xB=    x[1];    	compilable	  [FE]  TooManyEvaluationsException  	18	1	replace
58	[BUG]  [BUGGY]  double  xB=  x[2];  [FE]  TooManyEvaluationsException  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  x[2];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[2];	  double    xB=    x[1];    	compilable	  [FE]  TooManyEvaluationsException  	18	1	replace
59	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(xA,  absYA);  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingB  =  FastMath.abs(xA,  absYA);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(xA,  absYA);	      double    agingB    =    FastMath.abs(xA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	12	None	replace
60	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[yA.length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  final  double[]  xA  =  new  double[yA.length];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[yA.length];	      final    double[]    xA    =    new    double[x.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	11	None	replace
61	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[as.length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  final  double[]  xA  =  new  double[as.length];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[as.length];	      final    double[]    xA    =    new    double[x.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	11	None	replace
62	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[a.length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  final  double[]  xA  =  new  double[a.length];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[a.length];	      final    double[]    xA    =    new    double[x.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	11	None	replace
63	[BUG]  [BUGGY]  double  yA  =  FastMath.abs(yA);  [CE]  variable  yA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  yA  =  FastMath.abs(yA);  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yA  =  FastMath.abs(yA);	      	non-compiled	[CE]  variable  yA  is  already  defined  in  method  doSolve()	8	None	replace
64	[BUG]  [BUGGY]  final  double  yB  =  y[signChangeIndex];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  final  double  yB  =  y[signChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double  yB  =  y[signChangeIndex];	      	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	8	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB  =  FastMath.abs(xA);  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB  =  FastMath.abs(xA);	      	compilable	  [FE]  AssertionError  	8	5	replace
66	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(xA);  [FE]  AssertionError  [FE]                    TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB  =  FastMath.abs(xA);  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB  =  FastMath.abs(xA);	      	compilable	  [FE]  AssertionError  	8	5	replace
67	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB));  [CE]  cannot  find  symbol  yB  [FE]        TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB));  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB));	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  cannot  find  symbol  yB	13	None	replace
68	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(yB);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingA  =  FastMath.abs(yB);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(yB);	      double    agingA    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	10	None	replace
69	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex];  double  yB=  y[signChangeIndex];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[signChangeIndex];  double  yB=  y[signChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex];    double  yB=  y[signChangeIndex];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	6	None	add
70	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex];  double  xxB=  y[signChangeIndex];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[signChangeIndex];  double  xxB=  y[signChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex];    double  xxB=  y[signChangeIndex];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	6	None	add
71	[BUG]  [BUGGY]  double  xA  =  x[a];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]        TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xA  =  x[a];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[a];	      double    xA    =    x[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	19	None	replace
72	[BUG]  [BUGGY]  double  xA  =  x[1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xA  =  x[1];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[1];	      double    xA    =    x[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	19	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[signChangeIndex  -  1];	  double    xB=    tmpX[signChangeIndex];    	compilable	  [FE]  AssertionError  	2	5	replace
74	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex  -  1];	  double    xB=    tmpX[signChangeIndex];    	compilable	  [FE]  AssertionError  	2	5	replace
75	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(yB));  [CE]  cannot  find  symbol  yB  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(yB));  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(yB));	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  cannot  find  symbol  yB	14	None	replace
76	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(yB);  [CE]  cannot  find  symbol  yB  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingB  =  FastMath.abs(yB);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(yB);	      double    agingB    =    FastMath.abs(xA);    	non-compiled	[CE]  cannot  find  symbol  yB	12	None	replace
77	[BUG]  [BUGGY]  double  xB=  y[a];  [CE]  cannot  find  symbol  a  [FE]        TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[a];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[a];	  double    xB=    x[a];    	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
78	[BUG]  [BUGGY]  double  xB=  y[advanceA];  [CE]  cannot  find  symbol  advanceA  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[advanceA];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[advanceA];	  double    xB=    y[signChangeIndex];    	non-compiled	[CE]  cannot  find  symbol  advanceA	7	None	replace
79	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  int  xB=  tmpX[signChangeIndex];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[signChangeIndex];  int  xB=  tmpX[signChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[signChangeIndex];    int  xB=  tmpX[signChangeIndex];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	1	None	add
80	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  yB=  tmpX[signChangeIndex];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  yB=  tmpX[signChangeIndex];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[signChangeIndex];    double  yB=  tmpX[signChangeIndex];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	1	None	add
81	[BUG]  [BUGGY]  double  xA  =  x[signChangeIndex  -  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]        TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xA  =  x[signChangeIndex  -  1];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[signChangeIndex  -  1];	      double    xA    =    x[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	19	None	replace
82	[BUG]  [BUGGY]  double  xA  =  x[yA];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xA  =  x[yA];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[yA];	      double    xA    =    x[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	19	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[signChangeIndex  -  1];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  y[signChangeIndex  -  1];	  double    xB=    y[signChangeIndex];    	compilable	  [FE]  AssertionError  	7	6	replace
84	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  -  1];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[signChangeIndex  -  1];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[signChangeIndex  -  1];	  double    xB=    y[signChangeIndex];    	compilable	  [FE]  AssertionError  	7	6	replace
85	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [CE]  possible  loss  of  precision  [FE]          TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));	      int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
86	[BUG]  [BUGGY]  Double  yB  =  FastMath.abs(yB);  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  Double  yB  =  FastMath.abs(yB);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  yB  =  FastMath.abs(yB);	      double    yB    =    FastMath.abs(yB);    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	21	None	replace
87	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex];  double  xB=  y[signChangeIndex].;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  y[signChangeIndex];  double  xB=  y[signChangeIndex].;  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex];    double  xB=  y[signChangeIndex].;	  	non-compiled	[CE]  <identifier>  expected	6	None	add
88	[BUG]  [BUGGY]  double  xB=  tmpX[xA];  [CE]  possible  loss  of  precision  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  xB=  tmpX[xA];  [BUGGY]    double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[xA];	  double    xB=    x[tmpX];    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
89	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(agingA);  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]        TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingB  =  FastMath.abs(agingA);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(agingA);	      double    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	9	None	replace
90	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(agingB);  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  double  agingB  =  FastMath.abs(agingB);  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(agingB);	      double    agingB    =    FastMath.abs(xA);    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	12	None	replace
91	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[xA.length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  final  double[]  xA  =  new  double[xA.length];  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[xA.length];	      final    double[]    xA    =    new    double[x.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	11	None	replace
92	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[xA].length;  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException    [CONTEXT]    }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;    [BUGGY]  final  double[]  xA  =  new  double[xA].length;  [BUGGY]    double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[xA].length;	      final    double[]    xA    =    new    double[x.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	11	None	replace
