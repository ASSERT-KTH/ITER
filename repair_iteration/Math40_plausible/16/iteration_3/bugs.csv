bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(agingB));    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	85	None	replace
2	[BUG]  [BUGGY]  long  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [CE]  possible  loss  of  precision  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  long  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	long  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(agingB));    	non-compiled	[CE]  possible  loss  of  precision	85	None	replace
3	[BUG]  [BUGGY]  Double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(agingB));    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	85	None	replace
4	[BUG]  [BUGGY]  float  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [CE]  possible  loss  of  precision  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  float  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	float  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(agingB));    	non-compiled	[CE]  possible  loss  of  precision	85	None	replace
5	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[yA.length  +  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[yA.length  +  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[yA.length  +  1];	  final    double[]    xA    =    new    double[yA.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	60	None	replace
6	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[yA.length  -  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[yA.length  -  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[yA.length  -  1];	  final    double[]    xA    =    new    double[yA.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	60	None	replace
7	[BUG]  [BUGGY]  double  yB  =  y[signChangeIndex  -  1];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  y[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  y[signChangeIndex  -  1];	  double    yB    =    y[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	42	None	replace
8	[BUG]  [BUGGY]  double  yB  =  y[0];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  y[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  y[0];	  double    yB    =    y[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	42	None	replace
9	[BUG]  [BUGGY]  double  yB  =  y[tmpX];  [CE]  incompatible  types  [FE]                        TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  y[tmpX];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  y[tmpX];	  double    yB    =    y[signChangeIndex];    	non-compiled	[CE]  incompatible  types	42	None	replace
10	[BUG]  [BUGGY]  Double  agingB  =  FastMath.abs(tmpX);  [CE]  no  suitable  method  found  for  abs(double[])  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  agingB  =  FastMath.abs(tmpX);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  agingB  =  FastMath.abs(tmpX);	  Double    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[])	11	None	replace
11	[BUG]  [BUGGY]  Double  agingB  =  FastMath.abs(yA,  absYA);  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  agingB  =  FastMath.abs(yA,  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  agingB  =  FastMath.abs(yA,  absYA);	  Double    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	11	None	replace
12	[BUG]  [BUGGY]  final  double  yB  =  y[signChangeIndex  -  1];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double  yB  =  y[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double  yB  =  y[signChangeIndex  -  1];	  final    double    yB    =    y[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	64	None	replace
13	[BUG]  [BUGGY]  final  double  yB  =  y[0];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]                        TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double  yB  =  y[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double  yB  =  y[0];	  final    double    yB    =    y[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	64	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  xB=  x[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[0];  xB=  x[0];	  double    xB=    x[0];    xB=    x[0];    	compilable	  [FE]  AssertionError  	41	7	replace
15	[BUG]  [BUGGY]  double  xB=  tmpX[0];  xB=  x[0];  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  xB=  x[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0];  xB=  x[0];	  double    xB=    x[0];    xB=    x[0];    	compilable	  [FE]  AssertionError  	41	7	replace
16	[BUG]  [BUGGY]  xB=  x[0];  [CE]  cannot  find  symbol  xB  [FE]                AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  xB=  x[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	xB=  x[0];	  double    xB=    x[0];    xB=    x[0];    	non-compiled	[CE]  cannot  find  symbol  xB	41	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  xB=  y[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[0];  xB=  y[0];	  double    xB=    x[0];    xB=    x[0];    	compilable	  [FE]  AssertionError  	41	6	replace
18	[BUG]  [BUGGY]  double  xB=  tmpX[0];  xB=  y[0];  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  xB=  y[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0];  xB=  y[0];	  double    xB=    x[0];    xB=    x[0];    	compilable	  [FE]  AssertionError  	41	6	replace
19	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(bsYA);  [CE]  cannot  find  symbol  bsYA  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(bsYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(bsYA);	  double    agingB    =    FastMath.abs(yB);    	non-compiled	[CE]  cannot  find  symbol  bsYA	76	None	replace
20	[BUG]  [BUGGY]  double  yB  =  FastMath.abs(y,  absYA);  [CE]  no  suitable  method  found  for  abs(double[],double)  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  FastMath.abs(y,  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  FastMath.abs(y,  absYA);	  double    yB    =    FastMath.abs(y);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[],double)	2	None	replace
21	[BUG]  [BUGGY]  double  yB  =  FastMath.abs(yA,  y);  [CE]  no  suitable  method  found  for  abs(double,double[])  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  FastMath.abs(yA,  y);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  FastMath.abs(yA,  y);	  double    yB    =    FastMath.abs(y);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double[])	2	None	replace
22	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [CE]  possible  loss  of  precision  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    +    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
23	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(xA));  [CE]  no  suitable  method  found  for  max(double)  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(xA));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(xA));	  int    agingB    =    getAbsoluteAccuracy()    +    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	54	None	replace
24	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  FastMath.abs(xB));  [CE]  cannot  find  symbol  xB  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  FastMath.abs(xB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  FastMath.abs(xB));	  int    agingB    =    getAbsoluteAccuracy()    +    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  cannot  find  symbol  xB	54	None	replace
25	[BUG]  [BUGGY]  xB=  tmpX[signChangeIndex];  [CE]  cannot  find  symbol  xB  [FE]        AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  xB=  tmpX[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	xB=  tmpX[signChangeIndex];	  double    xB=    tmpX[signChangeIndex];    double    xB=    tmpX[signChangeIndex];    	non-compiled	[CE]  cannot  find  symbol  xB	34	None	replace
26	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CE]  cannot  find  symbol  xB  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(xB));    	non-compiled	[CE]  cannot  find  symbol  xB	56	None	replace
27	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(yB));  [CE]  cannot  find  symbol  yB  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(yB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(yB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(xB));    	non-compiled	[CE]  cannot  find  symbol  yB	56	None	replace
28	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  -  1];  double  xB=  y[signChangeIndex  -  1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  1];  double  xB=  y[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex    -    1];    double  xB=  y[signChangeIndex  -  1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	83	None	add
29	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  -  1];  Double  xB=  y[signChangeIndex  -  1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  1];  Double  xB=  y[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex    -    1];    Double  xB=  y[signChangeIndex  -  1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	83	None	add
30	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  -  1];  int  xB=  y[signChangeIndex  -  1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]        AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  1];  int  xB=  y[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex    -    1];    int  xB=  y[signChangeIndex  -  1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	83	None	add
31	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  -  1];  double  xB=  y[signChangeIndex  -  1].;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  1];  double  xB=  y[signChangeIndex  -  1].;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex    -    1];    double  xB=  y[signChangeIndex  -  1].;	  	non-compiled	[CE]  <identifier>  expected	83	None	add
32	[BUG]  [BUGGY]  double  xA  =  tmpX[0];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  tmpX[0];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  tmpX[0];	  double    xA    =    x[0];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	28	None	replace
33	[BUG]  [BUGGY]  double  xA  =  y[0];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  y[0];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  y[0];	  double    xA    =    x[0];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	28	None	replace
34	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[tmpX.length].length;  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[tmpX.length].length;  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[tmpX.length].length;	  final    double[]    xA    =    new    double[xA].length;    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	92	None	replace
35	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[x.length].length;  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[x.length].length;  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[x.length].length;	  final    double[]    xA    =    new    double[xA].length;    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	92	None	replace
36	[BUG]  [BUGGY]  double  xB=  tmpX[0];  int  xB=  x[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  int  xB=  x[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0];  int  xB=  x[0];	  double    xB=    x[0];    int    xB=    x[0];    	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	40	None	replace
37	[BUG]  [BUGGY]  int  xB=  tmpX[0];  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  xB=  tmpX[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  xB=  tmpX[0];	  double    xB=    x[0];    int    xB=    x[0];    	non-compiled	[CE]  possible  loss  of  precision	40	None	replace
38	[BUG]  [BUGGY]  double  xB=  tmpX[tmpY];  [CE]  cannot  find  symbol  tmpY  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[tmpY];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[tmpY];	  double    xB=    tmpX[tmpX];    	non-compiled	[CE]  cannot  find  symbol  tmpY	50	None	replace
39	[BUG]  [BUGGY]  double  xB=  tmpX[tmpX]  +  absYA;  [CE]  incompatible  types  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[tmpX]  +  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[tmpX]  +  absYA;	  double    xB=    tmpX[tmpX];    	non-compiled	[CE]  incompatible  types	50	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  y[1];	  double    xB=    x[1];    double    xB=    x[1];    	compilable	  [FE]  AssertionError  	14	7	replace
41	[BUG]  [BUGGY]  double  xB=  y[1];  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[1];	  double    xB=    x[1];    double    xB=    x[1];    	compilable	  [FE]  AssertionError  	14	7	replace
42	[BUG]  [BUGGY]  double  xxB=  y[signChangeIndex];  [CE]  cannot  find  symbol  xB  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xxB=  y[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xxB=  y[signChangeIndex];	  double    xB=    y[signChangeIndex];    double    xxB=    y[signChangeIndex];    	non-compiled	[CE]  cannot  find  symbol  xB	70	None	replace
43	[BUG]  [BUGGY]  double  xxB=  x[signChangeIndex];  [CE]  cannot  find  symbol  xB  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xxB=  x[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xxB=  x[signChangeIndex];	  double    xB=    y[signChangeIndex];    double    xxB=    y[signChangeIndex];    	non-compiled	[CE]  cannot  find  symbol  xB	70	None	replace
44	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex],;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex],;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex],;	  double    xB=    tmpX[signChangeIndex];    double    xB=    tmpX[signChangeIndex],;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
45	[BUG]  [BUGGY]  double  xB=  tmpX[0],;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0],;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0],;	  double    xB=    tmpX[signChangeIndex];    double    xB=    tmpX[signChangeIndex],;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
46	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex],  null;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex],  null;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex],  null;	  double    xB=    tmpX[signChangeIndex];    double    xB=    tmpX[signChangeIndex],;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  xB=  x[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[1];  xB=  x[1];	  double    xB=    x[1];    xB=    x[1];    	compilable	  [FE]  AssertionError  	18	7	replace
48	[BUG]  [BUGGY]  double  xB=  tmpX[1];  xB=  x[1];  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  xB=  x[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[1];  xB=  x[1];	  double    xB=    x[1];    xB=    x[1];    	compilable	  [FE]  AssertionError  	18	7	replace
49	[BUG]  [BUGGY]  xB=  x[1];  [CE]  cannot  find  symbol  xB  [FE]                  AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  xB=  x[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	xB=  x[1];	  double    xB=    x[1];    xB=    x[1];    	non-compiled	[CE]  cannot  find  symbol  xB	18	None	replace
50	[BUG]  [BUGGY]  double  xB=  tmpX[1];  int  xB=  x[1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  int  xB=  x[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[1];  int  xB=  x[1];	  double    xB=    x[1];    int    xB=    x[1];    	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	17	None	replace
51	[BUG]  [BUGGY]  int  xB=  x[1];  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  xB=  x[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  xB=  x[1];	  double    xB=    x[1];    int    xB=    x[1];    	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
52	[BUG]  [BUGGY]  double  xB=  tmpX[xA]  +  absYA;  [CE]  possible  loss  of  precision  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[xA]  +  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[xA]  +  absYA;	  double    xB=    tmpX[xA];    	non-compiled	[CE]  possible  loss  of  precision	88	None	replace
53	[BUG]  [BUGGY]  double  xB=  y[tmpX]  +  absYA;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[tmpX]  +  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[tmpX]  +  absYA;	  double    xB=    y[tmpX];    	non-compiled	[CE]  incompatible  types	25	None	replace
54	[BUG]  [BUGGY]  double  xB=  tmpX[0];  double  yB=  tmpX[0];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  double  yB=  tmpX[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0];  double  yB=  tmpX[0];	  double    xB=    tmpX[signChangeIndex];    double    yB=    tmpX[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	80	None	replace
55	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  yB=  y[signChangeIndex];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  yB=  y[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex];  double  yB=  y[signChangeIndex];	  double    xB=    tmpX[signChangeIndex];    double    yB=    tmpX[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	80	None	replace
56	[BUG]  [BUGGY]  double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];	  double    xB=    tmpX[signChangeIndex];    double    yB=    tmpX[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	80	None	replace
57	[BUG]  [BUGGY]  double  xB=  tmpX[1];  double  yB=  tmpX[1];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]                AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  double  yB=  tmpX[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[1];  double  yB=  tmpX[1];	  double    xB=    tmpX[signChangeIndex];    double    yB=    tmpX[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	80	None	replace
58	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(tmpX,  absYA);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingA  =  FastMath.abs(tmpX,  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(tmpX,  absYA);	  double    agingA    =    FastMath.abs(tmpX);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	32	None	replace
59	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA),    FastMath.abs(agingB));    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	53	None	replace
60	[BUG]  [BUGGY]  long  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [CE]  possible  loss  of  precision  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  long  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	long  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA),    FastMath.abs(agingB));    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
61	[BUG]  [BUGGY]  Double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA),    FastMath.abs(agingB));    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	53	None	replace
62	[BUG]  [BUGGY]  float  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [CE]  possible  loss  of  precision  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  float  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	float  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA),    FastMath.abs(agingB));    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0]  +  1;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[0]  +  1;	  double    xB=    tmpX[0];    	compilable	  [FE]  AssertionError  	13	4	replace
64	[BUG]  [BUGGY]  double  xB=  tmpX[0]  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0]  +  1;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0]  +  1;	  double    xB=    tmpX[0];    	compilable	  [FE]  AssertionError  	13	4	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  xB=  tmpX[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	Double  xB=  tmpX[signChangeIndex];	  double    xB=    tmpX[signChangeIndex];    Double    xB=    tmpX[signChangeIndex];    	compilable	  [FE]  AssertionError  	35	5	replace
66	[BUG]  [BUGGY]  Double  xB=  tmpX[signChangeIndex];  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  xB=  tmpX[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  xB=  tmpX[signChangeIndex];	  double    xB=    tmpX[signChangeIndex];    Double    xB=    tmpX[signChangeIndex];    	compilable	  [FE]  AssertionError  	35	5	replace
67	[BUG]  [BUGGY]  double  xA  =  x[tmpX  -  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  x[tmpX  -  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[tmpX  -  1];	  double    xA    =    x[signChangeIndex    -    1];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	81	None	replace
68	[BUG]  [BUGGY]  double  xA  =  tmpX[signChangeIndex  -  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  tmpX[signChangeIndex  -  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  tmpX[signChangeIndex  -  1];	  double    xA    =    x[signChangeIndex    -    1];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	81	None	replace
69	[BUG]  [BUGGY]  double  xA  =  x[tmpX.length  -  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  x[tmpX.length  -  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[tmpX.length  -  1];	  double    xA    =    x[signChangeIndex    -    1];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	81	None	replace
70	[BUG]  [BUGGY]  double  xB=  tmpX[1];  double  xB=  tmpX[2];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  double  xB=  tmpX[2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[1];  double  xB=  tmpX[2];	  double    xB=    x[1];    double    xB=    x[2];    	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	16	None	replace
71	[BUG]  [BUGGY]  double  xB=  tmpX[1];  double  xB=  x[2];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  double  xB=  x[2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[1];  double  xB=  x[2];	  double    xB=    x[1];    double    xB=    x[2];    	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	16	None	replace
72	[BUG]  [BUGGY]  double  xB=  tmpX[1];  double  xB=  y[2];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]                AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  double  xB=  y[2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[1];  double  xB=  y[2];	  double    xB=    x[1];    double    xB=    x[2];    	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	16	None	replace
73	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA));  [CE]  no  suitable  method  found  for  max(double)  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA));	  int    agingB    =    getAbsoluteAccuracy()    /    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	8	None	replace
74	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA),  absYA);  [CE]  possible  loss  of  precision  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA),  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA),  absYA);	  int    agingB    =    getAbsoluteAccuracy()    /    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
75	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA,  absYA));  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA,  absYA));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  /  FastMath.max(FastMath.abs(yA,  absYA));	  int    agingB    =    getAbsoluteAccuracy()    /    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	8	None	replace
76	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(xB));  [CE]  cannot  find  symbol  xB  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(xB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(xB));	  double    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  cannot  find  symbol  xB	55	None	replace
77	[BUG]  [BUGGY]  double  xB=  tmpX[0];  Double  xB=  x[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  Double  xB=  x[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0];  Double  xB=  x[0];	  double    xB=    x[0];    Double    xB=    x[0];    	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	39	None	replace
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  xB=  tmpX[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	Double  xB=  tmpX[0];	  double    xB=    x[0];    Double    xB=    x[0];    	compilable	  [FE]  AssertionError  	39	5	replace
79	[BUG]  [BUGGY]  Double  xB=  tmpX[0];  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  xB=  tmpX[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  xB=  tmpX[0];	  double    xB=    x[0];    Double    xB=    x[0];    	compilable	  [FE]  AssertionError  	39	5	replace
80	[BUG]  [BUGGY]  double  xB=  tmpX[0];  double  xB=  tmpX[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  double  xB=  tmpX[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[0];    double  xB=  tmpX[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	12	None	add
81	[BUG]  [BUGGY]  double  xB=  tmpX[0];  Double  xB=  tmpX[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  Double  xB=  tmpX[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[0];    Double  xB=  tmpX[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	12	None	add
82	[BUG]  [BUGGY]  double  xB=  tmpX[0];  int  xB=  tmpX[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]        AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  int  xB=  tmpX[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[0];    int  xB=  tmpX[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	12	None	add
83	[BUG]  [BUGGY]  double  xB=  tmpX[0];  xB=  tmpX[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]          AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  xB=  tmpX[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[0];    xB=  tmpX[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	12	None	add
84	[BUG]  [BUGGY]  double  xA  =  tmpX[1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  tmpX[1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  tmpX[1];	  double    xA    =    x[1];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	72	None	replace
85	[BUG]  [BUGGY]  double  xB=  tmpX[ageA];  [CE]  cannot  find  symbol  ageA  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[ageA];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[ageA];	  double    xB=    tmpX[a];    	non-compiled	[CE]  cannot  find  symbol  ageA	4	None	replace
86	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  y[astY];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]                AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  y[astY];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex];  double  xB=  y[astY];	  double    xB=    y[signChangeIndex];    double    xB=    y[astY];    	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	49	None	replace
87	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  yB=  y[astY];  [CE]  cannot  find  symbol  astY  [FE]                  AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  yB=  y[astY];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex];  double  yB=  y[astY];	  double    xB=    y[signChangeIndex];    double    xB=    y[astY];    	non-compiled	[CE]  cannot  find  symbol  astY	49	None	replace
88	[BUG]  [BUGGY]  double  xB=  tmpX[advanceA];  [CE]  cannot  find  symbol  advanceA  [FE]        AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[advanceA];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[advanceA];	  double    xB=    y[advanceA];    	non-compiled	[CE]  cannot  find  symbol  advanceA	78	None	replace
89	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  y[saveA];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  y[saveA];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex];  double  xB=  y[saveA];	  double    xB=    y[signChangeIndex];    double    xB=    y[saveA];    	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	48	None	replace
90	[BUG]  [BUGGY]  double  xB=  y[saveA];  [CE]  cannot  find  symbol  saveA  [FE]                AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[saveA];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[saveA];	  double    xB=    y[signChangeIndex];    double    xB=    y[saveA];    	non-compiled	[CE]  cannot  find  symbol  saveA	48	None	replace
91	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  yB=  y[saveA];  [CE]  cannot  find  symbol  saveA  [FE]                  AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  yB=  y[saveA];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex];  double  yB=  y[saveA];	  double    xB=    y[signChangeIndex];    double    xB=    y[saveA];    	non-compiled	[CE]  cannot  find  symbol  saveA	48	None	replace
92	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(tmpX,  agingA);  [CE]  no  suitable  method  found  for  abs(double[],int)  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(tmpX,  agingA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(tmpX,  agingA);	  double    agingB    =    FastMath.abs(tmpX);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[],int)	29	None	replace
93	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(tmpX,  absYA);  [CE]  no  suitable  method  found  for  abs(double[],double)  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(tmpX,  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(tmpX,  absYA);	  double    agingB    =    FastMath.abs(tmpX);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[],double)	29	None	replace
94	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(tmpX,  agingB);  [CE]  no  suitable  method  found  for  abs(double[],double)  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(tmpX,  agingB);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(tmpX,  agingB);	  double    agingB    =    FastMath.abs(tmpX);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[],double)	29	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[tmpX.length  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  y[tmpX.length  -  1];	  double    xB=    y[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	84	5	replace
96	[BUG]  [BUGGY]  double  xB=  y[tmpX.length  -  1];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[tmpX.length  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[tmpX.length  -  1];	  double    xB=    y[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	84	5	replace
97	[BUG]  [BUGGY]  double  xB=  y[bPoints  -  1];  [CE]  cannot  find  symbol  bPoints  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[bPoints  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[bPoints  -  1];	  double    xB=    y[signChangeIndex    -    1];    	non-compiled	[CE]  cannot  find  symbol  bPoints	84	None	replace
98	[BUG]  [BUGGY]  double  xA  =  tmpX[signChangeIndex];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  tmpX[signChangeIndex];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  tmpX[signChangeIndex];	  double    xA    =    x[tmpX];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	27	None	replace
99	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA));  [CE]  no  suitable  method  found  for  max(double)  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA));	  double    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	7	None	replace
100	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);	  double    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	7	None	replace
101	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  fastMath.abs(agingB));  [CE]  cannot  find  symbol  fastMath  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  fastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  fastMath.abs(agingB));	  double    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  cannot  find  symbol  fastMath	7	None	replace
102	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  agingA);  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  agingA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  agingA);	  double    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	7	None	replace
103	[BUG]  [BUGGY]  Double  yB  =  FastMath.abs(yA);  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  yB  =  FastMath.abs(yA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  yB  =  FastMath.abs(yA);	  Double    yB    =    FastMath.abs(yB);    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	86	None	replace
104	[BUG]  [BUGGY]  Double  yB  =  FastMath.abs(y);  [CE]  no  suitable  method  found  for  abs(double[])  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  yB  =  FastMath.abs(y);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  yB  =  FastMath.abs(y);	  Double    yB    =    FastMath.abs(yB);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[])	86	None	replace
105	[BUG]  [BUGGY]  double  xB=  x[tmpX]  +  absY;  [CE]  incompatible  types  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[tmpX]  +  absY;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[tmpX]  +  absY;	  double    xB=    x[tmpX]    +    absYA;    	non-compiled	[CE]  incompatible  types	51	None	replace
106	[BUG]  [BUGGY]  double  xB=  x[tmpX]  +  absYA,  agingA;  [CE]  incompatible  types  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[tmpX]  +  absYA,  agingA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[tmpX]  +  absYA,  agingA;	  double    xB=    x[tmpX]    +    absYA;    	non-compiled	[CE]  incompatible  types	51	None	replace
107	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[X.length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[X.length];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[X.length];	  final    double[]    xA    =    new    double[tmpX.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	20	None	replace
108	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[y.length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[y.length];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[y.length];	  final    double[]    xA    =    new    double[tmpX.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	20	None	replace
109	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(yA,  absYA,  agingA);  [CE]  no  suitable  method  found  for  abs(double,double,int)  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(yA,  absYA,  agingA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(yA,  absYA,  agingA);	  double    agingB    =    FastMath.abs(yA,    absYA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double,int)	30	None	replace
110	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(yA,  absYB);  [CE]  cannot  find  symbol  absYB  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(yA,  absYB);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(yA,  absYB);	  double    agingB    =    FastMath.abs(yA,    absYA);    	non-compiled	[CE]  cannot  find  symbol  absYB	30	None	replace
111	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(bsYA,  yA);  [CE]  cannot  find  symbol  bsYA  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(bsYA,  yA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(bsYA,  yA);	  double    agingB    =    FastMath.abs(yA,    absYA);    	non-compiled	[CE]  cannot  find  symbol  bsYA	30	None	replace
112	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(abbsYA,  yA);  [CE]  cannot  find  symbol  abbsYA  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(abbsYA,  yA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(abbsYA,  yA);	  double    agingB    =    FastMath.abs(yA,    absYA);    	non-compiled	[CE]  cannot  find  symbol  abbsYA	30	None	replace
113	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  Double  xB=  y[signChangeIndex];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex];  Double  xB=  y[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex];  Double  xB=  y[signChangeIndex];	  double    xB=    y[signChangeIndex];    Double    xB=    y[signChangeIndex];    	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	46	None	replace
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  xB=  y[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	Double  xB=  y[signChangeIndex];	  double    xB=    y[signChangeIndex];    Double    xB=    y[signChangeIndex];    	compilable	  [FE]  AssertionError  	46	5	replace
115	[BUG]  [BUGGY]  Double  xB=  y[signChangeIndex];  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  xB=  y[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  xB=  y[signChangeIndex];	  double    xB=    y[signChangeIndex];    Double    xB=    y[signChangeIndex];    	compilable	  [FE]  AssertionError  	46	5	replace
116	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  Double  yB=  y[signChangeIndex];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex];  Double  yB=  y[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex];  Double  yB=  y[signChangeIndex];	  double    xB=    y[signChangeIndex];    Double    xB=    y[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	46	None	replace
117	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[asYB.length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[asYB.length];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[asYB.length];	  final    double[]    xA    =    new    double[as.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	61	None	replace
118	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[asYA.length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[asYA.length];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[asYA.length];	  final    double[]    xA    =    new    double[as.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	61	None	replace
119	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[as.length  +  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[as.length  +  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[as.length  +  1];	  final    double[]    xA    =    new    double[as.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	61	None	replace
120	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[xA.length  +  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[xA.length  +  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[xA.length  +  1];	  final    double[]    xA    =    new    double[xA.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	91	None	replace
121	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(xA);  double  xB  =  FastMath.abs(xA);  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB  =  FastMath.abs(xA);  double  xB  =  FastMath.abs(xA);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB    =    FastMath.abs(xA);    double  xB  =  FastMath.abs(xA);	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	65	None	add
122	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(xA);  Double  xB  =  FastMath.abs(xA);  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB  =  FastMath.abs(xA);  Double  xB  =  FastMath.abs(xA);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB    =    FastMath.abs(xA);    Double  xB  =  FastMath.abs(xA);	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	65	None	add
123	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(xA);  int  xB  =  FastMath.abs(xA);  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]        AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB  =  FastMath.abs(xA);  int  xB  =  FastMath.abs(xA);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB    =    FastMath.abs(xA);    int  xB  =  FastMath.abs(xA);	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	65	None	add
124	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(xA);  double  xA  =  FastMath.abs(xA);  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]          AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB  =  FastMath.abs(xA);  double  xA  =  FastMath.abs(xA);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB    =    FastMath.abs(xA);    double  xA  =  FastMath.abs(xA);	  	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	65	None	add
125	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(xA);  xB  =  FastMath.abs(xA);  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]            AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB  =  FastMath.abs(xA);  xB  =  FastMath.abs(xA);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB    =    FastMath.abs(xA);    xB  =  FastMath.abs(xA);	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	65	None	add
126	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[tmpX];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[tmpX];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[tmpX];	  final    double[]    xA    =    new    double[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	21	None	replace
127	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[length];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[length];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[length];	  final    double[]    xA    =    new    double[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	21	None	replace
128	[BUG]  [BUGGY]  double  xB=  tmpX[0].;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0].;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0].;	  double    xB=    tmpX[signChangeIndex];    double    xB=    tmpX[signChangeIndex].;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
129	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex].;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex].;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex].;	  double    xB=    tmpX[signChangeIndex];    double    xB=    tmpX[signChangeIndex].;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
130	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  y[signChangeIndex].;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex];  double  xB=  y[signChangeIndex].;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex];  double  xB=  y[signChangeIndex].;	  double    xB=    y[signChangeIndex];    double    xB=    y[signChangeIndex].;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
131	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(tmpX,  xA,  absYA);  [CE]  no  suitable  method  found  for  abs(double[],double,double)  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(tmpX,  xA,  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(tmpX,  xA,  absYA);	  double    agingB    =    FastMath.abs(xA,    absYA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[],double,double)	59	None	replace
132	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(bsYA,  xA);  [CE]  cannot  find  symbol  bsYA  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(bsYA,  xA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(bsYA,  xA);	  double    agingB    =    FastMath.abs(xA,    absYA);    	non-compiled	[CE]  cannot  find  symbol  bsYA	59	None	replace
133	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(xA,  absYA,  agingA);  [CE]  no  suitable  method  found  for  abs(double,double,int)  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(xA,  absYA,  agingA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(xA,  absYA,  agingA);	  double    agingB    =    FastMath.abs(xA,    absYA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double,int)	59	None	replace
134	[BUG]  [BUGGY]  long  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);  [CE]  possible  loss  of  precision  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  long  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	long  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    absYA);    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
135	[BUG]  [BUGGY]  Double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    absYA);    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	5	None	replace
136	[BUG]  [BUGGY]  float  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);  [CE]  possible  loss  of  precision  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  float  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	float  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  absYA);	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    absYA);    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[nbPoints];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  y[nbPoints];	  double    xB=    y[bPoints];    	compilable	  [FE]  AssertionError  	26	5	replace
138	[BUG]  [BUGGY]  double  xB=  y[nbPoints];  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[nbPoints];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[nbPoints];	  double    xB=    y[bPoints];    	compilable	  [FE]  AssertionError  	26	5	replace
139	[BUG]  [BUGGY]  double  xB=  y[0];  double  xB=  y[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[0];  double  xB=  y[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[0];    double  xB=  y[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	23	None	add
140	[BUG]  [BUGGY]  double  xB=  y[0];  Double  xB=  y[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[0];  Double  xB=  y[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[0];    Double  xB=  y[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	23	None	add
141	[BUG]  [BUGGY]  double  xB=  y[0];  int  xB=  y[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]        AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[0];  int  xB=  y[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[0];    int  xB=  y[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	23	None	add
142	[BUG]  [BUGGY]  double  xB=  y[0];  xB=  y[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]          AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[0];  xB=  y[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[0];    xB=  y[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	23	None	add
143	[BUG]  [BUGGY]  double  xB=  y[adjChangeIndex];  [CE]  cannot  find  symbol  adjChangeIndex  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[adjChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[adjChangeIndex];	  double    xB=    y[signChangeIndex];    double    xB=    y[adjChangeIndex];    	non-compiled	[CE]  cannot  find  symbol  adjChangeIndex	47	None	replace
144	[BUG]  [BUGGY]  double  xB=  tmpX[age];  [CE]  cannot  find  symbol  age  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[age];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[age];	  double    xB=    tmpX[bPoints];    	non-compiled	[CE]  cannot  find  symbol  age	19	None	replace
145	[BUG]  [BUGGY]  double  yA  =  FastMath.abs(y);  [CE]  variable  yA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yA  =  FastMath.abs(y);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yA  =  FastMath.abs(y);	  double    yA    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  yA  is  already  defined  in  method  doSolve()	63	None	replace
146	[BUG]  [BUGGY]  double  yA  =  FastMath.abs(yB);  [CE]  variable  yA  is  already  defined  in  method  doSolve()  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yA  =  FastMath.abs(yB);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yA  =  FastMath.abs(yB);	  double    yA    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  yA  is  already  defined  in  method  doSolve()	63	None	replace
147	[BUG]  [BUGGY]  double  yA  =  FastMath.abs(yA,  agingA);  [CE]  variable  yA  is  already  defined  in  method  doSolve()  [FE]                        TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yA  =  FastMath.abs(yA,  agingA);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yA  =  FastMath.abs(yA,  agingA);	  double    yA    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  yA  is  already  defined  in  method  doSolve()	63	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[2];	  double    xB=    tmpX[1];    	compilable	  [FE]  AssertionError  	44	5	replace
149	[BUG]  [BUGGY]  double  xB=  tmpX[2];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[2];	  double    xB=    tmpX[1];    	compilable	  [FE]  AssertionError  	44	5	replace
150	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[a.length  +  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[a.length  +  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[a.length  +  1];	  final    double[]    xA    =    new    double[a.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	62	None	replace
151	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[a.length  -  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[a.length  -  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[a.length  -  1];	  final    double[]    xA    =    new    double[a.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	62	None	replace
152	[BUG]  [BUGGY]  double  xA  =  tmpX[yA];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  tmpX[yA];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  tmpX[yA];	  double    xA    =    x[yA];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	82	None	replace
153	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(y));  [CE]  no  suitable  method  found  for  abs(double[])  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(y));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(y));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yB));    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[])	67	None	replace
154	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xB));  [CE]  cannot  find  symbol  xB  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yB));    	non-compiled	[CE]  cannot  find  symbol  xB	67	None	replace
155	[BUG]  [BUGGY]  double  xB=  tmpX[1];  double  xB=  tmpX[1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  double  xB=  tmpX[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[1];    double  xB=  tmpX[1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	43	None	add
156	[BUG]  [BUGGY]  double  xB=  tmpX[1];  Double  xB=  tmpX[1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  Double  xB=  tmpX[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[1];    Double  xB=  tmpX[1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	43	None	add
157	[BUG]  [BUGGY]  double  xB=  tmpX[1];  int  xB=  tmpX[1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]        AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  int  xB=  tmpX[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[1];    int  xB=  tmpX[1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	43	None	add
158	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(xA,  absYA);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingA  =  FastMath.abs(xA,  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(xA,  absYA);	  double    agingA    =    FastMath.abs(xA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	33	None	replace
159	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(xB);  [CE]  variable  xB  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB  =  FastMath.abs(xB);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB  =  FastMath.abs(xB);	  double    xB    =    FastMath.abs(xA);    	non-compiled	[CE]  variable  xB  might  not  have  been  initialized	66	None	replace
160	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(x);  [CE]  no  suitable  method  found  for  abs(double[])  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB  =  FastMath.abs(x);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB  =  FastMath.abs(x);	  double    xB    =    FastMath.abs(xA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double[])	66	None	replace
161	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(xb);  [CE]  cannot  find  symbol  xb  [FE]        AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB  =  FastMath.abs(xb);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB  =  FastMath.abs(xb);	  double    xB    =    FastMath.abs(xA);    	non-compiled	[CE]  cannot  find  symbol  xb	66	None	replace
162	[BUG]  [BUGGY]  double  xA  =  tmpX[a];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  tmpX[a];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  tmpX[a];	  double    xA    =    x[a];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	71	None	replace
163	[BUG]  [BUGGY]  double  xB=  x[2];  double  xB=  x[2];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    TooManyEvaluationsException    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[2];  double  xB=  x[2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[2];    double  xB=  x[2];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	57	None	add
164	[BUG]  [BUGGY]  double  xB=  x[2];  Double  xB=  x[2];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      TooManyEvaluationsException    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[2];  Double  xB=  x[2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[2];    Double  xB=  x[2];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	57	None	add
165	[BUG]  [BUGGY]  double  xB=  x[2];  int  xB=  x[2];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]        TooManyEvaluationsException    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[2];  int  xB=  x[2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[2];    int  xB=  x[2];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	57	None	add
166	[BUG]  [BUGGY]  double  xB=  x[2];  xB=  x[2];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]          TooManyEvaluationsException    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[2];  xB=  x[2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    x[2];    xB=  x[2];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	57	None	add
167	[BUG]  [BUGGY]  double  xB=  tmpX[1];  Double  xB=  x[1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[1];  Double  xB=  x[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[1];  Double  xB=  x[1];	  double    xB=    x[1];    Double    xB=    x[1];    	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	15	None	replace
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  xB=  x[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	Double  xB=  x[1];	  double    xB=    x[1];    Double    xB=    x[1];    	compilable	  [FE]  AssertionError  	15	7	replace
169	[BUG]  [BUGGY]  Double  xB=  x[1];  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  xB=  x[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  xB=  x[1];	  double    xB=    x[1];    Double    xB=    x[1];    	compilable	  [FE]  AssertionError  	15	7	replace
170	[BUG]  [BUGGY]  double  yB  =  FastMath.abs(yA,  agingA);  [CE]  no  suitable  method  found  for  abs(double,int)  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  FastMath.abs(yA,  agingA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  FastMath.abs(yA,  agingA);	  double    yB    =    FastMath.abs(yA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,int)	1	None	replace
171	[BUG]  [BUGGY]  int  xB=  tmpX[signChangeIndex];  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  xB=  tmpX[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  xB=  tmpX[signChangeIndex];	  double    xB=    tmpX[signChangeIndex];    int    xB=    tmpX[signChangeIndex];    	non-compiled	[CE]  possible  loss  of  precision	79	None	replace
172	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yY),  FastMath.abs(yB));  [CE]  cannot  find  symbol  yY  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yY),  FastMath.abs(yB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yY),  FastMath.abs(yB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(yB));    	non-compiled	[CE]  cannot  find  symbol  yY	75	None	replace
173	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(w));  [CE]  cannot  find  symbol  w  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(w));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(w));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(yB));    	non-compiled	[CE]  cannot  find  symbol  w	75	None	replace
174	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  x[signChangeIndex  -  1];	  double    xB=    tmpX[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	74	7	replace
175	[BUG]  [BUGGY]  double  xB=  x[signChangeIndex  -  1];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[signChangeIndex  -  1];	  double    xB=    tmpX[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	74	7	replace
176	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[x.length  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[x.length  -  1];	  double    xB=    tmpX[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	74	5	replace
177	[BUG]  [BUGGY]  double  xB=  tmpX[x.length  -  1];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[x.length  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[x.length  -  1];	  double    xB=    tmpX[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	74	5	replace
178	[BUG]  [BUGGY]  double  xB=  x[tmpX],  absYA,  agingA;  [CE]  incompatible  types  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[tmpX],  absYA,  agingA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[tmpX],  absYA,  agingA;	  double    xB=    x[tmpX],    absYA;    	non-compiled	[CE]  incompatible  types	52	None	replace
179	[BUG]  [BUGGY]  double  xB=  x[tmpX],  yA,  absYA;  [CE]  incompatible  types  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[tmpX],  yA,  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[tmpX],  yA,  absYA;	  double    xB=    x[tmpX],    absYA;    	non-compiled	[CE]  incompatible  types	52	None	replace
180	[BUG]  [BUGGY]  double  xB=  tmpX[xA],  absYA;  [CE]  possible  loss  of  precision  [FE]                        TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[xA],  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[xA],  absYA;	  double    xB=    x[tmpX],    absYA;    	non-compiled	[CE]  possible  loss  of  precision	52	None	replace
181	[BUG]  [BUGGY]  double  xB=  tmpX[0],  absYA;  [CE]  variable  absYA  is  already  defined  in  method  doSolve()  [FE]                          TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0],  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0],  absYA;	  double    xB=    x[tmpX],    absYA;    	non-compiled	[CE]  variable  absYA  is  already  defined  in  method  doSolve()	52	None	replace
182	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(yA,  absYA  +  1);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingA  =  FastMath.abs(yA,  absYA  +  1);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(yA,  absYA  +  1);	  double    agingA    =    FastMath.abs(yA,    absYA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	31	None	replace
183	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(yA,  absY);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingA  =  FastMath.abs(yA,  absY);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(yA,  absY);	  double    agingA    =    FastMath.abs(yA,    absYA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	31	None	replace
184	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(yA,  absYA  +  2);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingA  =  FastMath.abs(yA,  absYA  +  2);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(yA,  absYA  +  2);	  double    agingA    =    FastMath.abs(yA,    absYA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	31	None	replace
185	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  absYA);  [CE]  possible  loss  of  precision  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  absYA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  absYA);	  int    agingB    =    getAbsoluteAccuracy()    +    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
186	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA,  absYA));  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA,  absYA));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA,  absYA));	  int    agingB    =    getAbsoluteAccuracy()    +    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	6	None	replace
187	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  double  xB=  tmpX[signChangeIndex  -  1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  double  xB=  tmpX[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[signChangeIndex    -    1];    double  xB=  tmpX[signChangeIndex  -  1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	73	None	add
188	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  Double  xB=  tmpX[signChangeIndex  -  1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  Double  xB=  tmpX[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[signChangeIndex    -    1];    Double  xB=  tmpX[signChangeIndex  -  1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	73	None	add
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  xB=  x[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	Double  xB=  x[0];	  double    xB=    x[0];    Double    xB=    x[0];    	compilable	  [FE]  AssertionError  	39	7	replace
190	[BUG]  [BUGGY]  Double  xB=  x[0];  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  xB=  x[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  xB=  x[0];	  double    xB=    x[0];    Double    xB=    x[0];    	compilable	  [FE]  AssertionError  	39	7	replace
191	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  -  1];  double  yB=  y[signChangeIndex  -  1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  1];  double  yB=  y[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    y[signChangeIndex    -    1];    double  yB=  y[signChangeIndex  -  1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	83	None	add
192	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(bsYB);  [CE]  cannot  find  symbol  bsYB  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(bsYB);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(bsYB);	  double    agingB    =    FastMath.abs(yB);    	non-compiled	[CE]  cannot  find  symbol  bsYB	76	None	replace
193	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[a.length  *  2];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[a.length  *  2];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[a.length  *  2];	  final    double[]    xA    =    new    double[a.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	62	None	replace
194	[BUG]  [BUGGY]  double  xB=  tmpX[as];  [CE]  cannot  find  symbol  as  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[as];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[as];	  double    xB=    tmpX[bPoints];    	non-compiled	[CE]  cannot  find  symbol  as	19	None	replace
195	[BUG]  [BUGGY]  double  xB=  y[astY];  [CE]  cannot  find  symbol  astY  [FE]                AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[astY];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[astY];	  double    xB=    y[signChangeIndex];    double    xB=    y[astY];    	non-compiled	[CE]  cannot  find  symbol  astY	49	None	replace
196	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  -  1];  double  yB=  y[signChangeIndex];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]        AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  1];  double  yB=  y[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[signChangeIndex  -  1];  double  yB=  y[signChangeIndex];	  double    xB=    y[signChangeIndex];    double    yB=    y[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	69	None	replace
197	[BUG]  [BUGGY]  double  xB=  tmpX[0];  long  xB=  tmpX[0];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  long  xB=  tmpX[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[0];    long  xB=  tmpX[0];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	12	None	add
198	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(xB));  [CE]  cannot  find  symbol  yB  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(xB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(xB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(xB));    	non-compiled	[CE]  cannot  find  symbol  yB	56	None	replace
199	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(yB));  [CE]  cannot  find  symbol  yB  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(yB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(yB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(xB));    	non-compiled	[CE]  cannot  find  symbol  yB	56	None	replace
200	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[yA];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[yA];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[yA];	  final    double[]    xA    =    new    double[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	21	None	replace
201	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[absYA];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[absYA];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[absYA];	  final    double[]    xA    =    new    double[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	21	None	replace
202	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(xA);  double  yB  =  FastMath.abs(xA);  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB  =  FastMath.abs(xA);  double  yB  =  FastMath.abs(xA);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB    =    FastMath.abs(xA);    double  yB  =  FastMath.abs(xA);	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	65	None	add
203	[BUG]  [BUGGY]  double  xB=  y[as];  [CE]  cannot  find  symbol  as  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[as];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[as];	  double    xB=    y[bPoints];    	non-compiled	[CE]  cannot  find  symbol  as	26	None	replace
204	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[bsYA];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[bsYA];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[bsYA];	  final    double[]    xA    =    new    double[s.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	22	None	replace
205	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(bsYA));  [CE]  cannot  find  symbol  bsYA  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(bsYA));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(bsYA));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yB));    	non-compiled	[CE]  cannot  find  symbol  bsYA	67	None	replace
206	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(yA,  absYB);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingA  =  FastMath.abs(yA,  absYB);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(yA,  absYB);	  double    agingA    =    FastMath.abs(yA,    absYA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	31	None	replace
207	[BUG]  [BUGGY]  double  xB=  tmpX[relativeAccuracyIndex];  [CE]  cannot  find  symbol  relativeAccuracyIndex  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[relativeAccuracyIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[relativeAccuracyIndex];	  double    xB=    tmpX[xA];    	non-compiled	[CE]  cannot  find  symbol  relativeAccuracyIndex	88	None	replace
208	[BUG]  [BUGGY]  Integer  agingB  =  FastMath.abs(yA);  [CE]  incompatible  types  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Integer  agingB  =  FastMath.abs(yA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Integer  agingB  =  FastMath.abs(yA);	  long    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  incompatible  types	9	None	replace
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex  -  2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[signChangeIndex  -  2];	  double    xB=    tmpX[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	74	9	replace
210	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex  -  2];  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex  -  2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex  -  2];	  double    xB=    tmpX[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	74	9	replace
211	[BUG]  [BUGGY]  Double  yA  =  FastMath.abs(yA);  [CE]  variable  yA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  yA  =  FastMath.abs(yA);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  yA  =  FastMath.abs(yA);	  double    yA    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  yA  is  already  defined  in  method  doSolve()	63	None	replace
212	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[asYA];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[asYA];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[asYA];	  final    double[]    xA    =    new    double[as.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	61	None	replace
213	[BUG]  [BUGGY]  double  xB=  tmpX[b];  [CE]  cannot  find  symbol  b  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[b];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[b];	  double    xB=    tmpX[a];    	non-compiled	[CE]  cannot  find  symbol  b	4	None	replace
214	[BUG]  [BUGGY]  final  double  yB  =  y[a];  [CE]  cannot  find  symbol  a  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double  yB  =  y[a];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double  yB  =  y[a];	  final    double    yB    =    y[signChangeIndex];    	non-compiled	[CE]  cannot  find  symbol  a	64	None	replace
215	[BUG]  [BUGGY]  final  double  yB  =  y[bPoints];  [CE]  cannot  find  symbol  bPoints  [FE]                        TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double  yB  =  y[bPoints];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double  yB  =  y[bPoints];	  final    double    yB    =    y[signChangeIndex];    	non-compiled	[CE]  cannot  find  symbol  bPoints	64	None	replace
216	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  1]  +  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  y[signChangeIndex  -  1]  +  absYA;	  double    xB=    y[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	84	5	replace
217	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  -  1]  +  absYA;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  1]  +  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[signChangeIndex  -  1]  +  absYA;	  double    xB=    y[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	84	5	replace
218	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  y[signChangeIndex  -  2];	  double    xB=    y[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	84	9	replace
219	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  -  2];  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  2];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[signChangeIndex  -  2];	  double    xB=    y[signChangeIndex    -    1];    	compilable	  [FE]  AssertionError  	84	9	replace
220	[BUG]  [BUGGY]  double  xA  =  x[0]  +  getAbsoluteAccuracy();  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  x[0]  +  getAbsoluteAccuracy();  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[0]  +  getAbsoluteAccuracy();	  double    xA    =    x[0];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	28	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  xB=  x[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[0];  xB=  x[1];	  double    xB=    x[0];    xB=    x[0];    	compilable	  [FE]  AssertionError  	41	7	replace
222	[BUG]  [BUGGY]  double  xB=  tmpX[0];  xB=  x[1];  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[0];  xB=  x[1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[0];  xB=  x[1];	  double    xB=    x[0];    xB=    x[0];    	compilable	  [FE]  AssertionError  	41	7	replace
223	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yB));  [CE]  cannot  find  symbol  yB  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yB));	  int    agingB    =    getAbsoluteAccuracy()    +    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  cannot  find  symbol  yB	6	None	replace
224	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  fastMath.abs(agingB));  [CE]  cannot  find  symbol  fastMath  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  fastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  fastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    +    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  cannot  find  symbol  fastMath	6	None	replace
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex]  +  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[signChangeIndex]  +  absYA;	  double    xB=    x[tmpX]    +    absYA;    	compilable	  [FE]  AssertionError  	51	4	replace
226	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex]  +  absYA;  [FE]  AssertionError  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex]  +  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex]  +  absYA;	  double    xB=    x[tmpX]    +    absYA;    	compilable	  [FE]  AssertionError  	51	4	replace
227	[BUG]  [BUGGY]  double  xB=  x[tmpX]  +  absYB;  [CE]  incompatible  types  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[tmpX]  +  absYB;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[tmpX]  +  absYB;	  double    xB=    x[tmpX]    +    absYA;    	non-compiled	[CE]  incompatible  types	51	None	replace
228	[BUG]  [BUGGY]  int  xB=  x[0];  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  xB=  x[0];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  xB=  x[0];	  double    xB=    x[0];    int    xB=    x[0];    	non-compiled	[CE]  possible  loss  of  precision	40	None	replace
229	[BUG]  [BUGGY]  double  xB=  yA[a];  [CE]  cannot  find  symbol  a  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  yA[a];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  yA[a];	  double    xB=    y[a];    	non-compiled	[CE]  cannot  find  symbol  a	77	None	replace
230	[BUG]  [BUGGY]  double  xA  =  x[a].length;  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  x[a].length;  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[a].length;	  double    xA    =    x[a];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	71	None	replace
231	[BUG]  [BUGGY]  double  xB  =  FastMath.abs(xC);  [CE]  cannot  find  symbol  xC  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB  =  FastMath.abs(xC);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB  =  FastMath.abs(xC);	  double    xB    =    FastMath.abs(xA);    	non-compiled	[CE]  cannot  find  symbol  xC	66	None	replace
232	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  int  xB=  tmpX[signChangeIndex  -  1];  [CE]  variable  xB  is  already  defined  in  method  doSolve()  [FE]    AssertionError    [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  int  xB=  tmpX[signChangeIndex  -  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double    xB=    tmpX[signChangeIndex    -    1];    int  xB=  tmpX[signChangeIndex  -  1];	  	non-compiled	[CE]  variable  xB  is  already  defined  in  method  doSolve()	73	None	add
233	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xB),  FastMath.abs(agingB));  [CE]  cannot  find  symbol  xB  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xB),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(xB),  FastMath.abs(agingB));	  double    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  cannot  find  symbol  xB	55	None	replace
234	[BUG]  [BUGGY]  double  yB  =  FastMath.abs(yb);  [CE]  cannot  find  symbol  yb  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  FastMath.abs(yb);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  FastMath.abs(yb);	  double    yB    =    FastMath.abs(y);    	non-compiled	[CE]  cannot  find  symbol  yb	2	None	replace
235	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB));  [CE]  cannot  find  symbol  yB  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB));	  double    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  cannot  find  symbol  yB	7	None	replace
236	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(tmpX,  yA);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingA  =  FastMath.abs(tmpX,  yA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(tmpX,  yA);	  double    agingA    =    FastMath.abs(tmpX);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	32	None	replace
237	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  double  yB=  tmpX[signChangeIndex];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1];  double  yB=  tmpX[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex  -  1];  double  yB=  tmpX[signChangeIndex];	  double    xB=    tmpX[signChangeIndex];    double    yB=    tmpX[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	80	None	replace
238	[BUG]  [BUGGY]  double  xA  =  x[this.signChangeIndex  -  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  x[this.signChangeIndex  -  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[this.signChangeIndex  -  1];	  double    xA    =    x[signChangeIndex    -    1];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	81	None	replace
239	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(bsY,  xA);  [CE]  cannot  find  symbol  bsY  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(bsY,  xA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(bsY,  xA);	  double    agingB    =    FastMath.abs(xA,    absYA);    	non-compiled	[CE]  cannot  find  symbol  bsY	59	None	replace
240	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(absYA,  xA);  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(absYA,  xA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(absYA,  xA);	  double    agingB    =    FastMath.abs(xA,    absYA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	59	None	replace
241	[BUG]  [BUGGY]  Double  agingB  =  FastMath.abs(yB);  [CE]  cannot  find  symbol  yB  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  agingB  =  FastMath.abs(yB);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  agingB  =  FastMath.abs(yB);	  Double    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  cannot  find  symbol  yB	11	None	replace
242	[BUG]  [BUGGY]  double  xB=  x[tmpX],  absYA  +  1;  [CE]  ';'  expected  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[tmpX],  absYA  +  1;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[tmpX],  absYA  +  1;	  double    xB=    x[tmpX],    absYA;    	non-compiled	[CE]  ';'  expected	52	None	replace
243	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(yA));  [CE]  cannot  find  symbol  yB  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(yA));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(yA));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(yB));    	non-compiled	[CE]  cannot  find  symbol  yB	75	None	replace
244	[BUG]  [BUGGY]  double  xA  =  x[2];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  x[2];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[2];	  double    xA    =    x[1];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	72	None	replace
245	[BUG]  [BUGGY]  double  yB  =  y[a];  [CE]  cannot  find  symbol  a  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  y[a];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  y[a];	  double    yB    =    y[signChangeIndex];    	non-compiled	[CE]  cannot  find  symbol  a	42	None	replace
246	[BUG]  [BUGGY]  double  yB  =  y[bPoints];  [CE]  cannot  find  symbol  bPoints  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  y[bPoints];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  y[bPoints];	  double    yB    =    y[signChangeIndex];    	non-compiled	[CE]  cannot  find  symbol  bPoints	42	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  +  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  y[signChangeIndex  +  1];	  double    xB=    y[signChangeIndex];    double    xB=    y[signChangeIndex].;    	compilable	  [FE]  AssertionError  	87	5	replace
248	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  +  1];  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  +  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[signChangeIndex  +  1];	  double    xB=    y[signChangeIndex];    double    xB=    y[signChangeIndex].;    	compilable	  [FE]  AssertionError  	87	5	replace
249	[BUG]  [BUGGY]  Double  agingB  =  FastMath.abs(agingB);  [CE]  variable  agingB  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  Double  agingB  =  FastMath.abs(agingB);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	Double  agingB  =  FastMath.abs(agingB);	  Double    agingB    =    FastMath.abs(yA);    	non-compiled	[CE]  variable  agingB  is  already  defined  in  method  doSolve()	11	None	replace
250	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1].;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1].;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex  -  1].;	  double    xB=    tmpX[signChangeIndex];    double    xB=    tmpX[signChangeIndex].;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
251	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(abbsYA,  xA);  [CE]  cannot  find  symbol  abbsYA  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(abbsYA,  xA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(abbsYA,  xA);	  double    agingB    =    FastMath.abs(xA,    absYA);    	non-compiled	[CE]  cannot  find  symbol  abbsYA	59	None	replace
252	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(astYB,  xA);  [CE]  cannot  find  symbol  astYB  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(astYB,  xA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(astYB,  xA);	  double    agingB    =    FastMath.abs(xA,    absYA);    	non-compiled	[CE]  cannot  find  symbol  astYB	59	None	replace
253	[BUG]  [BUGGY]  double  xxB=  tmpX[a];  [CE]  cannot  find  symbol  a  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xxB=  tmpX[a];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xxB=  tmpX[a];	  double    xB=    y[a];    	non-compiled	[CE]  cannot  find  symbol  a	77	None	replace
254	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(agingA);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingA  =  FastMath.abs(agingA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(agingA);	  double    agingA    =    FastMath.abs(xA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	33	None	replace
255	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(tmpXA);  [CE]  cannot  find  symbol  tmpXA  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(tmpXA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(tmpXA);	  double    agingB    =    FastMath.abs(tmpX);    	non-compiled	[CE]  cannot  find  symbol  tmpXA	29	None	replace
256	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex  -  1].;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex  -  1].;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[signChangeIndex  -  1].;	  double    xB=    y[signChangeIndex];    double    xB=    y[signChangeIndex].;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
257	[BUG]  [BUGGY]  double  xB=  y[signChangeIndex].;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  y[signChangeIndex].;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  y[signChangeIndex].;	  double    xB=    y[signChangeIndex];    double    xB=    y[signChangeIndex].;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
258	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(abbsYA,  yA);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingA  =  FastMath.abs(abbsYA,  yA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(abbsYA,  yA);	  double    agingA    =    FastMath.abs(yA,    absYA);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	31	None	replace
259	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[a.length].toString();  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[a.length].toString();  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[a.length].toString();	  final    double[]    xA    =    new    double[a.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	62	None	replace
260	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[xA];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[xA];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[xA];	  final    double[]    xA    =    new    double[signChangeIndex];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	21	None	replace
261	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1],;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex  -  1],;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex  -  1],;	  double    xB=    tmpX[signChangeIndex];    double    xB=    tmpX[signChangeIndex],;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[signChangeIndex]  +  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  x[signChangeIndex]  +  absYA;	  double    xB=    x[tmpX]    +    absYA;    	compilable	  [FE]  AssertionError  	51	3	replace
263	[BUG]  [BUGGY]  double  xB=  x[signChangeIndex]  +  absYA;  [FE]  AssertionError  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[signChangeIndex]  +  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[signChangeIndex]  +  absYA;	  double    xB=    x[tmpX]    +    absYA;    	compilable	  [FE]  AssertionError  	51	3	replace
264	[BUG]  [BUGGY]  double  xB=  x[tmpX]  +  absYA  *  2;  [CE]  incompatible  types  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  x[tmpX]  +  absYA  *  2;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  x[tmpX]  +  absYA  *  2;	  double    xB=    x[tmpX]    +    absYA;    	non-compiled	[CE]  incompatible  types	51	None	replace
265	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex  +  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	add	double  xB=  tmpX[signChangeIndex  +  1];	  double    xB=    tmpX[signChangeIndex];    Double    xB=    tmpX[signChangeIndex];    	compilable	  [FE]  AssertionError  	35	5	replace
266	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex  +  1];  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex  +  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex  +  1];	  double    xB=    tmpX[signChangeIndex];    Double    xB=    tmpX[signChangeIndex];    	compilable	  [FE]  AssertionError  	35	5	replace
267	[BUG]  [BUGGY]  double  xA  =  x[yA  -  1];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xA  =  x[yA  -  1];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xA  =  x[yA  -  1];	  double    xA    =    x[signChangeIndex    -    1];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	81	None	replace
268	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[as.length  *  2];  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[as.length  *  2];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[as.length  *  2];	  final    double[]    xA    =    new    double[as.length];    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	61	None	replace
269	[BUG]  [BUGGY]  final  double[]  yA  =  new  double[as.length];  [CE]  variable  yA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  yA  =  new  double[as.length];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  yA  =  new  double[as.length];	  final    double[]    xA    =    new    double[as.length];    	non-compiled	[CE]  variable  yA  is  already  defined  in  method  doSolve()	61	None	replace
270	[BUG]  [BUGGY]  final  double  yB  =  y[signChangeIndex  +  1];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]                      TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double  yB  =  y[signChangeIndex  +  1];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double  yB  =  y[signChangeIndex  +  1];	  final    double    yB    =    y[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	64	None	replace
271	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(agingA,  agingB);  [CE]  no  suitable  method  found  for  abs(int,double)  [FE]            TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(agingA,  agingB);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(agingA,  agingB);	  double    agingB    =    FastMath.abs(agingA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,double)	89	None	replace
272	[BUG]  [BUGGY]  final  double[]  yA  =  new  double[yA.length];  [CE]  variable  yA  is  already  defined  in  method  doSolve()  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  yA  =  new  double[yA.length];  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  yA  =  new  double[yA.length];	  final    double[]    xA    =    new    double[yA.length];    	non-compiled	[CE]  variable  yA  is  already  defined  in  method  doSolve()	60	None	replace
273	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(agingA));  [CE]  no  suitable  method  found  for  max(int)  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(agingA));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(agingA));	  double    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  no  suitable  method  found  for  max(int)	7	None	replace
274	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(agingB));  [CE]  no  suitable  method  found  for  max(double)  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(agingB));	  double    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA));    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	7	None	replace
275	[BUG]  [BUGGY]  double  xB=  tmpX[signChangeIndex],  absYA;  [CE]  variable  absYA  is  already  defined  in  method  doSolve()  [FE]                    TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[signChangeIndex],  absYA;  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[signChangeIndex],  absYA;	  double    xB=    x[tmpX],    absYA;    	non-compiled	[CE]  variable  absYA  is  already  defined  in  method  doSolve()	52	None	replace
276	[BUG]  [BUGGY]  double  yB  =  FastMath.abs(yC);  [CE]  cannot  find  symbol  yC  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  FastMath.abs(yC);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  FastMath.abs(yC);	  double    yB    =    FastMath.abs(yA);    	non-compiled	[CE]  cannot  find  symbol  yC	1	None	replace
277	[BUG]  [BUGGY]  double  yB  =  FastMath.abs(yA,  agingB);  [CE]  cannot  find  symbol  agingB  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB  =  FastMath.abs(yA,  agingB);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB  =  FastMath.abs(yA,  agingB);	  double    yB    =    FastMath.abs(y);    	non-compiled	[CE]  cannot  find  symbol  agingB	2	None	replace
278	[BUG]  [BUGGY]  double  xB=  tmpX[xA],  xA);  [CE]  ';'  expected  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[xA],  xA);  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[xA],  xA);	  double    xB=    tmpX[xA];    	non-compiled	[CE]  ';'  expected	88	None	replace
279	[BUG]  [BUGGY]  double  agingA  =  FastMath.abs(y);  [CE]  variable  agingA  is  already  defined  in  method  doSolve()  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingA  =  FastMath.abs(y);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingA  =  FastMath.abs(y);	  double    agingA    =    FastMath.abs(yB);    	non-compiled	[CE]  variable  agingA  is  already  defined  in  method  doSolve()	68	None	replace
280	[BUG]  [BUGGY]  double  agingB  =  FastMath.abs(absYA,  yA);  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  FastMath.abs(absYA,  yA);  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  FastMath.abs(absYA,  yA);	  double    agingB    =    FastMath.abs(yA,    absYA);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	30	None	replace
281	[BUG]  [BUGGY]  double  xB=  tmpX[bPoint];  [CE]  cannot  find  symbol  bPoint  [FE]            AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  xB=  tmpX[bPoint];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  xB=  tmpX[bPoint];	  double    xB=    y[bPoints];    	non-compiled	[CE]  cannot  find  symbol  bPoint	26	None	replace
282	[BUG]  [BUGGY]  final  double[]  xA  =  new  double[XA].length;  [CE]  variable  xA  is  already  defined  in  method  doSolve()  [FE]                  TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  final  double[]  xA  =  new  double[XA].length;  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	final  double[]  xA  =  new  double[XA].length;	  final    double[]    xA    =    new    double[xA].length;    	non-compiled	[CE]  variable  xA  is  already  defined  in  method  doSolve()	92	None	replace
283	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [CE]  possible  loss  of  precision  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  +  FastMath.max(FastMath.abs(yA),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    +    FastMath.max(FastMath.abs(xA));    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
284	[BUG]  [BUGGY]  double  yB=  tmpX[signChangeIndex];  [CE]  variable  yB  is  already  defined  in  method  doSolve()  [FE]          AssertionError      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  yB=  tmpX[signChangeIndex];  [BUGGY]      double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  yB=  tmpX[signChangeIndex];	  double    xB=    tmpX[signChangeIndex];    double    yB=    tmpX[signChangeIndex];    	non-compiled	[CE]  variable  yB  is  already  defined  in  method  doSolve()	80	None	replace
285	[BUG]  [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(yB));  [CE]  cannot  find  symbol  yB  [FE]              TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(yB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	double  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yA),  FastMath.abs(yB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(yB));    	non-compiled	[CE]  cannot  find  symbol  yB	75	None	replace
286	[BUG]  [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(agingB));  [CE]  cannot  find  symbol  yB  [FE]                TooManyEvaluationsException      [CONTEXT]      }  final  double[]  tmpX  =  new  double[x.length];  double  xA=  x[signChangeIndex  -  1];  double  yA=  y[signChangeIndex  -  1];  double  absYA  =  FastMath.abs(yA);  int  agingA  =  0;      [BUGGY]  int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(agingB));  [BUGGY]      double  xB=  x[signChangeIndex];  double  yB=  y[signChangeIndex];  double  absYB  =  FastMath.abs(yB);  int  agingB  =  0;  while  (true)  {  final  double  xTol  =  getAbsoluteAccuracy()  +  getRelativeAccuracy()  *  FastMath.max(FastMath.abs(xA),  FastMath.abs(xB));  [CLASS]  BracketingNthOrderBrentSolver  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  boolean  double[]  tmpX  x  y  double  DEFAULT_ABSOLUTE_ACCURACY  REDUCTION_FACTOR  absYA  absYB  absoluteAccuracy  functionValueAccuracy  nextX  nextY  relativeAccuracy  targetY  xA  xB  xTol  yA  yB  int  DEFAULT_MAXIMAL_ORDER  MAXIMAL_AGING  agingA  agingB  end  maximalOrder  nbPoints  signChangeIndex  start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	202	202	1	replace	int  agingB  =  getAbsoluteAccuracy()  *  FastMath.max(FastMath.abs(yB),  FastMath.abs(agingB));	  int    agingB    =    getAbsoluteAccuracy()    *    FastMath.max(FastMath.abs(yA),    FastMath.abs(yB));    	non-compiled	[CE]  cannot  find  symbol  yB	75	None	replace
