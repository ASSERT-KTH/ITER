bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	153	None	replace
2	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	153	None	replace
3	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  not  a  statement	153	None	replace
4	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	153	None	replace
5	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  [CE]  not  a  statement  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  not  a  statement	153	None	replace
6	[BUG]  [BUGGY]  return  block.clone()  ||  NodeUtil.isFunctionAnonymous(block);  [CE]  clone()  has  protected  access  in  Object  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  ||  NodeUtil.isFunctionAnonymous(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  ||  NodeUtil.isFunctionAnonymous(block);	  return    block.clone()    &&    NodeUtil.isFunctionAnonymous(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	64	None	replace
7	[BUG]  [BUGGY]  return  block.clone()  &&  NodeUtil.isAnonymous(block);  [CE]  clone()  has  protected  access  in  Object  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  &&  NodeUtil.isAnonymous(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  &&  NodeUtil.isAnonymous(block);	  return    block.clone()    &&    NodeUtil.isFunctionAnonymous(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	64	None	replace
8	[BUG]  [BUGGY]  return  block!=  null  &&  NodeUtil.isFunctionAnonymous(block);  [CE]  cannot  find  symbol  NodeUtil  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null  &&  NodeUtil.isFunctionAnonymous(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null  &&  NodeUtil.isFunctionAnonymous(block);	  return    block.clone()    &&    NodeUtil.isFunctionAnonymous(block);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	64	None	replace
9	[BUG]  [BUGGY]  return  block.clone()  &&  NodeUtil.isExpressionNode(block);  [CE]  clone()  has  protected  access  in  Object  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  &&  NodeUtil.isExpressionNode(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  &&  NodeUtil.isExpressionNode(block);	  return    block.clone()    &&    NodeUtil.isFunctionAnonymous(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	64	None	replace
10	[BUG]  [BUGGY]  return  block.clone()  &&  NodeUtil.isFunctionAnonymous(this.block);  [CE]  clone()  has  protected  access  in  Object  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  &&  NodeUtil.isFunctionAnonymous(this.block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  &&  NodeUtil.isFunctionAnonymous(this.block);	  return    block.clone()    &&    NodeUtil.isFunctionAnonymous(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	64	None	replace
11	[BUG]  [BUGGY]  return  block.clone()  &&  NodeUtil.isName(block);  [CE]  clone()  has  protected  access  in  Object  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  &&  NodeUtil.isName(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  &&  NodeUtil.isName(block);	  return    block.clone()    &&    NodeUtil.isFunctionAnonymous(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	64	None	replace
12	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  tokenName  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  tokenName	29	None	replace
13	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  token  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  token	29	None	replace
14	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  token  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  token	29	None	replace
15	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  symbol	29	None	replace
16	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	228	None	replace
17	[BUG]  [BUGGY]  node!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  not  a  statement	228	None	replace
18	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	228	None	replace
19	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	228	None	replace
20	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.TRY);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.TRY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.TRY);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.TRY);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	119	None	replace
21	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  [CE]  not  a  statement  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.TRY);    	non-compiled	[CE]  not  a  statement	119	None	replace
22	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.TRY);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	119	None	replace
23	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	59	None	replace
24	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	59	None	replace
25	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  name  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  name	59	None	replace
26	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  name);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  name);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	59	None	replace
27	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	59	None	replace
28	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  symbol);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  symbol);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  symbol);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	59	None	replace
29	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  token.node);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  token.node);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  token.node);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	59	None	replace
30	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	77	None	replace
31	[BUG]  [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);  [CE]  not  a  statement  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(null);    	non-compiled	[CE]  not  a  statement	77	None	replace
32	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	77	None	replace
33	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  node  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  getName());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol  node	200	None	replace
34	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName());  [CE]  :  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  :  expected	200	None	replace
35	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK,  getName());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK,  getName());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
36	[BUG]  [BUGGY]  return  block!=  null?  getName().cloneTree()  :  Node.newString(Token.NAME,  block.cloneTree());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  getName().cloneTree()  :  Node.newString(Token.NAME,  block.cloneTree());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  getName().cloneTree()  :  Node.newString(Token.NAME,  block.cloneTree());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
37	[BUG]  [BUGGY]  return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  token  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  getName());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol  token	200	None	replace
38	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
39	[BUG]  [BUGGY]  if(block!=  null)return  null;  if(block.getType()  ==  Token.OBJECTLIT)  {  return  block.clone();  }  [CE]  clone()  has  protected  access  in  Object  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)return  null;  if(block.getType()  ==  Token.OBJECTLIT)  {  return  block.clone();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)return  null;  if(block.getType()  ==  Token.OBJECTLIT)  {  return  block.clone();  }	  return    block!=    null?    null    :    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	61	None	replace
40	[BUG]  [BUGGY]  if(block!=  null)return  null;  if(block.getType()  ==  Token.NAME)  {  return  block.clone();  }  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)return  null;  if(block.getType()  ==  Token.NAME)  {  return  block.clone();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)return  null;  if(block.getType()  ==  Token.NAME)  {  return  block.clone();  }	  return    block!=    null?    null    :    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	61	None	replace
41	[BUG]  [BUGGY]  if(block!=  null)return  null;  if(block.getType()  ==  Token.BLOCK)  {  return  block.clone();  }  [CE]  clone()  has  protected  access  in  Object  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)return  null;  if(block.getType()  ==  Token.BLOCK)  {  return  block.clone();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)return  null;  if(block.getType()  ==  Token.BLOCK)  {  return  block.clone();  }	  return    block!=    null?    null    :    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	61	None	replace
42	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFULT_NAME);  [CE]  cannot  find  symbol  DEFULT_NAME  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFULT_NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFULT_NAME);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFULT_NAME	233	None	replace
43	[BUG]  [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	233	None	replace
44	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME);  [CE]  cannot  find  symbol  node  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  node	233	None	replace
45	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  NAME);  [CE]  cannot  find  symbol  NAME  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  NAME);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  NAME	233	None	replace
46	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());  [CE]  cannot  find  symbol  compiler  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    IllegalStateException());    	non-compiled	[CE]  cannot  find  symbol  compiler	152	None	replace
47	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());  [CE]  cannot  find  symbol  compiler  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    IllegalStateException());    	non-compiled	[CE]  cannot  find  symbol  compiler	152	None	replace
48	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    IllegalStateException());    	non-compiled	[CE]  not  a  statement	152	None	replace
49	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  this);  [CE]  cannot  find  symbol  node  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  this);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    this);    	non-compiled	[CE]  cannot  find  symbol  node	181	None	replace
50	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  false);  [CE]  no  suitable  method  found  for  newString(int,int,boolean)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  false);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    this);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,boolean)	181	None	replace
51	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  null);  [CE]  no  suitable  method  found  for  newString(int,int,<null>)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  null);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    this);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,<null>)	181	None	replace
52	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  is);  [CE]  cannot  find  symbol  is  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  is);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  is);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    this);    	non-compiled	[CE]  cannot  find  symbol  is	181	None	replace
53	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
54	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  null?  null  :  block.cloneNode();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  null?  null  :  block.cloneNode();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  null?  null  :  block.cloneNode();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
55	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
56	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
57	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.FOR);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.FOR);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
58	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.GETPROP);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.GETPROP);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
59	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
60	[BUG]  [BUGGY]  return  this.block!=  null?  null  :  block.cloneTree();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  this.block!=  null?  null  :  block.cloneTree();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  this.block!=  null?  null  :  block.cloneTree();	  return    block!=    null?    null    :    block.cloneTree();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	replace
61	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.clonePath();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.clonePath();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.clonePath();	  return    block!=    null?    null    :    block.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  token,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  token,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  token,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
63	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
64	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  constructor,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
65	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  globalName,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  globalName,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  globalName,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
66	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
68	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	38	None	replace
69	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  tokenName  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  tokenName	38	None	replace
70	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	38	None	replace
71	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  symbol  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  symbol	38	None	replace
72	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	40	None	replace
73	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	40	None	replace
74	[BUG]  [BUGGY]  Node  block  =  null?  null  :  block.cloneTree();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  null?  null  :  block.cloneTree();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  null?  null  :  block.cloneTree();	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    null?    null    :    block.cloneTree();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	115	None	replace
75	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  null?  null  :  block.cloneTree();  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  null?  null  :  block.cloneTree();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  null?  null  :  block.cloneTree();	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    null?    null    :    block.cloneTree();    	non-compiled	[CE]  not  a  statement	115	None	replace
76	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  null?  null  :  block.cloneTree();  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  null?  null  :  block.cloneTree();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  null?  null  :  block.cloneTree();  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    null?    null    :    block.cloneTree();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	115	None	replace
77	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getId()));  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getId()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getId()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getId()));    	non-compiled	[CE]  ';'  expected	82	None	replace
78	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getStatement()));  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getStatement()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getStatement()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getId()));    	non-compiled	[CE]  ';'  expected	82	None	replace
79	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.GETPROP);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.GETPROP);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.GETPROP));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	47	None	replace
80	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.GETPROP));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	47	None	replace
81	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.GETPROP));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	47	None	replace
82	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.GETPROP));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	47	None	replace
83	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.GETPROP);  block.addChildToBack(new  Node(Token.GETPROP));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.GETPROP);  block.addChildToBack(new  Node(Token.GETPROP));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.GETPROP);  block.addChildToBack(new  Node(Token.GETPROP));	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.GETPROP));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	47	None	replace
84	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.NAME);	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	123	None	replace
85	[BUG]  [BUGGY]  node  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  not  a  statement	123	None	replace
86	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	123	None	replace
87	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  node  =  new  Node(Token.BLOCK);  [CE]  cannot  find  symbol  node  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  node  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block;  node  =  new  Node(Token.BLOCK);	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  node	123	None	replace
88	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  valueOf  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    String.valueOf):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  valueOf	173	None	replace
89	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.EMPTY):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  EMPTY  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.EMPTY):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.EMPTY):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    String.valueOf):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  EMPTY	173	None	replace
90	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  valueOf  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    String.valueOf):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  valueOf	173	None	replace
91	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.class):  Node.newString(Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,Class<String>)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.class):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.class):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    String.valueOf):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Class<String>)	173	None	replace
92	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.UTF8):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  UTF8  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.UTF8):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.UTF8):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    String.valueOf):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  UTF8	173	None	replace
93	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.EMPTY);  [CE]  cannot  find  symbol  EMPTY  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.EMPTY);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  EMPTY	169	None	replace
94	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.BLOCK);  [CE]  cannot  find  symbol  BLOCK  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.BLOCK);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	169	None	replace
95	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.STRING);  [CE]  cannot  find  symbol  STRING  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.STRING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.STRING);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  STRING	169	None	replace
96	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.ARRAY);  [CE]  cannot  find  symbol  ARRAY  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.ARRAY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.ARRAY);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  ARRAY	169	None	replace
97	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.PLAIN);  [CE]  cannot  find  symbol  PLAIN  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.PLAIN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.PLAIN);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  PLAIN	169	None	replace
98	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.OBJECT);  [CE]  cannot  find  symbol  OBJECT  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.OBJECT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.OBJECT);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  OBJECT	169	None	replace
99	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	237	None	replace
100	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  not  a  statement	237	None	replace
101	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.NAME);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.NAME);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.NAME);  block.setString(Token.NAME);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	237	None	replace
102	[BUG]  [BUGGY]  Node  block  =  null?  null  :  block;  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  null?  null  :  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  null?  null  :  block;	  return    block    ==    null?    null    :    block;    Node    block    =    null?    null    :    block;    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	72	None	replace
103	[BUG]  [BUGGY]  return  block!=  null?  null  :  block;  Node  block  =  null?  null  :  block;  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block;  Node  block  =  null?  null  :  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block;  Node  block  =  null?  null  :  block;	  return    block    ==    null?    null    :    block;    Node    block    =    null?    null    :    block;    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	72	None	replace
104	[BUG]  [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  null?  null  :  block;  [CE]  not  a  statement  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  null?  null  :  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block;  Node  block  =  null?  null  :  block;	  return    block    ==    null?    null    :    block;    Node    block    =    null?    null    :    block;    	non-compiled	[CE]  not  a  statement	72	None	replace
105	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRChildren());  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRChildren());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  IRChildren());	  NodeTraversal.traverse(compiler,    block,    new    IRChildren());    	non-compiled	[CE]  cannot  find  symbol  compiler	53	None	replace
106	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRChildren());  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRChildren());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  new  IRChildren());	  NodeTraversal.traverse(compiler,    block,    new    IRChildren());    	non-compiled	[CE]  cannot  find  symbol  compiler	53	None	replace
107	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRChildren());  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRChildren());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  new  IRChildren());	  NodeTraversal.traverse(compiler,    block,    new    IRChildren());    	non-compiled	[CE]  cannot  find  symbol  compiler	53	None	replace
108	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRChildren());  [CE]  cannot  find  symbol  compiler  [FE]                                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRChildren());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  constructor,  new  IRChildren());	  NodeTraversal.traverse(compiler,    block,    new    IRChildren());    	non-compiled	[CE]  cannot  find  symbol  compiler	53	None	replace
109	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  rootNode,  new  IRChildren());  [CE]  cannot  find  symbol  compiler  [FE]                                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  rootNode,  new  IRChildren());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  rootNode,  new  IRChildren());	  NodeTraversal.traverse(compiler,    block,    new    IRChildren());    	non-compiled	[CE]  cannot  find  symbol  compiler	53	None	replace
110	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  IRChildren());  [CE]  cannot  find  symbol  compiler  [FE]                                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  new  IRChildren());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  new  IRChildren());	  NodeTraversal.traverse(compiler,    block,    new    IRChildren());    	non-compiled	[CE]  cannot  find  symbol  compiler	53	None	replace
111	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.SEMI);  [CE]  cannot  find  symbol  node  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.SEMI);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.SEMI);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.SEMI);    	non-compiled	[CE]  cannot  find  symbol  node	148	None	replace
112	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
113	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  node  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  node  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  node  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  node  :  Node.newString(Token.NAME,  getName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol  node	202	None	replace
114	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  getName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
115	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  new  Node(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  new  Node(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  new  Node(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
116	[BUG]  [BUGGY]  return  node.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  node  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  node.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  node.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol  node	202	None	replace
117	[BUG]  [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK);  [CE]  clone()  has  protected  access  in  Object  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK);	  return    block.clone()?    Node.newString(Token.NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	63	None	replace
118	[BUG]  [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.CALL);  [CE]  clone()  has  protected  access  in  Object  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.CALL);	  return    block.clone()?    Node.newString(Token.NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	63	None	replace
119	[BUG]  [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.FOR);  [CE]  clone()  has  protected  access  in  Object  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.FOR);	  return    block.clone()?    Node.newString(Token.NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	63	None	replace
120	[BUG]  [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.GETPROP);  [CE]  clone()  has  protected  access  in  Object  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.GETPROP);	  return    block.clone()?    Node.newString(Token.NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	63	None	replace
121	[BUG]  [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.DECEMBER);  [CE]  clone()  has  protected  access  in  Object  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.DECEMBER);	  return    block.clone()?    Node.newString(Token.NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	63	None	replace
122	[BUG]  [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.FLOAT);  [CE]  clone()  has  protected  access  in  Object  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.FLOAT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.FLOAT);	  return    block.clone()?    Node.newString(Token.NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	63	None	replace
123	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0,  1);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0,  1);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	230	None	replace
124	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  2);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  2);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  2);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	230	None	replace
125	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	230	None	replace
126	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  1);  [CE]  cannot  find  symbol  node  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  1);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    1);    	non-compiled	[CE]  cannot  find  symbol  node	230	None	replace
127	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  4);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  4);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  4);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	230	None	replace
128	[BUG]  [BUGGY]  return  block!=  null?  Token.NAME  :  Node.newString(Token.NAME,  Token.BLOCK,  1);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Token.NAME  :  Node.newString(Token.NAME,  Token.BLOCK,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Token.NAME  :  Node.newString(Token.NAME,  Token.BLOCK,  1);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	230	None	replace
129	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.newString(Token.BLOCK);  [CE]  cannot  find  symbol  Block  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  Block.newString(Token.BLOCK);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  Block	189	None	replace
130	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.CALL);  [CE]  cannot  find  symbol  Block  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.CALL);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  Block	189	None	replace
131	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.newString(Token.NAME);  [CE]  cannot  find  symbol  Block  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  Block.newString(Token.NAME);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  Block	189	None	replace
132	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.SEMI);  [CE]  cannot  find  symbol  SEMI  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.SEMI);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.SEMI);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  SEMI	189	None	replace
133	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder());  [CE]  cannot  find  symbol  node  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  cannot  find  symbol  node	232	None	replace
134	[BUG]  [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder());  [CE]  no  suitable  method  found  for  newString(int,int,StringBuilder)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,StringBuilder)	232	None	replace
135	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder());  [CE]  cannot  find  symbol  Block  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  cannot  find  symbol  Block	232	None	replace
136	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  builder,  new  StringBuilder());  [CE]  cannot  find  symbol  builder  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  builder,  new  StringBuilder());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  builder,  new  StringBuilder());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  cannot  find  symbol  builder	232	None	replace
137	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder()):  Node.newString(Token.NAME,  block,  new  StringBuilder());  [CE]  no  suitable  method  found  for  newString(int,int,StringBuilder)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder()):  Node.newString(Token.NAME,  block,  new  StringBuilder());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder()):  Node.newString(Token.NAME,  block,  new  StringBuilder());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,StringBuilder)	232	None	replace
138	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  token);  [CE]  cannot  find  symbol  token  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  token);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  token);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    symbol);    	non-compiled	[CE]  cannot  find  symbol  token	91	None	replace
139	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  null);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    symbol);    	compilable	  [FE]  IllegalArgumentException  	91	3	replace
140	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  null);  [FE]  IllegalArgumentException  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  null);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    symbol);    	compilable	  [FE]  IllegalArgumentException  	91	3	replace
141	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  SHORT);  [CE]  cannot  find  symbol  SHORT  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  SHORT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  SHORT);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  SHORT	178	None	replace
142	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  1);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  1);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    DEFAULT_NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	178	None	replace
143	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  NAME);  [CE]  cannot  find  symbol  NAME  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  NAME);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  NAME	178	None	replace
144	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.GETPROP);  [CE]  not  a  statement  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.GETPROP);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.GETPROP);    	non-compiled	[CE]  not  a  statement	118	None	replace
145	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.GETPROP);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.GETPROP);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.GETPROP);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	118	None	replace
146	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
147	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  null?  null  :  block.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  null?  null  :  block.getFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    Node  block  =  null?  null  :  block.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
148	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    Node  block  =  null?  null  :  block.getLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
149	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
150	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
151	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    Node  block  =  new  Node(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
152	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
153	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.GETPROP);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    Node  block  =  new  Node(Token.GETPROP);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
154	[BUG]  [BUGGY]  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  not  a  statement  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;	  result.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  not  a  statement	67	None	replace
155	[BUG]  [BUGGY]  node.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  not  a  statement  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;	  result.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  not  a  statement	67	None	replace
156	[BUG]  [BUGGY]  Node.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  not  a  statement  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;	  result.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  not  a  statement	67	None	replace
157	[BUG]  [BUGGY]  result.getType()!=  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  not  a  statement  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  result.getType()!=  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	result.getType()!=  Token.NAME?  block.getType()  :  Token.BLOCK;	  result.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  not  a  statement	67	None	replace
158	[BUG]  [BUGGY]  result.getType()  ==  Token.NAME?  block.getType()  :  Token.CALL;  [CE]  not  a  statement  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  result.getType()  ==  Token.NAME?  block.getType()  :  Token.CALL;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	result.getType()  ==  Token.NAME?  block.getType()  :  Token.CALL;	  result.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  not  a  statement	67	None	replace
159	[BUG]  [BUGGY]  return  block  ==  null?  block.clone()  :  new  Node(Token.BLOCK);  [CE]  clone()  has  protected  access  in  Object  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.clone()  :  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.clone()  :  new  Node(Token.BLOCK);	  return    block!=    null?    block.clone()    :    new    Node(Token.BLOCK);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	246	None	replace
160	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  new  Node(Token.BLOCK,  block);  [CE]  clone()  has  protected  access  in  Object  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  new  Node(Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  new  Node(Token.BLOCK,  block);	  return    block!=    null?    block.clone()    :    new    Node(Token.BLOCK);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	246	None	replace
161	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  new  Node(Token.BLOCK,  Block.EMPTY);  [CE]  clone()  has  protected  access  in  Object  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  new  Node(Token.BLOCK,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  new  Node(Token.BLOCK,  Block.EMPTY);	  return    block!=    null?    block.clone()    :    new    Node(Token.BLOCK);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	246	None	replace
162	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  new  Node(Token.BLOCK,  this);  [CE]  clone()  has  protected  access  in  Object  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  new  Node(Token.BLOCK,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  new  Node(Token.BLOCK,  this);	  return    block!=    null?    block.clone()    :    new    Node(Token.BLOCK);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	246	None	replace
163	[BUG]  [BUGGY]  return  block!=  null?  Block.clone()  :  new  Node(Token.BLOCK);  [CE]  cannot  find  symbol  Block  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.clone()  :  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.clone()  :  new  Node(Token.BLOCK);	  return    block!=    null?    block.clone()    :    new    Node(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  Block	246	None	replace
164	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  SHORT);  [CE]  cannot  find  symbol  SHORT  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  SHORT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  SHORT);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  SHORT	180	None	replace
165	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT);  [CE]  cannot  find  symbol  DEFAULT  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	180	None	replace
166	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_TOKEN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_TOKEN);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    BLOCK);    	compilable	  [FE]  IllegalArgumentException  	180	3	replace
167	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_TOKEN);  [FE]  IllegalArgumentException  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_TOKEN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_TOKEN);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    BLOCK);    	compilable	  [FE]  IllegalArgumentException  	180	3	replace
168	[BUG]  [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getString()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block.getType()  ==  Token.NAME?  block.getString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getString()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	223	None	replace
169	[BUG]  [BUGGY]  return  block.getType()!=  Token.NAME?  block.getString()  :  Token.BLOCK;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()!=  Token.NAME?  block.getString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()!=  Token.NAME?  block.getString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getString()    :    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	223	None	replace
170	[BUG]  [BUGGY]  result.getType()  ==  Token.NAME?  block.getString()  :  Token.BLOCK;  [CE]  not  a  statement  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  result.getType()  ==  Token.NAME?  block.getString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	result.getType()  ==  Token.NAME?  block.getString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getString()    :    Token.BLOCK;    	non-compiled	[CE]  not  a  statement	223	None	replace
171	[BUG]  [BUGGY]  Return  block.getType()  ==  Token.NAME?  block.getString()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Return  block.getType()  ==  Token.NAME?  block.getString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Return  block.getType()  ==  Token.NAME?  block.getString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getString()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	223	None	replace
172	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  new  Node(Token.NAME,  getSourceName()):  Node.newString(Token.NAME,  getSourceName());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  new  Node(Token.NAME,  getSourceName()):  Node.newString(Token.NAME,  getSourceName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  new  Node(Token.NAME,  getSourceName()):  Node.newString(Token.NAME,  getSourceName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getSourceName());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
173	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getSourceName());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getSourceName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getSourceName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getSourceName());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
174	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  node  :  Node.newString(Token.NAME,  getSourceName());  [CE]  cannot  find  symbol  node  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  node  :  Node.newString(Token.NAME,  getSourceName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  node  :  Node.newString(Token.NAME,  getSourceName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getSourceName());    	non-compiled	[CE]  cannot  find  symbol  node	201	None	replace
175	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  getSourceName());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  getSourceName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  getSourceName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getSourceName());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
176	[BUG]  [BUGGY]  return  node.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getSourceName());  [CE]  cannot  find  symbol  node  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  node.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getSourceName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  node.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getSourceName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getSourceName());    	non-compiled	[CE]  cannot  find  symbol  node	201	None	replace
177	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getLastChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	166	None	replace
178	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getLastChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	166	None	replace
179	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getLastChild());    	non-compiled	[CE]  not  a  statement	166	None	replace
180	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getLastChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	166	None	replace
181	[BUG]  [BUGGY]  return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  token  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  token	24	None	replace
182	[BUG]  [BUGGY]  return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.NAME);  [CE]  int  cannot  be  dereferenced  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
183	[BUG]  [BUGGY]  return  block!=  null?  Token.BLOCK.cloneTree()  :  Node.newString(Token.NAME);  [CE]  int  cannot  be  dereferenced  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Token.BLOCK.cloneTree()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Token.BLOCK.cloneTree()  :  Node.newString(Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
184	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR);  [CE]  cannot  find  symbol  node  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  cannot  find  symbol  node	146	None	replace
185	[BUG]  [BUGGY]  return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR);  [CE]  cannot  find  symbol  token  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  cannot  find  symbol  token	146	None	replace
186	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  name);  [CE]  cannot  find  symbol  name  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  name);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  cannot  find  symbol  name	146	None	replace
187	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.FOR):  Node.newString(Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.FOR):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.FOR):  Node.newString(Token.NAME,  block);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	146	None	replace
188	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR);  [CE]  cannot  find  symbol  Block  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  cannot  find  symbol  Block	146	None	replace
189	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.FOR,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.FOR,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.FOR,  Token.NAME);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	146	None	replace
190	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.FOR,  Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.FOR,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.FOR,  Token.BLOCK);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	146	None	replace
191	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()));  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getLocalName()));    	non-compiled	[CE]  ';'  expected	79	None	replace
192	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getReturnType()));  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getReturnType()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getReturnType()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getLocalName()));    	non-compiled	[CE]  ';'  expected	79	None	replace
193	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_BLOCK);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_BLOCK);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	203	None	replace
194	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  1);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  1);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	203	None	replace
195	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  SYNTHETIC);  [CE]  cannot  find  symbol  SYNTHETIC  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  SYNTHETIC);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  SYNTHETIC);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC	203	None	replace
196	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_FIELD);  [CE]  cannot  find  symbol  DEFAULT_FIELD  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_FIELD);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_FIELD);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FIELD	203	None	replace
197	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  PROPERTY);  [CE]  cannot  find  symbol  PROPERTY  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  PROPERTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  PROPERTY);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	203	None	replace
198	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	138	None	add
199	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  null?  null  :  block.getNext();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  null?  null  :  block.getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    Node  block  =  null?  null  :  block.getNext();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	138	None	add
200	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	138	None	add
201	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	138	None	add
202	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	138	None	add
203	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	138	None	add
204	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	138	None	add
205	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  node  ==  null?  null  :  block.getNext();  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  node  ==  null?  null  :  block.getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    node  ==  null?  null  :  block.getNext();	  	non-compiled	[CE]  not  a  statement	138	None	add
206	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  BLOCK  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	221	None	replace
207	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	221	None	replace
208	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  TOKEN_NAME):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  Node.newString(Token.NAME,  TOKEN_NAME):  Node.newString(Token.NAME,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	compilable	  [FE]  IllegalArgumentException  	221	3	replace
209	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  TOKEN_NAME):  Node.newString(Token.NAME,  BLOCK);  [FE]  IllegalArgumentException  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  TOKEN_NAME):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  TOKEN_NAME):  Node.newString(Token.NAME,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	compilable	  [FE]  IllegalArgumentException  	221	3	replace
210	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  BLOCK  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	221	None	replace
211	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  MISSING);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  MISSING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  MISSING);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	221	None	replace
212	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  Block.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  Block.EMPTY);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	221	None	replace
213	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  MISSING_BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  MISSING_BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  MISSING_BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	221	None	replace
214	[BUG]  [BUGGY]  Node  block  =  null?  null  :  block.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  null?  null  :  block.getFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  null?  null  :  block.getFirstChild();	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getFirstChild();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	98	None	replace
215	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  null?  null  :  block.getFirstChild();  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  null?  null  :  block.getFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  null?  null  :  block.getFirstChild();	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getFirstChild();    	non-compiled	[CE]  not  a  statement	98	None	replace
216	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getFirstChild();    	non-compiled	[CE]  not  a  statement	98	None	replace
217	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  block);  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this,  block);	  NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	49	None	replace
218	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  null);  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  null);	  NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	49	None	replace
219	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  this);  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  this);	  NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	49	None	replace
220	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  this,  null);  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  this,  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  this,  null);	  NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	49	None	replace
221	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  false);  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  false);	  NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	49	None	replace
222	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  this);	  NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	49	None	replace
223	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	73	None	replace
224	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	73	None	replace
225	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	73	None	replace
226	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	73	None	replace
227	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	73	None	replace
228	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.TRY);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	235	None	replace
229	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.TRY);    block.addChildToBack(block);    	non-compiled	[CE]  not  a  statement	235	None	replace
230	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
231	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  null?  null  :  block.getLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  null?  null  :  block.getLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  null?  null  :  block.getLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
232	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  null?  null  :  block.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  null?  null  :  block.getFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  null?  null  :  block.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
233	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
234	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
235	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
236	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.GETPROP);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.GETPROP);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
237	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
238	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.CALL);  [CE]  clone()  has  protected  access  in  Object  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	244	None	replace
239	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.FOR);  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.FOR);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	244	None	replace
240	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.VAR);  [CE]  clone()  has  protected  access  in  Object  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.VAR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.VAR);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	244	None	replace
241	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  clone()  has  protected  access  in  Object  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	244	None	replace
242	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.GETPROP);  [CE]  clone()  has  protected  access  in  Object  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.GETPROP);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	244	None	replace
243	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.SEMI);  [CE]  clone()  has  protected  access  in  Object  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.SEMI);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.SEMI);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	244	None	replace
244	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
245	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.valueOf(Token.CALL):  Node.newString(Token.NAME);  [CE]  ')'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.valueOf(Token.CALL):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.valueOf(Token.CALL):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  ')'  expected	30	None	replace
246	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
247	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
248	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
249	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.DECEMBER);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.DECEMBER);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
250	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.EMPTY);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
251	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT);  [CE]  cannot  find  symbol  DEFAULT  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	90	None	replace
252	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  NO_TYPE);  [CE]  cannot  find  symbol  NO_TYPE  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  NO_TYPE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  NO_TYPE);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  NO_TYPE	90	None	replace
253	[BUG]  [BUGGY]  Node  node  ==  null?  null  :  block.getLastChild();  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  node  ==  null?  null  :  block.getLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  node  ==  null?  null  :  block.getLastChild();	  return    block    ==    null?    null    :    block.getFirstChild();    node    ==    null?    null    :    block.getLastChild();    	non-compiled	[CE]  ';'  expected	103	None	replace
254	[BUG]  [BUGGY]  Node  node  ==  null?  null  :  block.getFirstChild();  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  node  ==  null?  null  :  block.getFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  node  ==  null?  null  :  block.getFirstChild();	  return    block    ==    null?    null    :    block.getFirstChild();    node    ==    null?    null    :    block.getLastChild();    	non-compiled	[CE]  ';'  expected	103	None	replace
255	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  node  ==  null?  null  :  block.getLastChild();  [CE]  not  a  statement  [FE]                        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  node  ==  null?  null  :  block.getLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getFirstChild();  node  ==  null?  null  :  block.getLastChild();	  return    block    ==    null?    null    :    block.getFirstChild();    node    ==    null?    null    :    block.getLastChild();    	non-compiled	[CE]  not  a  statement	103	None	replace
256	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getLastChild();  [CE]  not  a  statement  [FE]                          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getLastChild();	  return    block    ==    null?    null    :    block.getFirstChild();    node    ==    null?    null    :    block.getLastChild();    	non-compiled	[CE]  not  a  statement	103	None	replace
257	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	27	None	replace
258	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	27	None	replace
259	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	27	None	replace
260	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  cannot  find  symbol  name  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  name	27	None	replace
261	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  name);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  name);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	27	None	replace
262	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  this);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  this);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	27	None	replace
263	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  new  StringBuilder());  [CE]  no  suitable  method  found  for  newString(int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  new  StringBuilder());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  new  StringBuilder());	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	27	None	replace
264	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf(Token.CALL):  Node.newString(Token.NAME);  [CE]  ')'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf(Token.CALL):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf(Token.CALL):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  ')'  expected	57	None	replace
265	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	57	None	replace
266	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.CALL);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	57	None	replace
267	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.CALL);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	57	None	replace
268	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	57	None	replace
269	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.DECEMBER);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.DECEMBER);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	57	None	replace
270	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  block);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	239	None	replace
271	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  EXPR_RESULT):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  EXPR_RESULT):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  EXPR_RESULT):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	239	None	replace
272	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  TOKEN_NAME):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block  ==  null?  Node.newString(Token.NAME,  TOKEN_NAME):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	compilable	  [FE]  IllegalArgumentException  	239	3	replace
273	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  TOKEN_NAME):  Node.newString(Token.NAME,  BLOCK);  [FE]  IllegalArgumentException  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  TOKEN_NAME):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  TOKEN_NAME):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	compilable	  [FE]  IllegalArgumentException  	239	3	replace
274	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  MISSING);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  MISSING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  MISSING);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	239	None	replace
275	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	229	None	replace
276	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	229	None	replace
277	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
278	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	229	None	replace
279	[BUG]  [BUGGY]  node!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [CE]  not  a  statement  [FE]                    NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  not  a  statement	229	None	replace
280	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLocalName();  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLocalName();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getLocalName();	  return    block!=    null?    null    :    block.getName();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
281	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent().getName();  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent().getName();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getParent().getName();	  return    block!=    null?    null    :    block.getName();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
282	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToFront(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToFront(this);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToFront(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	248	None	replace
283	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.NAME);  block.addChildToFront(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.NAME);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.NAME);  block.addChildToFront(this);	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToFront(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	248	None	replace
284	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  tokenName  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  tokenName	174	None	replace
285	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  token  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  token	174	None	replace
286	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  token  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  token	174	None	replace
287	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  MockImpl());  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  MockImpl());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  MockImpl());	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
288	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  MockImpl());  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  MockImpl());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  new  MockImpl());	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
289	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  MockImpl());  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  MockImpl());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  IR,  new  MockImpl());	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
290	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  MockImpl());  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  MockImpl());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  new  MockImpl());	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
291	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  MockImpl(),  null);  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  MockImpl(),  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  MockImpl(),  null);	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
292	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  MockImpl());  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  MockImpl());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  constructor,  new  MockImpl());	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
293	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild().getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  null  :  block.getFirstChild().getNext();	  return    block    ==    null?    null    :    block.getFirstChild().getNext();    	compilable	  [FE]  NullPointerException  	210	3	replace
294	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild().getNext();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild().getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getFirstChild().getNext();	  return    block    ==    null?    null    :    block.getFirstChild().getNext();    	compilable	  [FE]  NullPointerException  	210	3	replace
295	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild().getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block  ==  null?  null  :  block.getLastChild().getNext();	  return    block    ==    null?    null    :    block.getFirstChild().getNext();    	compilable	  [FE]  NullPointerException  	210	3	replace
296	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild().getNext();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild().getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getLastChild().getNext();	  return    block    ==    null?    null    :    block.getFirstChild().getNext();    	compilable	  [FE]  NullPointerException  	210	3	replace
297	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getParent();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block  ==  null?  null  :  block.getFirstChild().getParent();	  return    block    ==    null?    null    :    block.getFirstChild().getNext();    	compilable	  [FE]  NullPointerException  	210	3	replace
298	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getParent();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getParent();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getFirstChild().getParent();	  return    block    ==    null?    null    :    block.getFirstChild().getNext();    	compilable	  [FE]  NullPointerException  	210	3	replace
299	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild().getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  null  :  block.getLastChild().getNext();	  return    block    ==    null?    null    :    block.getFirstChild().getNext();    	compilable	  [FE]  NullPointerException  	210	3	replace
300	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild().getNext();  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild().getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getLastChild().getNext();	  return    block    ==    null?    null    :    block.getFirstChild().getNext();    	compilable	  [FE]  NullPointerException  	210	3	replace
301	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.BLOCK):  block.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.BLOCK):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.BLOCK):  block.clone();	  return    block!=    null?    new    Node(Token.BLOCK):    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	151	None	replace
302	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK,  Token.NAME):  block.clone();  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK,  Token.NAME):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.BLOCK,  Token.NAME):  block.clone();	  return    block!=    null?    new    Node(Token.BLOCK):    block.clone();    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	151	None	replace
303	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK),  block.clone();  [CE]  :  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK),  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.BLOCK),  block.clone();	  return    block!=    null?    new    Node(Token.BLOCK):    block.clone();    	non-compiled	[CE]  :  expected	151	None	replace
304	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  Block.clone();  [CE]  cannot  find  symbol  Block  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  Block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.BLOCK):  Block.clone();	  return    block!=    null?    new    Node(Token.BLOCK):    block.clone();    	non-compiled	[CE]  cannot  find  symbol  Block	151	None	replace
305	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  name  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  name	22	None	replace
306	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  name);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  name);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	22	None	replace
307	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	22	None	replace
308	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  symbol);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  symbol);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  symbol);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	22	None	replace
309	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	22	None	replace
310	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneBlock();  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneBlock();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneBlock();	  return    block    ==    null?    null    :    block.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
311	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent().cloneBlock();  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent().cloneBlock();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getParent().cloneBlock();	  return    block    ==    null?    null    :    block.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
312	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext().cloneBlock();  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext().cloneBlock();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getNext().cloneBlock();	  return    block    ==    null?    null    :    block.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
313	[BUG]  [BUGGY]  return  this.block  ==  null?  null  :  block.cloneBlock();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  this.block  ==  null?  null  :  block.cloneBlock();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  this.block  ==  null?  null  :  block.cloneBlock();	  return    block    ==    null?    null    :    block.cloneBlock();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	226	None	replace
314	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.NAME);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.NAME);    	non-compiled	[CE]  not  a  statement	116	None	replace
315	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.NAME);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	116	None	replace
316	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	127	None	replace
317	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	127	None	replace
318	[BUG]  [BUGGY]  return  block.clone()  ||  NodeUtil.isFunctionDeclaration(block);  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  ||  NodeUtil.isFunctionDeclaration(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  ||  NodeUtil.isFunctionDeclaration(block);	  return    block.clone()    &&    NodeUtil.isFunctionDeclaration(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	62	None	replace
319	[BUG]  [BUGGY]  return  block.clone()  &&  NodeUtil.isAssignmentOp(block);  [CE]  clone()  has  protected  access  in  Object  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  &&  NodeUtil.isAssignmentOp(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  &&  NodeUtil.isAssignmentOp(block);	  return    block.clone()    &&    NodeUtil.isFunctionDeclaration(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	62	None	replace
320	[BUG]  [BUGGY]  return  block.clone()  &&  NodeUtil.isVarDeclaration(block);  [CE]  clone()  has  protected  access  in  Object  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  &&  NodeUtil.isVarDeclaration(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  &&  NodeUtil.isVarDeclaration(block);	  return    block.clone()    &&    NodeUtil.isFunctionDeclaration(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	62	None	replace
321	[BUG]  [BUGGY]  return  block!=  null  &&  NodeUtil.isFunctionDeclaration(block);  [CE]  cannot  find  symbol  NodeUtil  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null  &&  NodeUtil.isFunctionDeclaration(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null  &&  NodeUtil.isFunctionDeclaration(block);	  return    block.clone()    &&    NodeUtil.isFunctionDeclaration(block);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	62	None	replace
322	[BUG]  [BUGGY]  return  block.clone()  &&  NodeUtil.isFunctionDeclaration(block,  false);  [CE]  clone()  has  protected  access  in  Object  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  &&  NodeUtil.isFunctionDeclaration(block,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  &&  NodeUtil.isFunctionDeclaration(block,  false);	  return    block.clone()    &&    NodeUtil.isFunctionDeclaration(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	62	None	replace
323	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
324	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
325	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.CALL);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.CALL);	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
326	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.SEMI);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.SEMI);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.SEMI);	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
327	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.FUNCTION);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.FUNCTION);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  new  Node(Token.FUNCTION);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
328	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  Node.newString(Token.NAME,  String.valueOf(true));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  Node.newString(Token.NAME,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  Node.newString(Token.NAME,  String.valueOf(true));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
329	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(true));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(true));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
330	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  Node.newString(Token.FUNCTION,  String.valueOf(true));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  Node.newString(Token.FUNCTION,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  Node.newString(Token.FUNCTION,  String.valueOf(true));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
331	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(false));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(false));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(false));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
332	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  Node.newString(Token.NAME,  String.valueOf(false));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  Node.newString(Token.NAME,  String.valueOf(false));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  Node.newString(Token.NAME,  String.valueOf(false));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
333	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.FOR,  String.valueOf(true));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.FOR,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  new  Node(Token.FOR,  String.valueOf(true));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
334	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.FOR);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  new  Node(Token.FOR);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
335	[BUG]  [BUGGY]  return  block  ==  null?  block.clone()  :  Node.newString(Token.NAME);  [CE]  clone()  has  protected  access  in  Object  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.clone()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.clone()  :  Node.newString(Token.NAME);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	243	None	replace
336	[BUG]  [BUGGY]  return  block!=  null?  node.clone()  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  node  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.clone()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.clone()  :  Node.newString(Token.NAME);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  node	243	None	replace
337	[BUG]  [BUGGY]  return  block!=  null?  Block.clone()  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  Block  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.clone()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.clone()  :  Node.newString(Token.NAME);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  Block	243	None	replace
338	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  name);  [CE]  clone()  has  protected  access  in  Object  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  name);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	243	None	replace
339	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRNodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRNodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  IRNodeTraversal());	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
340	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRNodeTraversal(),  null);  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRNodeTraversal(),  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IRNodeTraversal(),  null);	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
341	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRNodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRNodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  new  IRNodeTraversal());	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
342	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRNodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRNodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  new  IRNodeTraversal());	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
343	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  IRNodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  IRNodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  IR,  new  IRNodeTraversal());	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
344	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRNodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRNodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  constructor,  new  IRNodeTraversal());	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
345	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  false);  [CE]  no  suitable  method  found  for  newString(int,int,double,boolean)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  false);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,double,boolean)	16	None	replace
346	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  true);  [CE]  no  suitable  method  found  for  newString(int,int,double,boolean)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  true);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  true);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,double,boolean)	16	None	replace
347	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Boolean.TRUE);  [CE]  no  suitable  method  found  for  newString(int,int,double,Boolean)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Boolean.TRUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Boolean.TRUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,double,Boolean)	16	None	replace
348	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Long.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,double,long)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Long.MAX_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,double,long)	16	None	replace
349	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  double);  [CE]  '.class'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  double);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  double);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  '.class'  expected	16	None	replace
350	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);  [CE]  no  suitable  method  found  for  newString(int,int,double,double)  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,double,double)	16	None	replace
351	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
352	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  null?  null  :  block.cloneNode();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  null?  null  :  block.cloneNode();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    Node  block  =  null?  null  :  block.cloneNode();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
353	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
354	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
355	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
356	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
357	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
358	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
359	[BUG]  [BUGGY]  return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	15	None	replace
360	[BUG]  [BUGGY]  return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  int  cannot  be  dereferenced  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  int  cannot  be  dereferenced	15	None	replace
361	[BUG]  [BUGGY]  return  block!=  null?  tokens.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  tokens  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  tokens.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  tokens.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  tokens	15	None	replace
362	[BUG]  [BUGGY]  Node  block  =  null?  new  Node(Token.NAME):  block;  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  null?  new  Node(Token.NAME):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	122	None	replace
363	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Node  block  =  null?  new  Node(Token.NAME):  block;  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Node  block  =  null?  new  Node(Token.NAME):  block;  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Node  block  =  null?  new  Node(Token.NAME):  block;  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	122	None	replace
364	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  null?  new  Node(Token.NAME):  block;  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  null?  new  Node(Token.NAME):  block;  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  null?  new  Node(Token.NAME):  block;  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	122	None	replace
365	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  null?  new  Node(Token.NAME):  block;  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  null?  new  Node(Token.NAME):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	122	None	replace
366	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName());  [CE]  no  suitable  method  found  for  newString(int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName());	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()    +    1));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	159	None	replace
367	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  +  1);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  +  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  +  1);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()    +    1));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	159	None	replace
368	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  not  a  statement  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  not  a  statement	120	None	replace
369	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	120	None	replace
370	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	120	None	replace
371	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.CALL));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	74	None	replace
372	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.CALL));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	74	None	replace
373	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.CALL));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	74	None	replace
374	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.CALL));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	74	None	replace
375	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.valueOf(block);  [CE]  cannot  find  symbol  Block  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.valueOf(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  Block.valueOf(block);	  return    block!=    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  cannot  find  symbol  Block	133	None	replace
376	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.BLOCK;  [CE]  cannot  find  symbol  Block  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  Block.BLOCK;	  return    block!=    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  cannot  find  symbol  Block	133	None	replace
377	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.toString(block);  [CE]  cannot  find  symbol  Block  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.toString(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  Block.toString(block);	  return    block!=    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  cannot  find  symbol  Block	133	None	replace
378	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  name  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  cannot  find  symbol  name	197	None	replace
379	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  name);  [CE]  no  suitable  method  found  for  newString(int)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  name);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	197	None	replace
380	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  false);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  false);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	197	None	replace
381	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  symbol);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  symbol);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  symbol);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	197	None	replace
382	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  nameNode);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  nameNode);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  nameNode);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	197	None	replace
383	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  new  StringBuilder());  [CE]  no  suitable  method  found  for  newString(int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  new  StringBuilder());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block,  new  StringBuilder());	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	197	None	replace
384	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.BLOCK;  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME):    Block.BLOCK;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	135	None	replace
385	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Token.BLOCK;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Token.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME):    Block.BLOCK;    	non-compiled	[CE]  incompatible  types	135	None	replace
386	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.CALL;  [CE]  cannot  find  symbol  Block  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.CALL;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.CALL;	  return    block    ==    null?    new    Node(Token.NAME):    Block.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  Block	135	None	replace
387	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  name  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
388	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  false);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  false);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	12	None	replace
389	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	12	None	replace
390	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  name);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	12	None	replace
391	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  this);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  this);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	12	None	replace
392	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK),  Node.newString(Token.NAME,  block);  [CE]  :  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK),  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK),  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  :  expected	12	None	replace
393	[BUG]  [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.CALL;  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.CALL;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.CALL;	  Node    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	65	None	replace
394	[BUG]  [BUGGY]  Node  block.getType()!=  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block.getType()!=  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block.getType()!=  Token.NAME?  block.getType()  :  Token.BLOCK;	  Node    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	65	None	replace
395	[BUG]  [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FUNCTION;  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FUNCTION;	  Node    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	65	None	replace
396	[BUG]  [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FOR;  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FOR;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FOR;	  Node    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	65	None	replace
397	[BUG]  [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.STRING;  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.STRING;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.STRING;	  Node    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	65	None	replace
398	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRNode(Token.TRUE));  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRNode(Token.TRUE));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  new  IRNode(Token.TRUE));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
399	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRNode(Token.TRUE),  this);  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRNode(Token.TRUE),  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IRNode(Token.TRUE),  this);	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
400	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRNode(Token.TRUE));  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRNode(Token.TRUE));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  IRNode(Token.TRUE));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
401	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRNode(Token.TRUE));  [CE]  cannot  find  symbol  compiler  [FE]                                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRNode(Token.TRUE));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  new  IRNode(Token.TRUE));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
402	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  IRNode(Token.TRUE));  [CE]  cannot  find  symbol  compiler  [FE]                                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  IRNode(Token.TRUE));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  IR,  new  IRNode(Token.TRUE));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
403	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRNode(Token.TRUE),  false);  [CE]  cannot  find  symbol  compiler  [FE]                                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRNode(Token.TRUE),  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IRNode(Token.TRUE),  false);	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
404	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block);  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block);	  NodeTraversal.traverse(compiler,    block);    	non-compiled	[CE]  cannot  find  symbol  compiler	50	None	replace
405	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  block);  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  block);	  NodeTraversal.traverse(compiler,    block);    	non-compiled	[CE]  cannot  find  symbol  compiler	50	None	replace
406	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  IR);  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  IR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  IR);	  NodeTraversal.traverse(compiler,    block);    	non-compiled	[CE]  cannot  find  symbol  compiler	50	None	replace
407	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  true);  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  true);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  true);	  NodeTraversal.traverse(compiler,    block);    	non-compiled	[CE]  cannot  find  symbol  compiler	50	None	replace
408	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	184	None	replace
409	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	184	None	replace
410	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	184	None	replace
411	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
412	[BUG]  [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  }  );  [CE]  no  suitable  method  found  for  newString(int,int,String[])  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  }  );  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  }  );	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    String[]    {    }    );    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,String[])	231	None	replace
413	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  }  );  [CE]  cannot  find  symbol  node  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  }  );  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  }  );	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    String[]    {    }    );    	non-compiled	[CE]  cannot  find  symbol  node	231	None	replace
414	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  }  );  [CE]  cannot  find  symbol  Block  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  }  );  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  }  );	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    String[]    {    }    );    	non-compiled	[CE]  cannot  find  symbol  Block	231	None	replace
415	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  false);  [CE]  no  suitable  method  found  for  newString(int,int,String[],boolean)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  false);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    String[]    {    }    );    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,String[],boolean)	231	None	replace
416	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  this);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    String[]    {    }    );    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	231	None	replace
417	[BUG]  [BUGGY]  Node  node  ==  null?  new  Node(Token.NAME):  block;  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  node  ==  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  node  ==  null?  new  Node(Token.NAME):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    node    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  ';'  expected	126	None	replace
418	[BUG]  [BUGGY]  node  ==  null?  new  Node(Token.NAME):  block;  [CE]  not  a  statement  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  new  Node(Token.NAME):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    node    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  not  a  statement	126	None	replace
419	[BUG]  [BUGGY]  Node  node!=  null?  new  Node(Token.NAME):  block;  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  node!=  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  node!=  null?  new  Node(Token.NAME):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    node    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  ';'  expected	126	None	replace
420	[BUG]  [BUGGY]  if(block!=  null)  {  return  new  Node(Token.NAME):  block;  }  else  {  node  ==  null?  new  Node(Token.NAME):  block;  }  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  new  Node(Token.NAME):  block;  }  else  {  node  ==  null?  new  Node(Token.NAME):  block;  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  new  Node(Token.NAME):  block;  }  else  {  node  ==  null?  new  Node(Token.NAME):  block;  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    node    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  ';'  expected	126	None	replace
421	[BUG]  [BUGGY]  return  block.getType()!=  Token.NAME?  block.getType()  :  Token.CALL;  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()!=  Token.NAME?  block.getType()  :  Token.CALL;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()!=  Token.NAME?  block.getType()  :  Token.CALL;	  return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.CALL;    	non-compiled	[CE]  incompatible  types	225	None	replace
422	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.GETPROP;  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.GETPROP;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.GETPROP;	  return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.CALL;    	non-compiled	[CE]  incompatible  types	225	None	replace
423	[BUG]  [BUGGY]  Return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.CALL;  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.CALL;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.CALL;	  return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.CALL;    	non-compiled	[CE]  ';'  expected	225	None	replace
424	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getFirstChild());    	non-compiled	[CE]  not  a  statement	211	None	replace
425	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	211	None	replace
426	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	211	None	replace
427	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()));  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getSimpleName()));    	non-compiled	[CE]  ';'  expected	81	None	replace
428	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getFunctionName()));  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getFunctionName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getFunctionName()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getSimpleName()));    	non-compiled	[CE]  ';'  expected	81	None	replace
429	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  null?  null  :  block.getFirstChild().getNext();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  null?  null  :  block.getFirstChild().getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  null?  null  :  block.getFirstChild().getNext();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
430	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
431	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  null?  null  :  block.getLastChild().getNext();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  null?  null  :  block.getLastChild().getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  null?  null  :  block.getLastChild().getNext();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
432	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
433	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
434	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
435	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.FOR);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.FOR);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
436	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.GETPROP);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.GETPROP);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
437	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	31	None	replace
438	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  cannot  find  symbol  name  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  name	31	None	replace
439	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  name);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  name);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	31	None	replace
440	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  this);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  this);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	31	None	replace
441	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  new  StringBuilder());  [CE]  no  suitable  method  found  for  newString(int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  new  StringBuilder());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  new  StringBuilder());	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	31	None	replace
442	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	28	None	replace
443	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.valueOf(Token.BLOCK):  Node.newString(Token.NAME);  [CE]  ')'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.valueOf(Token.BLOCK):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.valueOf(Token.BLOCK):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  ')'  expected	28	None	replace
444	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  name);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	28	None	replace
445	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  name  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  name	28	None	replace
446	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK),  Node.newString(Token.NAME);  [CE]  :  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK),  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK),  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  :  expected	28	None	replace
447	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EXPR_RESULT);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EXPR_RESULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EXPR_RESULT);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	28	None	replace
448	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  Runnable());  [CE]  cannot  find  symbol  compiler  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  Runnable());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  Runnable());	  NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	207	None	replace
449	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  Runnable(),  null);  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  Runnable(),  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  Runnable(),  null);	  NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	207	None	replace
450	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  Runnable(),  this);  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  Runnable(),  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  Runnable(),  this);	  NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	207	None	replace
451	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  Runnable(),  Token.BLOCK);  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  Runnable(),  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  Runnable(),  Token.BLOCK);	  NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	207	None	replace
452	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  Runnable());  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  Runnable());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  new  Runnable());	  NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	207	None	replace
453	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  Runnable());  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  Runnable());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  new  Runnable());	  NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	207	None	replace
454	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  token.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  token.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  token.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	14	None	replace
455	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  Token.BLOCK,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  constructor  found  for  Node(int,int,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  Token.BLOCK,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  Token.BLOCK,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int,Node)	14	None	replace
456	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  constructor  found  for  Node(int,Node,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Node,int)	14	None	replace
457	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  name);  [CE]  cannot  find  symbol  name  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  name);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  name	14	None	replace
458	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	14	None	replace
459	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  token.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  token.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  token.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	14	None	replace
460	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.newString(Token.GETPROP);  [CE]  cannot  find  symbol  Block  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.newString(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  Block.newString(Token.GETPROP);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol  Block	188	None	replace
461	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.GETPROP):  Block.newString(Token.GETPROP);  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.GETPROP):  Block.newString(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.GETPROP):  Block.newString(Token.GETPROP);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.GETPROP);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	188	None	replace
462	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.GETPROP,  name);  [CE]  cannot  find  symbol  name  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.GETPROP,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.GETPROP,  name);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol  name	188	None	replace
463	[BUG]  [BUGGY]  return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  token  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  token.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  token	85	None	replace
464	[BUG]  [BUGGY]  return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);  [CE]  int  cannot  be  dereferenced  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  int  cannot  be  dereferenced	85	None	replace
465	[BUG]  [BUGGY]  return  block!=  null?  tokens.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  tokens  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  tokens.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  tokens.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  tokens	85	None	replace
466	[BUG]  [BUGGY]  return  token!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  token  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  token!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  token!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	39	None	replace
467	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.NAME):  Node.newString(Token.NAME,  token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.NAME):  Node.newString(Token.NAME,  token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token.NAME):  Node.newString(Token.NAME,  token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	39	None	replace
468	[BUG]  [BUGGY]  return  token.NAME!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  token  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  token.NAME!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  token.NAME!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	39	None	replace
469	[BUG]  [BUGGY]  return  token.null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [CE]  <identifier>  expected  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  token.null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  token.null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
470	[BUG]  [BUGGY]  return  token  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  token  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  token  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  token  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	39	None	replace
471	[BUG]  [BUGGY]  return  token!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  token!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  token!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	39	None	replace
472	[BUG]  [BUGGY]  return  token.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [CE]  ';'  expected  [FE]                                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  token.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  token.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  ';'  expected	39	None	replace
473	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	238	None	replace
474	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	238	None	replace
475	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  DECEMBER  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	238	None	replace
476	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	238	None	replace
477	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	238	None	replace
478	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.DELETE);  [CE]  cannot  find  symbol  DECEMBER  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.DELETE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.DELETE);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	238	None	replace
479	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.CALL);  [CE]  cannot  find  symbol  DECEMBER  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	238	None	replace
480	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  not  a  statement  [FE]                      NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  not  a  statement	104	None	replace
481	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  [CE]  not  a  statement  [FE]                        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  not  a  statement	104	None	replace
482	[BUG]  [BUGGY]  return  block!=  null?  block.getType()  :  Token.NAME,  block.getType()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getType()  :  Token.NAME,  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getType()  :  Token.NAME,  block.getType()  :  Token.BLOCK;	  return    block!=    null?    block.getType()    :    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	157	None	replace
483	[BUG]  [BUGGY]  return  block!=  null?  block.getType()  :  Token.NAME  &&  block.getType()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getType()  :  Token.NAME  &&  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getType()  :  Token.NAME  &&  block.getType()  :  Token.BLOCK;	  return    block!=    null?    block.getType()    :    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	157	None	replace
484	[BUG]  [BUGGY]  return  block!=  null?  Node.cloneTree()  :  Node.newString(Token.NAME);  [CE]  non-static  method  cloneTree()  cannot  be  referenced  from  a  static  context  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.cloneTree()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.cloneTree()  :  Node.newString(Token.NAME);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  non-static  method  cloneTree()  cannot  be  referenced  from  a  static  context	26	None	replace
485	[BUG]  [BUGGY]  return  block  ==  null?  Block.cloneTree()  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  Block  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Block.cloneTree()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Block.cloneTree()  :  Node.newString(Token.NAME);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  Block	26	None	replace
486	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Block.cloneTree();  [CE]  no  suitable  method  found  for  newString(int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Block.cloneTree();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Block.cloneTree();	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	26	None	replace
487	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    	compilable	  [FE]  IllegalStateException  	199	3	replace
488	[BUG]  [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    	compilable	  [FE]  IllegalStateException  	199	3	replace
489	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()),  false);  [CE]  no  suitable  method  found  for  newString(int,String,boolean)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()),  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()),  false);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean)	199	None	replace
490	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()),  true);  [CE]  no  suitable  method  found  for  newString(int,String,boolean)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()),  true);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()),  true);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean)	199	None	replace
491	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [CE]  cannot  find  symbol  Block  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    	non-compiled	[CE]  cannot  find  symbol  Block	199	None	replace
492	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName());  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName());	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()    +    1));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	160	None	replace
493	[BUG]  [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block.getType()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.toString()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	224	None	replace
494	[BUG]  [BUGGY]  return  block.toString()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;  [CE]  incomparable  types:  String  and  int  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.toString()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.toString()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.toString()    :    Token.BLOCK;    	non-compiled	[CE]  incomparable  types:  String  and  int	224	None	replace
495	[BUG]  [BUGGY]  return  block.getType()!=  Token.NAME?  block.toString()  :  Token.BLOCK;  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()!=  Token.NAME?  block.toString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()!=  Token.NAME?  block.toString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.toString()    :    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	224	None	replace
496	[BUG]  [BUGGY]  Return  block.getType()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Return  block.getType()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Return  block.getType()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.toString()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	224	None	replace
497	[BUG]  [BUGGY]  result.getType()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;  [CE]  not  a  statement  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  result.getType()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	result.getType()  ==  Token.NAME?  block.toString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.toString()    :    Token.BLOCK;    	non-compiled	[CE]  not  a  statement	224	None	replace
498	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	33	None	replace
499	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	33	None	replace
500	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	33	None	replace
501	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	33	None	replace
502	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  token.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  token.EMPTY);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	33	None	replace
503	[BUG]  [BUGGY]  Node  block  =  block!=  null?  null  :  block.getString();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block!=  null?  null  :  block.getString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block!=  null?  null  :  block.getString();	  return    block!=    null?    null    :    block.getString();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	106	None	replace
504	[BUG]  [BUGGY]  return  block  >=  null?  null  :  block.getString();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  >=  null?  null  :  block.getString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  >=  null?  null  :  block.getString();	  return    block!=    null?    null    :    block.getString();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	106	None	replace
505	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	114	None	replace
506	[BUG]  [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  not  a  statement  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  not  a  statement	75	None	replace
507	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	75	None	replace
508	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	75	None	replace
509	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.NAME);  block.setString(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.NAME);  block.setString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.NAME);  block.setString(Token.BLOCK);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	75	None	replace
510	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IllegalStateException( "NodeTraversal.block() "));  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IllegalStateException( "NodeTraversal.block() "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  IllegalStateException( "NodeTraversal.block() "));	  NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "NodeTraversal.block()       "));    	non-compiled	[CE]  cannot  find  symbol  compiler	194	None	replace
511	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block()));  [CE]  unclosed  string  literal  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block()));	  NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "NodeTraversal.block()       "));    	non-compiled	[CE]  unclosed  string  literal	194	None	replace
512	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IllegalStateException( "NodeTraversal.block() "));  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IllegalStateException( "NodeTraversal.block() "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  new  IllegalStateException( "NodeTraversal.block() "));	  NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "NodeTraversal.block()       "));    	non-compiled	[CE]  cannot  find  symbol  compiler	194	None	replace
513	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IllegalStateException( "NodeTraversal.block() "));  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IllegalStateException( "NodeTraversal.block() "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  new  IllegalStateException( "NodeTraversal.block() "));	  NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "NodeTraversal.block()       "));    	non-compiled	[CE]  cannot  find  symbol  compiler	194	None	replace
514	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block() ",  null));  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block() ",  null));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block() ",  null));	  NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "NodeTraversal.block()       "));    	non-compiled	[CE]  cannot  find  symbol  compiler	194	None	replace
515	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR);  [CE]  cannot  find  symbol  node  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  node	204	None	replace
516	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  name);  [CE]  cannot  find  symbol  name  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  name);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  name	204	None	replace
517	[BUG]  [BUGGY]  return  block!=  null?  Token.NAME  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Token.NAME  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Token.NAME  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  ';'  expected	204	None	replace
518	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR);  [CE]  cannot  find  symbol  Block  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  Block	204	None	replace
519	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.VAR);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.VAR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.VAR);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	204	None	replace
520	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.NAME,  block);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	204	None	replace
521	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.VAR,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.VAR,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.VAR,  Token.NAME);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	204	None	replace
522	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	222	None	replace
523	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  this);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  this);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	222	None	replace
524	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  false);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  false);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	222	None	replace
525	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  name);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	222	None	replace
526	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EMPTY);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	222	None	replace
527	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EXPR_RESULT);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EXPR_RESULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EXPR_RESULT);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	222	None	replace
528	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
529	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  null?  null  :  block.getParent();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  null?  null  :  block.getParent();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  null?  null  :  block.getParent();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
530	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setParent(null);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setParent(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.setParent(null);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
531	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
532	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
533	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
534	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
535	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.GETPROP);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.GETPROP);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
536	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  this):  block;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  this):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  this):  block;	  return    block    ==    null?    new    Node(Token.NAME,    this):    block;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	216	None	replace
537	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  BLOCK):  block;  [CE]  cannot  find  symbol  BLOCK  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  BLOCK):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  BLOCK):  block;	  return    block    ==    null?    new    Node(Token.NAME,    this):    block;    	non-compiled	[CE]  cannot  find  symbol  BLOCK	216	None	replace
538	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  getCurrentName()):  block;  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  getCurrentName()):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  getCurrentName()):  block;	  return    block    ==    null?    new    Node(Token.NAME,    this):    block;    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
539	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Block.EMPTY):  block;  [CE]  cannot  find  symbol  Block  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Block.EMPTY):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Block.EMPTY):  block;	  return    block    ==    null?    new    Node(Token.NAME,    this):    block;    	non-compiled	[CE]  cannot  find  symbol  Block	216	None	replace
540	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  JSError.make(Token.BLOCK):  block;  [CE]  ')'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  JSError.make(Token.BLOCK):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  JSError.make(Token.BLOCK):  block;	  return    block    ==    null?    new    Node(Token.NAME,    this):    block;    	non-compiled	[CE]  ')'  expected	216	None	replace
541	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  not  a  statement	236	None	replace
542	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRNode(Token.BLOCK));  [CE]  cannot  find  symbol  compiler  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRNode(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  constructor,  new  IRNode(Token.BLOCK));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol  compiler	191	None	replace
543	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRNode(Token.BLOCK));  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRNode(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  IRNode(Token.BLOCK));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol  compiler	191	None	replace
544	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  token,  new  IRNode(Token.BLOCK));  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  token,  new  IRNode(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  token,  new  IRNode(Token.BLOCK));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol  compiler	191	None	replace
545	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRNode(Token.BLOCK));  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRNode(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  new  IRNode(Token.BLOCK));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol  compiler	191	None	replace
546	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRNode(Token.BLOCK));  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRNode(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  new  IRNode(Token.BLOCK));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol  compiler	191	None	replace
547	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRNode(Token.BLOCK),  this);  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRNode(Token.BLOCK),  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IRNode(Token.BLOCK),  this);	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol  compiler	191	None	replace
548	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  IRNode(Token.BLOCK));  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  IRNode(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  IR,  new  IRNode(Token.BLOCK));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol  compiler	191	None	replace
549	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLocalName();  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLocalName();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getLocalName();	  return    block    ==    null?    null    :    block.getName();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
550	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent().getName();  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent().getName();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getParent().getName();	  return    block    ==    null?    null    :    block.getName();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
551	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  tokenName  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  tokenName	56	None	replace
552	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  token  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  token	56	None	replace
553	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  symbol	56	None	replace
554	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.newString();  [CE]  no  suitable  method  found  for  newString()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.newString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.newString();	  return    block    ==    null?    null    :    block.newString();    	non-compiled	[CE]  no  suitable  method  found  for  newString()	142	None	replace
555	[BUG]  [BUGGY]  return  block  ==  null,  null?  null  :  block.newString();  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null,  null?  null  :  block.newString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null,  null?  null  :  block.newString();	  return    block    ==    null?    null    :    block.newString();    	non-compiled	[CE]  ';'  expected	142	None	replace
556	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.newString()  + "n ";  [CE]  no  suitable  method  found  for  newString()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.newString()  + "n ";  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.newString()  + "n ";	  return    block    ==    null?    null    :    block.newString();    	non-compiled	[CE]  no  suitable  method  found  for  newString()	142	None	replace
557	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    new    Node(Token.NAME):    block;    Node  block  =  new  Node(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	132	None	add
558	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    new    Node(Token.NAME):    block;    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	132	None	add
559	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block!=  null?  new  Node(Token.NAME):  block;  [CE]  not  a  statement  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block!=  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    new    Node(Token.NAME):    block;    block!=  null?  new  Node(Token.NAME):  block;	  	non-compiled	[CE]  not  a  statement	132	None	add
560	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    new    Node(Token.NAME):    block;    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	132	None	add
561	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    new    Node(Token.NAME):    block;    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	132	None	add
562	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    new    Node(Token.NAME):    block;    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	132	None	add
563	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(this);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	124	None	replace
564	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.BLOCK):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block  ==  null?  new  Node(Token.BLOCK):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(this);    	compilable	  [FE]  IllegalStateException  	124	3	replace
565	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.BLOCK):  block;  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.BLOCK):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.BLOCK):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(this);    	compilable	  [FE]  IllegalStateException  	124	3	replace
566	[BUG]  [BUGGY]  Node  block  =  null?  null  :  block.getLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  null?  null  :  block.getLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  null?  null  :  block.getLastChild();	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getLastChild();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	99	None	replace
567	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getLastChild();    	non-compiled	[CE]  not  a  statement	99	None	replace
568	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_SYNTHETIC);  [CE]  cannot  find  symbol  node  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_SYNTHETIC);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_SYNTHETIC);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  node	234	None	replace
569	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFULT_SYNTHETIC);  [CE]  cannot  find  symbol  DEFULT_SYNTHETIC  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFULT_SYNTHETIC);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFULT_SYNTHETIC);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFULT_SYNTHETIC	234	None	replace
570	[BUG]  [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_SYNTHETIC);  [CE]  cannot  find  symbol  DEFAULT_SYNTHETIC  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_SYNTHETIC);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_SYNTHETIC);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SYNTHETIC	234	None	replace
571	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_YEAR);  [CE]  cannot  find  symbol  DEFAULT_YEAR  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_YEAR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_YEAR);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_YEAR	234	None	replace
572	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()),  block);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()),  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()),  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()),    block);    	non-compiled	[CE]  ';'  expected	206	None	replace
573	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()),  block);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()),  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()),  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()),    block);    	non-compiled	[CE]  ';'  expected	206	None	replace
574	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()),  block);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()),  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()),  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()),    block);    	non-compiled	[CE]  ';'  expected	206	None	replace
575	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName(),  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName(),  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName(),  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()),    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	206	None	replace
576	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()),    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	206	None	replace
577	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ",  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ",  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ",  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()),    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	206	None	replace
578	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  node);  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  node);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  node);	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  not  a  statement	97	None	replace
579	[BUG]  [BUGGY]  Node  block  =  block  ==  null?  null  :  block.getType();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block  ==  null?  null  :  block.getType();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block  ==  null?  null  :  block.getType();	  Node    block    =    block!=    null?    null    :    block.getType();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	105	None	replace
580	[BUG]  [BUGGY]  Node  block  =  node!=  null?  null  :  block.getType();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  node!=  null?  null  :  block.getType();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  node!=  null?  null  :  block.getType();	  Node    block    =    block!=    null?    null    :    block.getType();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	105	None	replace
581	[BUG]  [BUGGY]  Node  block  =  this.block!=  null?  null  :  block.getType();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  this.block!=  null?  null  :  block.getType();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  this.block!=  null?  null  :  block.getType();	  Node    block    =    block!=    null?    null    :    block.getType();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	105	None	replace
582	[BUG]  [BUGGY]  Node  block  =  null?  null  :  block.getType();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  null?  null  :  block.getType();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  null?  null  :  block.getType();	  Node    block    =    block!=    null?    null    :    block.getType();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	105	None	replace
583	[BUG]  [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  not  a  statement	219	None	replace
584	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	219	None	replace
585	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	219	None	replace
586	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	219	None	replace
587	[BUG]  [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  [CE]  not  a  statement  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  not  a  statement	70	None	replace
588	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK,  block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK,  block);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	70	None	replace
589	[BUG]  [BUGGY]  if(block  ==  null)return  null;  if(block!=  null)  {  return  block;  }  [CE]  missing  return  statement  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)return  null;  if(block!=  null)  {  return  block;  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)return  null;  if(block!=  null)  {  return  block;  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  missing  return  statement	70	None	replace
590	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(false));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(false));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	compilable	  [FE]  IllegalStateException  	94	3	replace
591	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(false));  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(false));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(false));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	compilable	  [FE]  IllegalStateException  	94	3	replace
592	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	compilable	  [FE]  NullPointerException  	94	3	replace
593	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	compilable	  [FE]  NullPointerException  	94	3	replace
594	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	compilable	  [FE]  IllegalStateException  	94	3	replace
595	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	compilable	  [FE]  IllegalStateException  	94	3	replace
596	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()!=  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(false));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block.getType()!=  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(false));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	compilable	  [FE]  IllegalStateException  	94	3	replace
597	[BUG]  [BUGGY]  return  block.getType()!=  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(false));  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()!=  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(false));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()!=  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(false));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	compilable	  [FE]  IllegalStateException  	94	3	replace
598	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true),  false);  [CE]  no  suitable  method  found  for  newString(int,String,boolean)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true),  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true),  false);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean)	94	None	replace
599	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  tokenName  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  tokenName	220	None	replace
600	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  token  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  token	220	None	replace
601	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  Token.CALL);  [CE]  cannot  find  symbol  name  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  name	220	None	replace
602	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  token  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  token	220	None	replace
603	[BUG]  [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  not  a  statement	218	None	replace
604	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	218	None	replace
605	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.CALL);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
606	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.SEMI);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.SEMI);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.SEMI);	  return    block!=    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
607	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.MOVED);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.MOVED);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.MOVED);	  return    block!=    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
608	[BUG]  [BUGGY]  return  block.getType()  >=  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  >=  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  >=  Token.NAME?  block.getType()  :  Token.BLOCK;	  return    block.getType()!=    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	66	None	replace
609	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  name  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  name	37	None	replace
610	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	37	None	replace
611	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  false);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  false);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	37	None	replace
612	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  this);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  this);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	37	None	replace
613	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRReference  <  Node>());  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  IRReference  <  Node>());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  IRReference  <  Node>());	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
614	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRReference  <  Node>());  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  IRReference  <  Node>());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  new  IRReference  <  Node>());	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
615	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRReference  <  Node>(),  null);  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRReference  <  Node>(),  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IRReference  <  Node>(),  null);	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
616	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRReference  <  Node>(),  false);  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRReference  <  Node>(),  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IRReference  <  Node>(),  false);	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
617	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRReference  <  Node>(),  Token.BLOCK);  [CE]  cannot  find  symbol  compiler  [FE]                                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IRReference  <  Node>(),  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IRReference  <  Node>(),  Token.BLOCK);	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
618	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  IRReference  <  Node>());  [CE]  cannot  find  symbol  compiler  [FE]                                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  IRReference  <  Node>());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  IR,  new  IRReference  <  Node>());	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
619	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  block.clone();  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  block.clone();	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	149	None	replace
620	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  block.clone();  [CE]  cannot  find  symbol  name  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  name):  block.clone();	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  cannot  find  symbol  name	149	None	replace
621	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.EMPTY):  block.clone();  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.EMPTY):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.EMPTY):  block.clone();	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	149	None	replace
622	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  block.clone();  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  block.clone();	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	149	None	replace
623	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.name):  block.clone();  [CE]  cannot  find  symbol  token  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.name):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token.name):  block.clone();	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  cannot  find  symbol  token	149	None	replace
624	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Block.newString(Token.BLOCK,  block.clone());  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Block.newString(Token.BLOCK,  block.clone());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Block.newString(Token.BLOCK,  block.clone());	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	149	None	replace
625	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
626	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	41	None	replace
627	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	41	None	replace
628	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT);  [CE]  cannot  find  symbol  DEFAULT  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	25	None	replace
629	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  NAME);  [CE]  cannot  find  symbol  NAME  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  NAME);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  NAME	92	None	replace
630	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_TYPE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_TYPE);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	92	None	replace
631	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	76	None	replace
632	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	76	None	replace
633	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	76	None	replace
634	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	76	None	replace
635	[BUG]  [BUGGY]  return  block  ==  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  Block  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  Block	17	None	replace
636	[BUG]  [BUGGY]  return  block!=  null?  Node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  non-static  method  cloneTree()  cannot  be  referenced  from  a  static  context  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  non-static  method  cloneTree()  cannot  be  referenced  from  a  static  context	17	None	replace
637	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  :  expected  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  :  expected	17	None	replace
638	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  token.name):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	111	None	replace
639	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  tokenName  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  tokenName	111	None	replace
640	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  token):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	111	None	replace
641	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  null?  null  :  block.cloneTree();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  null?  null  :  block.cloneTree();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  null?  null  :  block.cloneTree();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
642	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
643	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
644	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.FOR);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  new  Node(Token.FOR);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
645	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
646	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  name);  [CE]  cannot  find  symbol  name  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  name);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  cannot  find  symbol  name	145	None	replace
647	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.NAME,  block);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	145	None	replace
648	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING);  [CE]  cannot  find  symbol  node  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  cannot  find  symbol  node	145	None	replace
649	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING);  [CE]  cannot  find  symbol  Block  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  cannot  find  symbol  Block	145	None	replace
650	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  DEFAULT_NAME);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  DEFAULT_NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  DEFAULT_NAME);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	145	None	replace
651	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  String.valueOf);  [CE]  cannot  find  symbol  valueOf  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  String.valueOf);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  String.valueOf);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  cannot  find  symbol  valueOf	145	None	replace
652	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  DEFAULT);  [CE]  cannot  find  symbol  DEFAULT  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  DEFAULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  DEFAULT);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	145	None	replace
653	[BUG]  [BUGGY]  Node  block  =  block.clone()?  null  :  block.clone();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block.clone()?  null  :  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block.clone()?  null  :  block.clone();	  return    block.clone()?    null    :    block.clone();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	60	None	replace
654	[BUG]  [BUGGY]  if(block.clone())return  null;  if(block.clone()!=  null)  {  return  block.clone();  }  [CE]  clone()  has  protected  access  in  Object  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block.clone())return  null;  if(block.clone()!=  null)  {  return  block.clone();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block.clone())return  null;  if(block.clone()!=  null)  {  return  block.clone();  }	  return    block.clone()?    null    :    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	60	None	replace
655	[BUG]  [BUGGY]  if(block.clone())return  null;  if(block.clone()  ==  null)  {  return  block.clone();  }  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block.clone())return  null;  if(block.clone()  ==  null)  {  return  block.clone();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block.clone())return  null;  if(block.clone()  ==  null)  {  return  block.clone();  }	  return    block.clone()?    null    :    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	60	None	replace
656	[BUG]  [BUGGY]  return  this.block.clone()?  null  :  block.clone();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  this.block.clone()?  null  :  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  this.block.clone()?  null  :  block.clone();	  return    block.clone()?    null    :    block.clone();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	60	None	replace
657	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.US));  [CE]  cannot  find  symbol  Locale  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.US));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.US));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	171	None	replace
658	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));  [CE]  cannot  find  symbol  Locale  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	171	None	replace
659	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH),  JSError.make(Locale.US));  [CE]  cannot  find  symbol  Locale  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH),  JSError.make(Locale.US));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH),  JSError.make(Locale.US));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	171	None	replace
660	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));  [CE]  cannot  find  symbol  Locale  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	171	None	replace
661	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));  [CE]  cannot  find  symbol  Locale  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	171	None	replace
662	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	45	None	replace
663	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
664	[BUG]  [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));  [CE]  cannot  find  symbol  Locale  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	183	None	replace
665	[BUG]  [BUGGY]  return  block!=  null?  JSError.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));  [CE]  cannot  find  symbol  JSError  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  JSError.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  JSError.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  JSError	183	None	replace
666	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));  [CE]  cannot  find  symbol  node  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  node	183	None	replace
667	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  JSError.make(Locale.US));  [CE]  cannot  find  symbol  Locale  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  JSError.make(Locale.US));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  JSError.make(Locale.US));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	183	None	replace
668	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  unreachable  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.BLOCK));	  return    block    ==    null?    new    Node(Token.NAME):    block;    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  unreachable  statement	165	None	replace
669	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  unreachable  statement  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.BLOCK));	  return    block    ==    null?    new    Node(Token.NAME):    block;    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  unreachable  statement	165	None	replace
670	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.CALL));  [CE]  unreachable  statement  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.CALL));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.CALL));	  return    block    ==    null?    new    Node(Token.NAME):    block;    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  unreachable  statement	165	None	replace
671	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.GETPROP));  [CE]  unreachable  statement  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.GETPROP));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.GETPROP));	  return    block    ==    null?    new    Node(Token.NAME):    block;    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  unreachable  statement	165	None	replace
672	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.CALL));  [CE]  unreachable  statement  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.CALL));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.CALL));	  return    block    ==    null?    new    Node(Token.NAME):    block;    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  unreachable  statement	165	None	replace
673	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  name);  [CE]  cannot  find  symbol  name  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  name);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  name	84	None	replace
674	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL);  [CE]  cannot  find  symbol  node  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  node	84	None	replace
675	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL);  [CE]  cannot  find  symbol  Block  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  Block	84	None	replace
676	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  MISSING);  [CE]  cannot  find  symbol  MISSING  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  MISSING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  MISSING);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  MISSING	84	None	replace
677	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  Block.EMPTY);  [CE]  cannot  find  symbol  Block  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  Block.EMPTY);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  Block	84	None	replace
678	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  DEFAULT);  [CE]  cannot  find  symbol  DEFAULT  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  DEFAULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  DEFAULT);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	84	None	replace
679	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
680	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.FOR);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.FOR);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
681	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
682	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.TRY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.TRY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.TRY);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
683	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.SEMI);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.SEMI);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.SEMI);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
684	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.GETPROP);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.GETPROP);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
685	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.EMPTY;  [CE]  cannot  find  symbol  Block  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.EMPTY;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  Block.EMPTY;	  return    block    ==    null?    new    Node(Token.NAME):    Block.EMPTY;    	non-compiled	[CE]  cannot  find  symbol  Block	137	None	replace
686	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.EMPTY;  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.EMPTY;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.EMPTY;	  return    block    ==    null?    new    Node(Token.NAME):    Block.EMPTY;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	137	None	replace
687	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Token.EMPTY;  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Token.EMPTY;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Token.EMPTY;	  return    block    ==    null?    new    Node(Token.NAME):    Block.EMPTY;    	non-compiled	[CE]  incompatible  types	137	None	replace
688	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	34	None	replace
689	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  token.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  token.EMPTY);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	34	None	replace
690	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.CALL);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	34	None	replace
691	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.CALL,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.CALL,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.CALL,  block);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	35	None	replace
692	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	35	None	replace
693	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	35	None	replace
694	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ");  [CE]  no  suitable  method  found  for  newString(int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ");  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ");	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()    +   ")   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	83	None	replace
695	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()  + ") "  :  Node.newString(Token.NAME,  getName()  + ") ");  [CE]  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()  + ") "  :  Node.newString(Token.NAME,  getName()  + ") ");  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()  + ") "  :  Node.newString(Token.NAME,  getName()  + ") ");	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()    +   ")   ");    	non-compiled	[CE]  	83	None	replace
696	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ",  getMessage());  [CE]  no  suitable  method  found  for  newString(int)  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ",  getMessage());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ",  getMessage());	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()    +   ")   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	83	None	replace
697	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ",  getSourceName());  [CE]  no  suitable  method  found  for  newString(int)  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ",  getSourceName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + ") ",  getSourceName());	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()    +   ")   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	83	None	replace
698	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + "), ");  [CE]  no  suitable  method  found  for  newString(int)  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + "), ");  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName()  + "), ");	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()    +   ")   ");    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	83	None	replace
699	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  Token.BLOCK):  block;  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  Token.BLOCK):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  Token.BLOCK):  block;	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	215	None	replace
700	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.valueOf(block);  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.valueOf(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.valueOf(block);	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	215	None	replace
701	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  Block.EMPTY):  block;  [CE]  cannot  find  symbol  Block  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  Block.EMPTY):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  Block.EMPTY):  block;	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  cannot  find  symbol  Block	215	None	replace
702	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.newString(Token.BLOCK);  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.newString(Token.BLOCK);	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	215	None	replace
703	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  Block.EMPTY_STRING):  block;  [CE]  cannot  find  symbol  Block  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  Block.EMPTY_STRING):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  Block.EMPTY_STRING):  block;	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  cannot  find  symbol  Block	215	None	replace
704	[BUG]  [BUGGY]  block  ==  null?  null  :  block;  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  block  ==  null?  null  :  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	block  ==  null?  null  :  block;	  return    block    ==    null?    null    :    block;    block    ==    null?    null    :    block;    	non-compiled	[CE]  not  a  statement	185	None	replace
705	[BUG]  [BUGGY]  if(block  ==  null)return  null;  if(block!=  null)return  null;  block  =  new  Node(Token.BLOCK);  }  [CE]  class,  interface,  or  enum  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)return  null;  if(block!=  null)return  null;  block  =  new  Node(Token.BLOCK);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)return  null;  if(block!=  null)return  null;  block  =  new  Node(Token.BLOCK);  }	  return    block    ==    null?    null    :    block;    block    ==    null?    null    :    block;    	non-compiled	[CE]  class,  interface,  or  enum  expected	185	None	replace
706	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block;    block    ==    null?    null    :    block;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
707	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  this);  [CE]  cannot  find  symbol  compiler  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  this);	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	155	None	replace
708	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  this);  [CE]  not  a  statement  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  this);	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  not  a  statement	155	None	replace
709	[BUG]  [BUGGY]  final  Return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;	  Return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	69	None	replace
710	[BUG]  [BUGGY]  ||  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  ||  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	||  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;	  Return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
711	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild().getType();  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild().getType();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getLastChild().getType();	  return    block!=    null?    null    :    block.getFirstChild().getType();    	non-compiled	[CE]  incompatible  types	241	None	replace
712	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild().getType();  [CE]  incompatible  types  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild().getType();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getLastChild().getType();	  return    block!=    null?    null    :    block.getFirstChild().getType();    	non-compiled	[CE]  incompatible  types	241	None	replace
713	[BUG]  [BUGGY]  Node  block  =  block!=  null?  null  :  block.clone();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block!=  null?  null  :  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block!=  null?  null  :  block.clone();	  return    block    >=    null?    null    :    block.clone();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	112	None	replace
714	[BUG]  [BUGGY]  Node  block  =  block  ==  null?  null  :  block.clone();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block  ==  null?  null  :  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block  ==  null?  null  :  block.clone();	  return    block    >=    null?    null    :    block.clone();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	112	None	replace
715	[BUG]  [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  not  a  statement	71	None	replace
716	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	71	None	replace
717	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.BLOCK,  name);  [CE]  cannot  find  symbol  name  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.BLOCK,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.BLOCK,  name);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  name	187	None	replace
718	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  false);  [CE]  cannot  find  symbol  Block  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  false);	  return    block    ==    null?    new    Node(Token.NAME):    Block.toString(block);    	non-compiled	[CE]  cannot  find  symbol  Block	136	None	replace
719	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  symbol);  [CE]  cannot  find  symbol  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  symbol);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  symbol);	  return    block    ==    null?    new    Node(Token.NAME):    Block.toString(block);    	non-compiled	[CE]  cannot  find  symbol  symbol	136	None	replace
720	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  true);  [CE]  cannot  find  symbol  Block  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  true);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  true);	  return    block    ==    null?    new    Node(Token.NAME):    Block.toString(block);    	non-compiled	[CE]  cannot  find  symbol  Block	136	None	replace
721	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  not  a  statement	213	None	replace
722	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	108	None	replace
723	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  block);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	108	None	replace
724	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  name);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	108	None	replace
725	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  this);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  this);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	108	None	replace
726	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EMPTY);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	108	None	replace
727	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EXPR_RESULT);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EXPR_RESULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EXPR_RESULT);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	108	None	replace
728	[BUG]  [BUGGY]  block  ==  null?  new  Node(Token.NAME):  block;  [CE]  not  a  statement  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  block  ==  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	block  ==  null?  new  Node(Token.NAME):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    block    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  not  a  statement	247	None	replace
729	[BUG]  [BUGGY]  final  return  block  ==  null?  new  Node(Token.NAME):  block;  [CE]  illegal  start  of  type  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  return  block  ==  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  return  block  ==  null?  new  Node(Token.NAME):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    block    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
730	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  [CE]  missing  return  statement  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    block    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  missing  return  statement	247	None	replace
731	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  UUID);  [CE]  cannot  find  symbol  UUID  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  UUID);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  UUID);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    SHORT);    	non-compiled	[CE]  cannot  find  symbol  UUID	170	None	replace
732	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
733	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  null?  null  :  block.getParent();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  null?  null  :  block.getParent();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  null?  null  :  block.getParent();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
734	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setParent(null);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setParent(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.setParent(null);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
735	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
736	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  node  ==  null?  null  :  block.getParent();  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  node  ==  null?  null  :  block.getParent();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    node  ==  null?  null  :  block.getParent();	  	non-compiled	[CE]  not  a  statement	140	None	add
737	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
738	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
739	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
740	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	162	None	replace
741	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	162	None	replace
742	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	162	None	replace
743	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  SHORT_NAME):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  SHORT_NAME  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  SHORT_NAME):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  SHORT_NAME):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  SHORT_NAME	162	None	replace
744	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.CALL);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.CALL);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	162	None	replace
745	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode(Token.BLOCK);  [CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.cloneNode(Token.BLOCK);	  return    block    ==    null?    null    :    block.cloneNode();    	non-compiled	[CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;	8	None	replace
746	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode(Token.NAME);  [CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.cloneNode(Token.NAME);	  return    block    ==    null?    null    :    block.cloneNode();    	non-compiled	[CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;	8	None	replace
747	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode(Token.EMPTY);  [CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode(Token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.cloneNode(Token.EMPTY);	  return    block    ==    null?    null    :    block.cloneNode();    	non-compiled	[CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;	8	None	replace
748	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.EMPTY);  [CE]  cannot  find  symbol  EMPTY  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.EMPTY);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  EMPTY	18	None	replace
749	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.PLAIN);  [CE]  cannot  find  symbol  PLAIN  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.PLAIN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.PLAIN);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  PLAIN	18	None	replace
750	[BUG]  [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.valueOf);  [CE]  cannot  find  symbol  valueOf  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.valueOf);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.valueOf);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  valueOf	18	None	replace
751	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.STRING);  [CE]  cannot  find  symbol  STRING  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.STRING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.STRING);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  STRING	18	None	replace
752	[BUG]  [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	147	None	replace
753	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.EXPR_RESULT);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.EXPR_RESULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.EXPR_RESULT);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	147	None	replace
754	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  cannot  find  symbol  node  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  node	147	None	replace
755	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block):  Token.BLOCK;  [CE]  incompatible  types  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block):  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block):  Token.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME,    block):    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	214	None	replace
756	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  name):  Token.BLOCK;  [CE]  cannot  find  symbol  name  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  name):  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  name):  Token.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME,    block):    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  name	214	None	replace
757	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  block),  Token.BLOCK;  [CE]  :  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  block),  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  block),  Token.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME,    block):    Token.BLOCK;    	non-compiled	[CE]  :  expected	214	None	replace
758	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Block.BLOCK):  Token.BLOCK;  [CE]  cannot  find  symbol  Block  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Block.BLOCK):  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Block.BLOCK):  Token.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME,    block):    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  Block	214	None	replace
759	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  BLOCK):  Token.BLOCK;  [CE]  cannot  find  symbol  BLOCK  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  BLOCK):  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  BLOCK):  Token.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME,    block):    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  BLOCK	214	None	replace
760	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Block.EMPTY):  Token.BLOCK;  [CE]  cannot  find  symbol  Block  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Block.EMPTY):  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Block.EMPTY):  Token.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME,    block):    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  Block	214	None	replace
761	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.NAME);	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	125	None	replace
762	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  BLOCK  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	163	None	replace
763	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  SHORT):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  SHORT  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  SHORT):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  SHORT):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  SHORT	163	None	replace
764	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  BLOCK  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	163	None	replace
765	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Block.EMPTY);  [CE]  cannot  find  symbol  BLOCK  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Block.EMPTY);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	163	None	replace
766	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  BLOCK,  DEFAULT_BLOCK);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  BLOCK,  DEFAULT_BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  BLOCK,  DEFAULT_BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	163	None	replace
767	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Block.BLOCK);  [CE]  cannot  find  symbol  BLOCK  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Block.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Block.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	163	None	replace
768	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( " "));  [CE]  cannot  find  symbol  compiler  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( " "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( " "));	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "   "));    	non-compiled	[CE]  cannot  find  symbol  compiler	154	None	replace
769	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "));  [CE]  unclosed  string  literal  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "));	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "   "));    	non-compiled	[CE]  unclosed  string  literal	154	None	replace
770	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( " "));  [CE]  cannot  find  symbol  compiler  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( " "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( " "));	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "   "));    	non-compiled	[CE]  cannot  find  symbol  compiler	154	None	replace
771	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( " "));  [CE]  not  a  statement  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( " "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( " "));	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "   "));    	non-compiled	[CE]  not  a  statement	154	None	replace
772	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
773	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  null?  null  :  block.getLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  null?  null  :  block.getLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  null?  null  :  block.getLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
774	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
775	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  null?  null  :  block.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  null?  null  :  block.getFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  null?  null  :  block.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
776	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
777	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
778	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.GETPROP);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.GETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.GETPROP);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
779	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.FOR);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.FOR);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
780	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());  [CE]  cannot  find  symbol  compiler  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	156	None	replace
781	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());  [CE]  not  a  statement  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  not  a  statement	156	None	replace
782	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());  }  [CE]  cannot  find  symbol  compiler  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());  }	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	156	None	replace
783	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FUNCTION);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FUNCTION);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  new  Node(Token.FUNCTION);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
784	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(0));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(0));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
785	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  Node.newString(Token.NAME,  String.valueOf(0));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  Node.newString(Token.NAME,  String.valueOf(0));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
786	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  Node.newString(Token.FUNCTION,  String.valueOf(0));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  Node.newString(Token.FUNCTION,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  Node.newString(Token.FUNCTION,  String.valueOf(0));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
787	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FOR);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  new  Node(Token.FOR);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
788	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
789	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FLOAT);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FLOAT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  new  Node(Token.FLOAT);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
790	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(1));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  new  Node(Token.FUNCTION,  String.valueOf(1));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
791	[BUG]  [BUGGY]  return  this.block!=  null?  null  :  block.cloneNode();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  this.block!=  null?  null  :  block.cloneNode();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  this.block!=  null?  null  :  block.cloneNode();	  return    block!=    null?    null    :    block.cloneNode();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	10	None	replace
792	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode(Token.BLOCK);  [CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneNode(Token.BLOCK);	  return    block!=    null?    null    :    block.cloneNode();    	non-compiled	[CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;	10	None	replace
793	[BUG]  [BUGGY]  return  block  >=  null?  null  :  block.cloneNode();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  >=  null?  null  :  block.cloneNode();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  >=  null?  null  :  block.cloneNode();	  return    block!=    null?    null    :    block.cloneNode();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	replace
794	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getLocalName()));  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getLocalName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getLocalName()));	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	205	None	replace
795	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName()));  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName()));	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	205	None	replace
796	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getClass()));  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getClass()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getClass()));	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	205	None	replace
797	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getLocalName()));  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getLocalName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getLocalName()));	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	205	None	replace
798	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getShortName()));  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getShortName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getShortName()));	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	205	None	replace
799	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getId()));  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getId()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getId()));	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	205	None	replace
800	[BUG]  [BUGGY]  block!=  null?  null  :  block;  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  block!=  null?  null  :  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	block!=  null?  null  :  block;	  return    block!=    null?    null    :    block;    block!=    null?    null    :    block;    	non-compiled	[CE]  not  a  statement	190	None	replace
801	[BUG]  [BUGGY]  if(block!=  null)return  null;  if(block!=  null)return  block;  }  [CE]  class,  interface,  or  enum  expected  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)return  null;  if(block!=  null)return  block;  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)return  null;  if(block!=  null)return  block;  }	  return    block!=    null?    null    :    block;    block!=    null?    null    :    block;    	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	replace
802	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.CALL,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.CALL,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.CALL,  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	109	None	replace
803	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.CALL);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	109	None	replace
804	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  Token.CALL);  [CE]  cannot  find  symbol  name  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  Token.CALL);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  name	109	None	replace
805	[BUG]  [BUGGY]  NodeUtil.checkState(block.getType()!=  Token.BLOCK);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block.getType()!=  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block.getType()!=  Token.BLOCK);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
806	[BUG]  [BUGGY]  NodeUtil.checkState(block!=  null?  null  :  block.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block!=  null?  null  :  block.getType()  ==  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block!=  null?  null  :  block.getType()  ==  Token.BLOCK);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
807	[BUG]  [BUGGY]  NodeUtil.checkState(block  ==  null?  null  :  block.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block  ==  null?  null  :  block.getType()  ==  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block  ==  null?  null  :  block.getType()  ==  Token.BLOCK);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
808	[BUG]  [BUGGY]  NodeUtil.checkState(block!=  null  ||  block.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block!=  null  ||  block.getType()  ==  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block!=  null  ||  block.getType()  ==  Token.BLOCK);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
809	[BUG]  [BUGGY]  NodeUtil.checkState(block.getType()  >=  Token.BLOCK);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block.getType()  >=  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block.getType()  >=  Token.BLOCK);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
810	[BUG]  [BUGGY]  NodeUtil.checkState(block.getType()  ==  Token.BLOCK,  false);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block.getType()  ==  Token.BLOCK,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block.getType()  ==  Token.BLOCK,  false);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
811	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getClass()));  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getClass()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getClass()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getClass()));    	non-compiled	[CE]  ';'  expected	80	None	replace
812	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  getClass()));  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  getClass()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  getClass()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getClass()));    	non-compiled	[CE]  ';'  expected	80	None	replace
813	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  getClass()));  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  getClass()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  getClass()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getClass()));    	non-compiled	[CE]  ';'  expected	80	None	replace
814	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getClass()),  block);  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getClass()),  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getClass()),  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getClass()));    	non-compiled	[CE]  ';'  expected	80	None	replace
815	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  symbol);  [CE]  cannot  find  symbol  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  symbol);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  symbol);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    name);    	non-compiled	[CE]  cannot  find  symbol  symbol	13	None	replace
816	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  token);  [CE]  cannot  find  symbol  token  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  token);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  token);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    name);    	non-compiled	[CE]  cannot  find  symbol  token	13	None	replace
817	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  message);  [CE]  cannot  find  symbol  message  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  message);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  message);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    name);    	non-compiled	[CE]  cannot  find  symbol  message	13	None	replace
818	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	32	None	replace
819	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  block);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	32	None	replace
820	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	32	None	replace
821	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.CALL);  [CE]  cannot  find  symbol  name  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  name	32	None	replace
822	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	32	None	replace
823	[BUG]  [BUGGY]  return  this.block!=  null?  null  :  block.clone();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  this.block!=  null?  null  :  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  this.block!=  null?  null  :  block.clone();	  return    this.block    ==    null?    null    :    block.clone();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	113	None	replace
824	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	227	None	replace
825	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
826	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  token.cloneTree()):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  token  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  token.cloneTree()):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  token.cloneTree()):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  token	86	None	replace
827	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	86	None	replace
828	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	86	None	replace
829	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.FOR);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.FOR);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	86	None	replace
830	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.NAME));  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	164	None	replace
831	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  not  a  statement	101	None	replace
832	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.setString(Token.NAME);  [CE]  not  a  statement  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.setString(Token.NAME);	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  not  a  statement	101	None	replace
833	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
834	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  null?  null  :  block.getNext();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  null?  null  :  block.getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  null?  null  :  block.getNext();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
835	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
836	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
837	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
838	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
839	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
840	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
841	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  name);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	36	None	replace
842	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  this);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  this);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	36	None	replace
843	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EMPTY);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	36	None	replace
844	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EXPR_RESULT);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EXPR_RESULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  Block.EXPR_RESULT);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	36	None	replace
845	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  true);  [CE]  no  suitable  method  found  for  newString(int,int,int,boolean)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  true);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  true);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,boolean)	179	None	replace
846	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE):  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE):  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE):  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	179	None	replace
847	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Boolean.TRUE);  [CE]  no  suitable  method  found  for  newString(int,int,int,Boolean)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Boolean.TRUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Boolean.TRUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,Boolean)	179	None	replace
848	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  node  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  node	179	None	replace
849	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Boolean.FALSE);  [CE]  no  suitable  method  found  for  newString(int,int,int,Boolean)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Boolean.FALSE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Boolean.FALSE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,Boolean)	179	None	replace
850	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Double.NaN);  [CE]  no  suitable  method  found  for  newString(int,int,int,double)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Double.NaN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Double.NaN);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,double)	179	None	replace
851	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.toString();  [CE]  incompatible  types  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.toString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.toString();	  return    block    ==    null?    null    :    block.toString();    	non-compiled	[CE]  incompatible  types	242	None	replace
852	[BUG]  [BUGGY]  return  block  ==  null,  null?  null  :  block.toString();  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null,  null?  null  :  block.toString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null,  null?  null  :  block.toString();	  return    block    ==    null?    null    :    block.toString();    	non-compiled	[CE]  ';'  expected	242	None	replace
853	[BUG]  [BUGGY]  Node  block  =  block  ==  null?  null  :  block.toString();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block  ==  null?  null  :  block.toString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block  ==  null?  null  :  block.toString();	  return    block    ==    null?    null    :    block.toString();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	242	None	replace
854	[BUG]  [BUGGY]  return  block  ==  null? "null "  :  block.toString();  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null? "null "  :  block.toString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null? "null "  :  block.toString();	  return    block    ==    null?    null    :    block.toString();    	non-compiled	[CE]  incompatible  types	242	None	replace
855	[BUG]  [BUGGY]  return  block  ==  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	245	None	replace
856	[BUG]  [BUGGY]  return  block!=  null?  node.clone()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  node  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.clone()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.clone()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  node	245	None	replace
857	[BUG]  [BUGGY]  return  block!=  null?  Block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  Block  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  Block	245	None	replace
858	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0,  Integer.MIN_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	182	None	replace
859	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  true);  [CE]  no  suitable  method  found  for  newString(int,int,int,boolean)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  true);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  true);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,boolean)	182	None	replace
860	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  Long.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int,long)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  Long.MAX_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,long)	182	None	replace
861	[BUG]  [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  node  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  node.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  node	182	None	replace
862	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  1);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  1);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	182	None	replace
863	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  int);  [CE]  '.class'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  int);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  int);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  '.class'  expected	182	None	replace
864	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  Double.POSITIVE_INFINITY);  [CE]  no  suitable  method  found  for  newString(int,int,int,double)  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  Double.POSITIVE_INFINITY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  Double.POSITIVE_INFINITY);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,double)	182	None	replace
865	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.EMPTY));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	186	None	replace
866	[BUG]  [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.EMPTY));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	186	None	replace
867	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.EMPTY);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.EMPTY);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.EMPTY));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	186	None	replace
868	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.EMPTY));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	186	None	replace
869	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.EMPTY);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.EMPTY);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.EMPTY);  block.addChildToBack(new  Node(Token.BLOCK));	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.EMPTY));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	186	None	replace
870	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  not  a  statement	212	None	replace
871	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  not  a  statement	212	None	replace
872	[BUG]  [BUGGY]  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	168	None	replace
873	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getFirstChild());    	non-compiled	[CE]  not  a  statement	168	None	replace
874	[BUG]  [BUGGY]  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	168	None	replace
875	[BUG]  [BUGGY]  final  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	168	None	replace
876	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  [CE]  not  a  statement  [FE]                    NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getFirstChild());    	non-compiled	[CE]  not  a  statement	168	None	replace
877	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block.clone();	  return    block!=    null?    new    Node(Token.NAME):    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	150	None	replace
878	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  Token.BLOCK):  block.clone();  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  Token.BLOCK):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  Token.BLOCK):  block.clone();	  return    block!=    null?    new    Node(Token.NAME):    block.clone();    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	150	None	replace
879	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.clone();  [CE]  cannot  find  symbol  Block  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  Block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  Block.clone();	  return    block!=    null?    new    Node(Token.NAME):    block.clone();    	non-compiled	[CE]  cannot  find  symbol  Block	150	None	replace
880	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME),  block.clone();  [CE]  :  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME),  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME),  block.clone();	  return    block!=    null?    new    Node(Token.NAME):    block.clone();    	non-compiled	[CE]  :  expected	150	None	replace
881	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  name);  [CE]  cannot  find  symbol  name  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  name);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  name	175	None	replace
882	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  name);  [CE]  cannot  find  symbol  name  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  name);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  name	175	None	replace
883	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  token);  [CE]  cannot  find  symbol  name  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  token);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  token);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  name	175	None	replace
884	[BUG]  [BUGGY]  return  name  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  name  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  name  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  name  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  block);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  name	175	None	replace
885	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  symbol);  [CE]  cannot  find  symbol  name  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  symbol);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  symbol);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  name	175	None	replace
886	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  token);  [CE]  cannot  find  symbol  name  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  token);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  token);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  name	175	None	replace
887	[BUG]  [BUGGY]  return  block.getType()!=  Token.NAME?  block.getName()  :  Token.BLOCK;  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()!=  Token.NAME?  block.getName()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()!=  Token.NAME?  block.getName()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getName()    :    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
888	[BUG]  [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getName()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getName()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block.getType()  ==  Token.NAME?  block.getName()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getName()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	68	None	replace
889	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getName()  :  Node.BLOCK;  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getName()  :  Node.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  block.getName()  :  Node.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getName()    :    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
890	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  NullPointerException  	96	3	replace
891	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  NullPointerException  	96	3	replace
892	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
893	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
894	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
895	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
896	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()!=  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block.getType()!=  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
897	[BUG]  [BUGGY]  return  block.getType()!=  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()!=  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()!=  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
898	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
899	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  String.valueOf(0));  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  null  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
900	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	42	None	replace
901	[BUG]  [BUGGY]  node!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  not  a  statement	42	None	replace
902	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
903	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block.setString(Token.NAME);  block.setString(Token.NAME);  }  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block.setString(Token.NAME);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block.setString(Token.NAME);  block.setString(Token.NAME);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  ')'  expected	42	None	replace
904	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    null    :    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  ';'  expected	87	None	replace
905	[BUG]  [BUGGY]  return  block  >=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  >=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  >=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    null    :    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  ';'  expected	87	None	replace
906	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL);  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    null    :    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  ';'  expected	87	None	replace
907	[BUG]  [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  not  a  statement  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  not  a  statement	217	None	replace
908	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	217	None	replace
909	[BUG]  [BUGGY]  return  block  ==  null?  block.getType()  :  Token.NAME,  block.getType()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.getType()  :  Token.NAME,  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.getType()  :  Token.NAME,  block.getType()  :  Token.BLOCK;	  return    block    ==    null?    block.getType()    :    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	158	None	replace
910	[BUG]  [BUGGY]  return  block  ==  null?  block.getType()  :  Token.NAME  &&  block.getType()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.getType()  :  Token.NAME  &&  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.getType()  :  Token.NAME  &&  block.getType()  :  Token.BLOCK;	  return    block    ==    null?    block.getType()    :    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	158	None	replace
911	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.FOR);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.FOR);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.FOR);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	117	None	replace
912	[BUG]  [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.FOR);  [CE]  not  a  statement  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.FOR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.FOR);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.FOR);    	non-compiled	[CE]  not  a  statement	117	None	replace
913	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  false);  [CE]  cannot  find  symbol  Block  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  false);	  return    block    ==    null?    new    Node(Token.NAME):    Block.valueOf(block);    	non-compiled	[CE]  cannot  find  symbol  Block	134	None	replace
914	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  true);  [CE]  cannot  find  symbol  Block  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  true);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  true);	  return    block    ==    null?    new    Node(Token.NAME):    Block.valueOf(block);    	non-compiled	[CE]  cannot  find  symbol  Block	134	None	replace
915	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  1);  [CE]  cannot  find  symbol  Block  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  1);	  return    block    ==    null?    new    Node(Token.NAME):    Block.valueOf(block);    	non-compiled	[CE]  cannot  find  symbol  Block	134	None	replace
916	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  JSErrorDialog(this));  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  JSErrorDialog(this));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this,  new  JSErrorDialog(this));	  NodeTraversal.traverse(compiler,    block,    new    JSErrorDialog(this));    	non-compiled	[CE]  cannot  find  symbol  compiler	52	None	replace
917	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  JSErrorDialog(this));  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  JSErrorDialog(this));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  constructor,  new  JSErrorDialog(this));	  NodeTraversal.traverse(compiler,    block,    new    JSErrorDialog(this));    	non-compiled	[CE]  cannot  find  symbol  compiler	52	None	replace
918	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  JSErrorDialog(this));  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  new  JSErrorDialog(this));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  new  JSErrorDialog(this));	  NodeTraversal.traverse(compiler,    block,    new    JSErrorDialog(this));    	non-compiled	[CE]  cannot  find  symbol  compiler	52	None	replace
919	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  JSErrorDialog(this));  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  JSErrorDialog(this));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  IR,  new  JSErrorDialog(this));	  NodeTraversal.traverse(compiler,    block,    new    JSErrorDialog(this));    	non-compiled	[CE]  cannot  find  symbol  compiler	52	None	replace
920	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  panel,  new  JSErrorDialog(this));  [CE]  cannot  find  symbol  compiler  [FE]                                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  panel,  new  JSErrorDialog(this));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  panel,  new  JSErrorDialog(this));	  NodeTraversal.traverse(compiler,    block,    new    JSErrorDialog(this));    	non-compiled	[CE]  cannot  find  symbol  compiler	52	None	replace
921	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  block,  new  JSErrorDialog(this));  [CE]  cannot  find  symbol  compiler  [FE]                                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  block,  new  JSErrorDialog(this));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  errorReporter,  block,  new  JSErrorDialog(this));	  NodeTraversal.traverse(compiler,    block,    new    JSErrorDialog(this));    	non-compiled	[CE]  cannot  find  symbol  compiler	52	None	replace
922	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  String.valueOf(block.toString()));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	198	None	add
923	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  null?  Node.newString(Token.BLOCK):  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  null?  Node.newString(Token.BLOCK):  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  null?  Node.newString(Token.BLOCK):  Node.newString(Token.NAME,  String.valueOf(block.toString()));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	198	None	add
924	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.NAME,  String.valueOf(block.toString()));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.NAME,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  new  Node(Token.NAME,  String.valueOf(block.toString()));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	198	None	add
925	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	198	None	add
926	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  String.valueOf(block.toString()));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  String.valueOf(block.toString()));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	198	None	add
927	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.BLOCK,  String.valueOf(block.toString()));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.BLOCK,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  new  Node(Token.BLOCK,  String.valueOf(block.toString()));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	198	None	add
928	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  null?  Node.newString(Token.NAME,  String.valueOf(block.toString()):  null);  [CE]  ')'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  null?  Node.newString(Token.NAME,  String.valueOf(block.toString()):  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  null?  Node.newString(Token.NAME,  String.valueOf(block.toString()):  null);	  	non-compiled	[CE]  ')'  expected	198	None	add
929	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  null?  Node.newString(Token.NAME):  Node.newString(Token.FOR,  String.valueOf(block.toString()));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  null?  Node.newString(Token.NAME):  Node.newString(Token.FOR,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  null?  Node.newString(Token.NAME):  Node.newString(Token.FOR,  String.valueOf(block.toString()));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	198	None	add
930	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent().clonePath();  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent().clonePath();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getParent().clonePath();	  return    block    ==    null?    null    :    block.clonePath();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
931	[BUG]  [BUGGY]  Node  block  =  block  ==  null?  null  :  block.clonePath();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block  ==  null?  null  :  block.clonePath();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block  ==  null?  null  :  block.clonePath();	  return    block    ==    null?    null    :    block.clonePath();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	11	None	replace
932	[BUG]  [BUGGY]  return  block  >=  null?  null  :  block.clonePath();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  >=  null?  null  :  block.clonePath();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  >=  null?  null  :  block.clonePath();	  return    block    ==    null?    null    :    block.clonePath();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	11	None	replace
933	[BUG]  [BUGGY]  final  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  final  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	final  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getLastChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	167	None	replace
934	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  node  ==  null?  null  :  block.getFirstChild();  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  node  ==  null?  null  :  block.getFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getFirstChild();  node  ==  null?  null  :  block.getFirstChild();	  return    block    ==    null?    null    :    block.getFirstChild();    node    ==    null?    null    :    block.getFirstChild();    	non-compiled	[CE]  not  a  statement	100	None	replace
935	[BUG]  [BUGGY]  return  block  ==  null,  null?  null  :  block.getString();  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null,  null?  null  :  block.getString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null,  null?  null  :  block.getString();	  return    block    ==    null?    null    :    block.getString();    	non-compiled	[CE]  ';'  expected	19	None	replace
936	[BUG]  [BUGGY]  Node  block  =  block  ==  null?  null  :  block.getString();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block  ==  null?  null  :  block.getString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block  ==  null?  null  :  block.getString();	  return    block    ==    null?    null    :    block.getString();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	19	None	replace
937	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf(Token.BLOCK):  Node.newString(Token.NAME);  [CE]  ')'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf(Token.BLOCK):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf(Token.BLOCK):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  ')'  expected	55	None	replace
938	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	55	None	replace
939	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  name  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  name	55	None	replace
940	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  name);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	55	None	replace
941	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK),  Node.newString(Token.NAME);  [CE]  :  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK),  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK),  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  :  expected	55	None	replace
942	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EXPR_RESULT);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EXPR_RESULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EXPR_RESULT);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	55	None	replace
943	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setLastChild();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	102	None	replace
944	[BUG]  [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [CE]  not  a  statement  [FE]                    NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	node  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setLastChild();    	non-compiled	[CE]  not  a  statement	102	None	replace
945	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setLastChild();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	102	None	replace
946	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  name  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  name	110	None	replace
947	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME):  Node.newString(Token.NAME,  DEFAULT_NAME);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME):  Node.newString(Token.NAME,  DEFAULT_NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME):  Node.newString(Token.NAME,  DEFAULT_NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	110	None	replace
948	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  false);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  false);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	110	None	replace
949	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  this);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  this);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	110	None	replace
950	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
951	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  JSErrorHandler(),  null);  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  JSErrorHandler(),  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  JSErrorHandler(),  null);	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
952	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  null,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
953	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  IR,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  IR,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
954	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  constructor,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
955	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
956	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  MOVED);  [CE]  cannot  find  symbol  MOVED  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  MOVED);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  MOVED);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    SHORT);    	non-compiled	[CE]  cannot  find  symbol  MOVED	170	None	replace
957	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSE_UNKNOWN);  [CE]  cannot  find  symbol  JSE_UNKNOWN  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSE_UNKNOWN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSE_UNKNOWN);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    SHORT);    	non-compiled	[CE]  cannot  find  symbol  JSE_UNKNOWN	170	None	replace
958	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  name);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	37	None	replace
959	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.NAME,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	37	None	replace
960	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	27	None	replace
961	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
962	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  false,  block,  new  IRReference  <  Node>());  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  false,  block,  new  IRReference  <  Node>());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  false,  block,  new  IRReference  <  Node>());	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
963	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRReference  <  Node>());  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRReference  <  Node>());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  root,  new  IRReference  <  Node>());	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
964	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  NodeTraversal(),  new  IRReference  <  Node>());  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  new  NodeTraversal(),  new  IRReference  <  Node>());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  new  NodeTraversal(),  new  IRReference  <  Node>());	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
965	[BUG]  [BUGGY]  return  block!=  null  &&  block.clone()?  null  :  block.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null  &&  block.clone()?  null  :  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null  &&  block.clone()?  null  :  block.clone();	  return    block.clone()?    null    :    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	60	None	replace
966	[BUG]  [BUGGY]  return  block.clone()?  null  :  Block.newString(Token.NAME);  [CE]  clone()  has  protected  access  in  Object  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()?  null  :  Block.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()?  null  :  Block.newString(Token.NAME);	  return    block.clone()?    null    :    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	60	None	replace
967	[BUG]  [BUGGY]  return  block  [Delete]  null?  null  :  block.clone();  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  [Delete]  null?  null  :  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  [Delete]  null?  null  :  block.clone();	  return    block.clone()?    null    :    block.clone();    	non-compiled	[CE]  ';'  expected	60	None	replace
968	[BUG]  [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.SCRIPT;  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.SCRIPT;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.SCRIPT;	  Node    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	65	None	replace
969	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH),  null);  [CE]  cannot  find  symbol  Locale  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH),  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH),  null);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	171	None	replace
970	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EMPTY);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	55	None	replace
971	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Block.EMPTY);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	55	None	replace
972	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  node  ==  null?  null  :  block.getFirstChild();  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  node  ==  null?  null  :  block.getFirstChild();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  node  ==  null?  null  :  block.getFirstChild();  }	  return    block    ==    null?    null    :    block.getFirstChild();    node    ==    null?    null    :    block.getFirstChild();    	non-compiled	[CE]  not  a  statement	100	None	replace
973	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  block.toString()  :  Node.BLOCK;  [CE]  cannot  find  symbol  BLOCK  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  block.toString()  :  Node.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  block.toString()  :  Node.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.toString()    :    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  BLOCK	224	None	replace
974	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  Block.toString()  :  Token.BLOCK;  [CE]  cannot  find  symbol  Block  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  Block.toString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  Block.toString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.toString()    :    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  Block	224	None	replace
975	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.GETPROP));  [CE]  unreachable  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.GETPROP));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.GETPROP));	  return    block    ==    null?    new    Node(Token.NAME):    block;    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  unreachable  statement	165	None	replace
976	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.EMPTY));  [CE]  unreachable  statement  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.EMPTY));	  return    block    ==    null?    new    Node(Token.NAME):    block;    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  unreachable  statement	165	None	replace
977	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  namespace);  [CE]  cannot  find  symbol  namespace  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  namespace);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  namespace);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    nameNode);    	non-compiled	[CE]  cannot  find  symbol  namespace	177	None	replace
978	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.block.cloneBlock();  [CE]  cannot  find  symbol  block  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.block.cloneBlock();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.block.cloneBlock();	  return    block    ==    null?    null    :    block.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol  block	226	None	replace
979	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.US));  [CE]  cannot  find  symbol  Locale  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.US));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.US));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	183	None	replace
980	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));  [CE]  cannot  find  symbol  Block  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Block	183	None	replace
981	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  name  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  block);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  name	175	None	replace
982	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Name.NAME):  Node.newString(Token.NAME,  name);  [CE]  cannot  find  symbol  Name  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Name.NAME):  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Name.NAME):  Node.newString(Token.NAME,  name);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  Name	175	None	replace
983	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
984	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  missing  return  statement  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  missing  return  statement	76	None	replace
985	[BUG]  [BUGGY]  return  block.clone()  &&  NodeUtil.mayHaveSideEffects(block);  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  &&  NodeUtil.mayHaveSideEffects(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  &&  NodeUtil.mayHaveSideEffects(block);	  return    block.clone()    &&    NodeUtil.isFunctionDeclaration(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	62	None	replace
986	[BUG]  [BUGGY]  return  block  ==  null  &&  NodeUtil.isFunctionDeclaration(block);  [CE]  cannot  find  symbol  NodeUtil  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null  &&  NodeUtil.isFunctionDeclaration(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null  &&  NodeUtil.isFunctionDeclaration(block);	  return    block.clone()    &&    NodeUtil.isFunctionDeclaration(block);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	62	None	replace
987	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  node  ==  null?  new  Node(Token.NAME):  block;  }  [CE]  not  a  statement  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  node  ==  null?  new  Node(Token.NAME):  block;  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  node  ==  null?  new  Node(Token.NAME):  block;  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    node    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  not  a  statement	126	None	replace
988	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  node!=  null?  new  Node(Token.NAME):  block;  [CE]  not  a  statement  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  node!=  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block;  node!=  null?  new  Node(Token.NAME):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    node    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  not  a  statement	126	None	replace
989	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	236	None	replace
990	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
991	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  block);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	22	None	replace
992	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	22	None	replace
993	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRNodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRNodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  root,  new  IRNodeTraversal());	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
994	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  IRNodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  IRNodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  builder,  new  IRNodeTraversal());	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
995	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.node,  new  IRNodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.node,  new  IRNodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.node,  new  IRNodeTraversal());	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
996	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  String.valueOf);  [CE]  cannot  find  symbol  valueOf  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  String.valueOf);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  String.valueOf);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  cannot  find  symbol  valueOf	146	None	replace
997	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  Integer.MAX_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	146	None	replace
998	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  BLOCK);  [CE]  cannot  find  symbol  BLOCK  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  BLOCK);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	146	None	replace
999	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  this);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	146	None	replace
1000	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  Block.EMPTY);  [CE]  cannot  find  symbol  Block  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  Block.EMPTY);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  cannot  find  symbol  Block	146	None	replace
1001	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  Integer.MIN_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	146	None	replace
1002	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }  [CE]  missing  return  statement  [FE]                      NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.GETPROP));    	non-compiled	[CE]  missing  return  statement	47	None	replace
1003	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.GETPROP));    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
1004	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	70	None	replace
1005	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  root,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
1006	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  globalName,  block,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  globalName,  block,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  globalName,  block,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
1007	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  false,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  false,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  false,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
1008	[BUG]  [BUGGY]  return  block  ==  null?  block.getName()  :  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.getName()  :  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.getName()  :  Token.NAME?  block.getType()  :  Token.BLOCK;	  return    block    ==    null?    block.getType()    :    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1009	[BUG]  [BUGGY]  return  block!=  null?  block.getName()  :  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getName()  :  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getName()  :  Token.NAME?  block.getType()  :  Token.BLOCK;	  return    block    ==    null?    block.getType()    :    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1010	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.GETPROP,  token);  [CE]  cannot  find  symbol  token  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.GETPROP,  token);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.GETPROP,  token);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol  token	188	None	replace
1011	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.SETPROP);  [CE]  cannot  find  symbol  SETPROP  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.SETPROP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.SETPROP);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol  SETPROP	188	None	replace
1012	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getFirstChild();  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getFirstChild();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getFirstChild();  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getFirstChild();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	98	None	replace
1013	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.STRING);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.STRING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.STRING);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	86	None	replace
1014	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.NAME,  name);  [CE]  cannot  find  symbol  name  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.NAME,  name);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  name	86	None	replace
1015	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  BLOCK  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	86	None	replace
1016	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  name);  [CE]  cannot  find  symbol  Block  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  name);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  Block	26	None	replace
1017	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  Block  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  BLOCK);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  Block	26	None	replace
1018	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  Token.CALL);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  Token.CALL);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1019	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	197	None	replace
1020	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1021	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  MockImpl());  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  MockImpl());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  root,  new  MockImpl());	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
1022	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  MockImpl());  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  new  MockImpl());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  new  MockImpl());	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
1023	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  MockImpl());  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  MockImpl());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  builder,  new  MockImpl());	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
1024	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  false,  block,  new  MockImpl());  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  false,  block,  new  MockImpl());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  false,  block,  new  MockImpl());	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
1025	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  NodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  NodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  NodeTraversal());	  NodeTraversal.traverse(compiler,    block);    	non-compiled	[CE]  cannot  find  symbol  compiler	50	None	replace
1026	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  BlockUtil.cloneNode(block);  [CE]  cannot  find  symbol  BlockUtil  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  BlockUtil.cloneNode(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  BlockUtil.cloneNode(block);	  return    block!=    null?    new    Node(Token.NAME):    block.clone();    	non-compiled	[CE]  cannot  find  symbol  BlockUtil	150	None	replace
1027	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  BlockUtil.clone(block);  [CE]  cannot  find  symbol  BlockUtil  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  BlockUtil.clone(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  BlockUtil.clone(block);	  return    block!=    null?    new    Node(Token.NAME):    block.clone();    	non-compiled	[CE]  cannot  find  symbol  BlockUtil	150	None	replace
1028	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.MOVED);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.MOVED);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.MOVED);	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
1029	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	120	None	replace
1030	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1031	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	31	None	replace
1032	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	31	None	replace
1033	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Block  block  =  Node.newString(Token.NAME,  String.valueOf(true));  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Block  block  =  Node.newString(Token.NAME,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Block  block  =  Node.newString(Token.NAME,  String.valueOf(true));	  	non-compiled	[CE]  cannot  find  symbol	93	None	add
1034	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Block  block  =  Node.newString(Token.NAME,  String.valueOf(false));  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Block  block  =  Node.newString(Token.NAME,  String.valueOf(false));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Block  block  =  Node.newString(Token.NAME,  String.valueOf(false));	  	non-compiled	[CE]  cannot  find  symbol	93	None	add
1035	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  Node.newString(Token.BLOCK,  String.valueOf(true));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  Node.newString(Token.BLOCK,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  Node.newString(Token.BLOCK,  String.valueOf(true));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
1036	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  false,  block,  this);  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  false,  block,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  false,  block,  this);	  NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	49	None	replace
1037	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  builder,  this);  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  builder,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  builder,  this);	  NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	49	None	replace
1038	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  NAME  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  NAME	220	None	replace
1039	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  this);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	14	None	replace
1040	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	14	None	replace
1041	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  BLOCK);  [CE]  cannot  find  symbol  BLOCK  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	14	None	replace
1042	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_SYNTHETIC);  [CE]  cannot  find  symbol  DEFAULT_SYNTHETIC  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_SYNTHETIC);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_SYNTHETIC);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SYNTHETIC	203	None	replace
1043	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.CALL));    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1044	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [CE]  missing  return  statement  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.CALL));    	non-compiled	[CE]  missing  return  statement	74	None	replace
1045	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  3);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  3);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  3);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	230	None	replace
1046	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  10);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  10);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  10);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	230	None	replace
1047	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  JSErrorDialog(this));  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  JSErrorDialog(this));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  builder,  new  JSErrorDialog(this));	  NodeTraversal.traverse(compiler,    block,    new    JSErrorDialog(this));    	non-compiled	[CE]  cannot  find  symbol  compiler	52	None	replace
1048	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  block,  new  JSErrorDialog(this));  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this,  block,  new  JSErrorDialog(this));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this,  block,  new  JSErrorDialog(this));	  NodeTraversal.traverse(compiler,    block,    new    JSErrorDialog(this));    	non-compiled	[CE]  cannot  find  symbol  compiler	52	None	replace
1049	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  null  :  block.getName()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  null  :  block.getName()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  null  :  block.getName()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getName()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	68	None	replace
1050	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  block.toName()  :  Token.BLOCK;  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  block.toName()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  block.toName()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getName()    :    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1051	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getLastChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	167	None	replace
1052	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  else  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  else  {  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  else  {	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1053	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  node  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [CE]  cannot  find  symbol  node  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  node  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  node  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  node	167	None	replace
1054	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getLastChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	167	None	replace
1055	[BUG]  [BUGGY]  return  block  >=  null?  null  :  block.toString();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  >=  null?  null  :  block.toString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  >=  null?  null  :  block.toString();	  return    block    ==    null?    null    :    block.toString();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	242	None	replace
1056	[BUG]  [BUGGY]  return  block  ==  null?  null  :  Block.toString(block);  [CE]  cannot  find  symbol  Block  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  Block.toString(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  Block.toString(block);	  return    block    ==    null?    null    :    block.toString();    	non-compiled	[CE]  cannot  find  symbol  Block	242	None	replace
1057	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.STRING);  [CE]  cannot  find  symbol  Block  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.STRING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.STRING);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  Block	187	None	replace
1058	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.BLOCK,  1);  [CE]  cannot  find  symbol  Block  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.BLOCK,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.BLOCK,  1);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  Block	187	None	replace
1059	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode(Token.NAME);  [CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneNode(Token.NAME);	  return    block!=    null?    null    :    block.cloneNode();    	non-compiled	[CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;	10	None	replace
1060	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode(Token.EMPTY);  [CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode(Token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneNode(Token.EMPTY);	  return    block!=    null?    null    :    block.cloneNode();    	non-compiled	[CE]  method  cloneNode  in  class  Node  cannot  be  applied  to  given  types;	10	None	replace
1061	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1062	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null  &&  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null  &&  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	compilable	  [FE]  IllegalStateException  	94	3	replace
1063	[BUG]  [BUGGY]  return  block!=  null  &&  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null  &&  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null  &&  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	compilable	  [FE]  IllegalStateException  	94	3	replace
1064	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
1065	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);  block.setLastChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
1066	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
1067	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token.NAME):  Node.newString(Token.NAME,  token.BLOCK);  [CE]  cannot  find  symbol  token  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  token.NAME):  Node.newString(Token.NAME,  token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  token.NAME):  Node.newString(Token.NAME,  token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	39	None	replace
1068	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	39	None	replace
1069	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK,  symbol);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK,  symbol);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK,  symbol);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	39	None	replace
1070	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.BLOCK):  Node.newString(Token.NAME,  token.NAME);  [CE]  cannot  find  symbol  token  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.BLOCK):  Node.newString(Token.NAME,  token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token.BLOCK):  Node.newString(Token.NAME,  token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	39	None	replace
1071	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
1072	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	229	None	replace
1073	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	222	None	replace
1074	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
1075	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	32	None	replace
1076	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.CALL,  block);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	32	None	replace
1077	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  EXPR_RESULT):  Node.newString(Token.CALL);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  EXPR_RESULT):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  EXPR_RESULT):  Node.newString(Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	32	None	replace
1078	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.EMPTY):  Block.EMPTY;  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.EMPTY):  Block.EMPTY;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.EMPTY):  Block.EMPTY;	  return    block    ==    null?    new    Node(Token.NAME):    Block.EMPTY;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	137	None	replace
1079	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.EMPTY):  Block.EMPTY;  [CE]  cannot  find  symbol  Block  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.EMPTY):  Block.EMPTY;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.EMPTY):  Block.EMPTY;	  return    block    ==    null?    new    Node(Token.NAME):    Block.EMPTY;    	non-compiled	[CE]  cannot  find  symbol  Block	137	None	replace
1080	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.EMPTY  +  1;  [CE]  cannot  find  symbol  Block  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.EMPTY  +  1;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.EMPTY  +  1;	  return    block    ==    null?    new    Node(Token.NAME):    Block.EMPTY;    	non-compiled	[CE]  cannot  find  symbol  Block	137	None	replace
1081	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  Runnable());  [CE]  cannot  find  symbol  compiler  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  Runnable());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  builder,  new  Runnable());	  NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	207	None	replace
1082	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  Runnable());  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  Runnable());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  root,  new  Runnable());	  NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	207	None	replace
1083	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  Runnable());  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  Runnable());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  constructor,  new  Runnable());	  NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	207	None	replace
1084	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()),    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	206	None	replace
1085	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.LP);  [CE]  cannot  find  symbol  LP  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.LP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.LP);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  LP	18	None	replace
1086	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getClass()):  Node.newString(Token.NAME,  getClass()));  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getClass()):  Node.newString(Token.NAME,  getClass()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getClass()):  Node.newString(Token.NAME,  getClass()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getClass()));    	non-compiled	[CE]  ';'  expected	80	None	replace
1087	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getClass())+  1);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getClass())+  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getClass())+  1);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getClass()));    	non-compiled	[CE]  ';'  expected	80	None	replace
1088	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(null);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	77	None	replace
1089	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	213	None	replace
1090	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	213	None	replace
1091	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
1092	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
1093	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1094	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.EMPTY);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	147	None	replace
1095	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
1096	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
1097	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
1098	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
1099	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
1100	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	164	None	replace
1101	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  block.addChildToBack(new  Node(Token.NAME));  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	164	None	replace
1102	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK),  block;  [CE]  :  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK),  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK),  block;	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  :  expected	215	None	replace
1103	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  node;  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  node;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  node;	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	215	None	replace
1104	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.newString(Token.NAME);  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.newString(Token.NAME);	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	215	None	replace
1105	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  name);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
1106	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
1107	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
1108	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getLocalName()):  Node.newString(Token.NAME,  getLocalName()));  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getLocalName()):  Node.newString(Token.NAME,  getLocalName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getLocalName()):  Node.newString(Token.NAME,  getLocalName()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getLocalName()));    	non-compiled	[CE]  ';'  expected	79	None	replace
1109	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getVarName()));  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getVarName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getVarName()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getLocalName()));    	non-compiled	[CE]  ';'  expected	79	None	replace
1110	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()  +  1));  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()  +  1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()  +  1));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getLocalName()));    	non-compiled	[CE]  ';'  expected	79	None	replace
1111	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	138	None	add
1112	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	138	None	add
1113	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	36	None	replace
1114	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.parser,  block,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.parser,  block,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.parser,  block,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
1115	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  root,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
1116	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	97	None	replace
1117	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.newString(Token.NAME);  [CE]  no  suitable  method  found  for  newString(int)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.newString(Token.NAME);	  return    block    ==    null?    null    :    block.newString();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	142	None	replace
1118	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.newName();  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.newName();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.newName();	  return    block    ==    null?    null    :    block.newString();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1119	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
1120	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
1121	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	3	None	add
1122	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(block);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
1123	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  }  [CE]  missing  return  statement  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(block);    	non-compiled	[CE]  missing  return  statement	127	None	replace
1124	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  missing  return  statement  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(block);    	non-compiled	[CE]  missing  return  statement	127	None	replace
1125	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild().getString();  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild().getString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getFirstChild().getString();	  return    block!=    null?    null    :    block.getFirstChild().getType();    	non-compiled	[CE]  incompatible  types	241	None	replace
1126	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME,  DEFAULT_NAME);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME,  DEFAULT_NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME,  DEFAULT_NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	162	None	replace
1127	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.STRING);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.STRING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.STRING);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	162	None	replace
1128	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  new  Node(Token.TRY);  block.addChildToBack(new  Node(Token.BLOCK));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
1129	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
1130	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
1131	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
1132	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
1133	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block);  block.addChildToFront(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block);  block.addChildToFront(this);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	218	None	replace
1134	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getSourceName());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getSourceName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getSourceName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getSourceName());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
1135	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "));  [CE]  unclosed  string  literal  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "));	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "   "));    	non-compiled	[CE]  unclosed  string  literal	154	None	replace
1136	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "));  [CE]  unclosed  string  literal  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "));	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "   "));    	non-compiled	[CE]  unclosed  string  literal	154	None	replace
1137	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  BLOCK);  [CE]  cannot  find  symbol  BLOCK  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  BLOCK);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	84	None	replace
1138	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  MOVED);  [CE]  cannot  find  symbol  MOVED  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  MOVED);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  MOVED);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  cannot  find  symbol  MOVED	84	None	replace
1139	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  SHORT):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  SHORT  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  SHORT):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  SHORT):  Node.newString(Token.NAME,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  SHORT	221	None	replace
1140	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  BLOCK,  name);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	221	None	replace
1141	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuffer());  [CE]  no  suitable  method  found  for  newString(int,int,StringBuffer)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuffer());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuffer());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,StringBuffer)	232	None	replace
1142	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder()));  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder()));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  ';'  expected	232	None	replace
1143	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  NAME  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NAME	38	None	replace
1144	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  BLOCK  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	38	None	replace
1145	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  DEFAULT_BLOCK);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  DEFAULT_BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  DEFAULT_BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	38	None	replace
1146	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  IllegalStateException( "NodeTraversal.block() "));  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  new  IllegalStateException( "NodeTraversal.block() "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  new  IllegalStateException( "NodeTraversal.block() "));	  NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "NodeTraversal.block()       "));    	non-compiled	[CE]  cannot  find  symbol  compiler	194	None	replace
1147	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block "));  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block "));	  NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "NodeTraversal.block()       "));    	non-compiled	[CE]  cannot  find  symbol  compiler	194	None	replace
1148	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  1);  [CE]  clone()  has  protected  access  in  Object  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  1);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	243	None	replace
1149	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  BLOCK);  [CE]  clone()  has  protected  access  in  Object  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  BLOCK);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	243	None	replace
1150	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getSimpleName()));  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getSimpleName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getSimpleName()));	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	205	None	replace
1151	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName())+  1);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName())+  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName())+  1);	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	205	None	replace
1152	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.STRING);  [CE]  clone()  has  protected  access  in  Object  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.STRING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.STRING);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	244	None	replace
1153	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.EMPTY);  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.EMPTY);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	244	None	replace
1154	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  IOContext.UNKNOWN);  [CE]  cannot  find  symbol  IOContext  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  IOContext.UNKNOWN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  IOContext.UNKNOWN);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    this);    	non-compiled	[CE]  cannot  find  symbol  IOContext	181	None	replace
1155	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError);  [CE]  cannot  find  symbol  JSError  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    this);    	non-compiled	[CE]  cannot  find  symbol  JSError	181	None	replace
1156	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1157	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	75	None	replace
1158	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
1159	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	34	None	replace
1160	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  NAME  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  NAME	29	None	replace
1161	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  BLOCK  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	29	None	replace
1162	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.ARRAY);  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.ARRAY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.ARRAY);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	245	None	replace
1163	[BUG]  [BUGGY]  return  block  ==  null  &&  NodeUtil.isFunctionAnonymous(block);  [CE]  cannot  find  symbol  NodeUtil  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null  &&  NodeUtil.isFunctionAnonymous(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null  &&  NodeUtil.isFunctionAnonymous(block);	  return    block.clone()    &&    NodeUtil.isFunctionAnonymous(block);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	64	None	replace
1164	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	168	None	replace
1165	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild()  ==  null?  null  :  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	168	None	replace
1166	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.TRY);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	235	None	replace
1167	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.TRY);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	235	None	replace
1168	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  }  else  {  throw  new  IllegalStateException( " ");  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	123	None	replace
1169	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  }  else  {  Block  block  =  new  Node(Token.BLOCK);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  }  else  {  Block  block  =  new  Node(Token.BLOCK);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  }  else  {  Block  block  =  new  Node(Token.BLOCK);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	123	None	replace
1170	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.NAME):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  NAME  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.NAME):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.NAME):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    String.valueOf):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  NAME	173	None	replace
1171	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.STRING):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  STRING  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.STRING):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.STRING):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    String.valueOf):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  STRING	173	None	replace
1172	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.BLOCK):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  BLOCK  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.BLOCK):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.BLOCK):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    String.valueOf):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	173	None	replace
1173	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.LP):  Node.newString(Token.LP);  [CE]  cannot  find  symbol  LP  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.LP):  Node.newString(Token.LP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.LP):  Node.newString(Token.LP);	  return    block!=    null?    Node.newString(Token.NAME,    String.valueOf):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  LP	173	None	replace
1174	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  NAME  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  NAME	174	None	replace
1175	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.ARRAY);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.ARRAY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.ARRAY);	  return    block!=    null?    null    :    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  ';'  expected	87	None	replace
1176	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  String.valueOf);  [CE]  cannot  find  symbol  valueOf  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  String.valueOf);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  String.valueOf);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  valueOf	204	None	replace
1177	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Integer.MAX_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	204	None	replace
1178	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  this);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	204	None	replace
1179	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  0);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  0);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  0);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	204	None	replace
1180	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Integer.MIN_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	204	None	replace
1181	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  JSError);  [CE]  cannot  find  symbol  JSError  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  JSError);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  JSError);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  JSError	204	None	replace
1182	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  NAME  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NAME	111	None	replace
1183	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  BLOCK  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	111	None	replace
1184	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  DEFAULT_BLOCK);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  DEFAULT_BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  DEFAULT_BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	111	None	replace
1185	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  MOVED);  [CE]  cannot  find  symbol  MOVED  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  MOVED);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  MOVED);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  MOVED	180	None	replace
1186	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [CE]  missing  return  statement  [FE]                    NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.CALL));    	non-compiled	[CE]  missing  return  statement	46	None	replace
1187	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.CALL));    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
1188	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Long.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int,long)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Long.MAX_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,long)	179	None	replace
1189	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  1);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  1);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	179	None	replace
1190	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Long.MIN_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int,long)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Long.MIN_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Long.MIN_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,long)	179	None	replace
1191	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  Integer.MIN_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	179	None	replace
1192	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME),  Block.BLOCK;  [CE]  :  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME),  Block.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME),  Block.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME):    Block.BLOCK;    	non-compiled	[CE]  :  expected	135	None	replace
1193	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.BLOCK):  Block.NAME;  [CE]  cannot  find  symbol  Block  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.BLOCK):  Block.NAME;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.BLOCK):  Block.NAME;	  return    block    ==    null?    new    Node(Token.NAME):    Block.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  Block	135	None	replace
1194	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block!=  null?  new  Node(Token.NAME):  block;  [CE]  not  a  statement  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block!=  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block;  block!=  null?  new  Node(Token.NAME):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    block    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  not  a  statement	247	None	replace
1195	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Block  block  =  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Block  block  =  Node.newString(Token.NAME,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Block  block  =  Node.newString(Token.NAME,  String.valueOf(block.toString()));	  	non-compiled	[CE]  cannot  find  symbol	198	None	add
1196	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME,  String.valueOf(block.toString()));  [CE]  ')'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME,  String.valueOf(block.toString()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME,  String.valueOf(block.toString()));	  	non-compiled	[CE]  ')'  expected	198	None	add
1197	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  new  Node(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	198	None	add
1198	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	198	None	add
1199	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	198	None	add
1200	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.toString(block);  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.toString(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK):  Block.toString(block);	  return    block    ==    null?    new    Node(Token.NAME):    Block.toString(block);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	136	None	replace
1201	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  name):  Block.toString(block);  [CE]  cannot  find  symbol  name  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  name):  Block.toString(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  name):  Block.toString(block);	  return    block    ==    null?    new    Node(Token.NAME):    Block.toString(block);    	non-compiled	[CE]  cannot  find  symbol  name	136	None	replace
1202	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	237	None	replace
1203	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  null  :  block.cloneTree();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	237	None	replace
1204	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRNode(Token.BLOCK));  [CE]  cannot  find  symbol  compiler  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRNode(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  root,  new  IRNode(Token.BLOCK));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol  compiler	191	None	replace
1205	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  key,  new  IRNode(Token.BLOCK));  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  key,  new  IRNode(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  key,  new  IRNode(Token.BLOCK));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol  compiler	191	None	replace
1206	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.NAME);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	121	None	replace
1207	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
1208	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  DEFAULT):  block;  [CE]  cannot  find  symbol  DEFAULT  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  DEFAULT):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  DEFAULT):  block;	  return    block    ==    null?    new    Node(Token.NAME,    this):    block;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	216	None	replace
1209	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  DEFAULT_BLOCK):  block;  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  DEFAULT_BLOCK):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  DEFAULT_BLOCK):  block;	  return    block    ==    null?    new    Node(Token.NAME,    this):    block;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	216	None	replace
1210	[BUG]  [BUGGY]  return  block!=  null?  BLOCK.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  BLOCK  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  BLOCK.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  BLOCK.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	85	None	replace
1211	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  token);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  token);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  token);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	28	None	replace
1212	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block;  Node  block  =  null? "null "  :  block;  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block;  Node  block  =  null? "null "  :  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block;  Node  block  =  null? "null "  :  block;	  return    block    ==    null?    null    :    block;    Node    block    =    null?    null    :    block;    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	72	None	replace
1213	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.NAME);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	116	None	replace
1214	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToFront(this);    	non-compiled	[CE]  cannot  find  symbol	248	None	replace
1215	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToFront(this);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	248	None	replace
1216	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToFront(this);  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToFront(this);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToFront(this);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	248	None	replace
1217	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToFront(this);    	non-compiled	[CE]  cannot  find  symbol	248	None	replace
1218	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(this);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1219	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(this);  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(this);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(this);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	124	None	replace
1220	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  new  Node(Token.NAME):  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(this);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	124	None	replace
1221	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	114	None	replace
1222	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK,  block):  block.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK,  block):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.BLOCK,  block):  block.clone();	  return    block!=    null?    new    Node(Token.BLOCK):    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	151	None	replace
1223	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  Block.newString(Token.NAME);  [CE]  cannot  find  symbol  Block  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  Block.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.BLOCK):  Block.newString(Token.NAME);	  return    block!=    null?    new    Node(Token.BLOCK):    block.clone();    	non-compiled	[CE]  cannot  find  symbol  Block	151	None	replace
1224	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRChildren());  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRChildren());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  root,  new  IRChildren());	  NodeTraversal.traverse(compiler,    block,    new    IRChildren());    	non-compiled	[CE]  cannot  find  symbol  compiler	53	None	replace
1225	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  IRChildren());  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  IRChildren());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  builder,  new  IRChildren());	  NodeTraversal.traverse(compiler,    block,    new    IRChildren());    	non-compiled	[CE]  cannot  find  symbol  compiler	53	None	replace
1226	[BUG]  [BUGGY]  return  block!=  null?  key.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  key  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  key.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  key.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  key	15	None	replace
1227	[BUG]  [BUGGY]  return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.BLOCK);  [CE]  int  cannot  be  dereferenced  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Token.NAME.cloneTree()  :  Node.newString(Token.BLOCK);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  int  cannot  be  dereferenced	15	None	replace
1228	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Block.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Block.EMPTY);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	57	None	replace
1229	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  MOVED);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  MOVED);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  MOVED);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	57	None	replace
1230	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Block.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Block.EMPTY);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	57	None	replace
1231	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  block.clone();  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  block.clone();	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
1232	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  BlockUtil.clone(block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  BlockUtil.clone(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  BlockUtil.clone(block);	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	149	None	replace
1233	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
1234	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
1235	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
1236	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
1237	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
1238	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.CALL));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
1239	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  BLOCK  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	239	None	replace
1240	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  name  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  name):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  name	239	None	replace
1241	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getString()  :  Node.BLOCK;  [CE]  cannot  find  symbol  BLOCK  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getString()  :  Node.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  block.getString()  :  Node.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getString()    :    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  BLOCK	223	None	replace
1242	[BUG]  [BUGGY]  Node  block  =  block!=  null?  null  :  block.getName();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block!=  null?  null  :  block.getName();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block!=  null?  null  :  block.getName();	  Node    block    =    block!=    null?    null    :    block.getType();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	105	None	replace
1243	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	40	None	replace
1244	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getType()  }  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()  }  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getType()  }  Token.NAME?  block.getType()  :  Token.BLOCK;	  return    block.getType()!=    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	66	None	replace
1245	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block;  block!=  null?  null  :  block;  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block;  block!=  null?  null  :  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block;  block!=  null?  null  :  block;	  return    block!=    null?    null    :    block;    block!=    null?    null    :    block;    	non-compiled	[CE]  not  a  statement	190	None	replace
1246	[BUG]  [BUGGY]  return  block!=  null?  null  :  block;  block!=  null  :  block;  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block;  block!=  null  :  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block;  block!=  null  :  block;	  return    block!=    null?    null    :    block;    block!=    null?    null    :    block;    	non-compiled	[CE]  not  a  statement	190	None	replace
1247	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT_BLOCK);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT_BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT_BLOCK);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	25	None	replace
1248	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  Integer.MAX_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	182	None	replace
1249	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  value);  [CE]  cannot  find  symbol  value  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  value);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  value);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  value	182	None	replace
1250	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.FOR);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.FOR);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.FOR);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.FOR);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	117	None	replace
1251	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getIdentifier()));  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getIdentifier()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getIdentifier()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getId()));    	non-compiled	[CE]  ';'  expected	82	None	replace
1252	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getShortName()));  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getShortName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getShortName()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getId()));    	non-compiled	[CE]  ';'  expected	82	None	replace
1253	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    new    Node(Token.NAME):    block;    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	132	None	add
1254	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	42	None	replace
1255	[BUG]  [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block!=  null?  null  :  block;  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	42	None	replace
1256	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	42	None	replace
1257	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  missing  return  statement  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  missing  return  statement	44	None	replace
1258	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1259	[BUG]  [BUGGY]  NodeUtil.checkState(block!=  null  &&  block.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block!=  null  &&  block.getType()  ==  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block!=  null  &&  block.getType()  ==  Token.BLOCK);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
1260	[BUG]  [BUGGY]  NodeUtil.checkState(block  ==  null  ||  block.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block  ==  null  ||  block.getType()  ==  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block  ==  null  ||  block.getType()  ==  Token.BLOCK);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
1261	[BUG]  [BUGGY]  NodeUtil.checkState(block!=  null?  block.getType()  ==  Token.BLOCK  :  Token.EMPTY);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block!=  null?  block.getType()  ==  Token.BLOCK  :  Token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block!=  null?  block.getType()  ==  Token.BLOCK  :  Token.EMPTY);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
1262	[BUG]  [BUGGY]  NodeUtil.checkState(block.getType()  ==  Token.BLOCK,  block);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block.getType()  ==  Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block.getType()  ==  Token.BLOCK,  block);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
1263	[BUG]  [BUGGY]  NodeUtil.checkState(block!=  null?  block.getType()  ==  Token.BLOCK  :  Token.NAME);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block!=  null?  block.getType()  ==  Token.BLOCK  :  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block!=  null?  block.getType()  ==  Token.BLOCK  :  Token.NAME);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
1264	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	125	None	replace
1265	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	125	None	replace
1266	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME,  block);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME,  block);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME,  block);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	125	None	replace
1267	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  valueOf  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  valueOf	108	None	replace
1268	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Block  block  =  Node.newString(Token.NAME,  String.valueOf(0));  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Block  block  =  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Block  block  =  Node.newString(Token.NAME,  String.valueOf(0));	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
1269	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  Node.newString(Token.NAME,  String.valueOf(1));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  Node.newString(Token.NAME,  String.valueOf(1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  Node.newString(Token.NAME,  String.valueOf(1));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
1270	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  new  Node(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
1271	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	110	None	replace
1272	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.NAME,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.STRING):  Node.newString(Token.NAME,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	110	None	replace
1273	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  1):  Node.newString(Token.NAME,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  1):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  1):  Node.newString(Token.NAME,  Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	110	None	replace
1274	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  name);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	110	None	replace
1275	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  NullPointerException  	96	3	replace
1276	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  NullPointerException  	96	3	replace
1277	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
1278	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(1));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
1279	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null  &&  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null  &&  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
1280	[BUG]  [BUGGY]  return  block!=  null  &&  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null  &&  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null  &&  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	compilable	  [FE]  IllegalStateException  	96	3	replace
1281	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  NAME  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  NAME):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  NAME	56	None	replace
1282	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  BLOCK  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  BLOCK):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	56	None	replace
1283	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  1);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  1);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  1);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	145	None	replace
1284	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  NAME);  [CE]  cannot  find  symbol  NAME  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  NAME);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  cannot  find  symbol  NAME	145	None	replace
1285	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  JSError);  [CE]  cannot  find  symbol  JSError  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  JSError);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  JSError);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  cannot  find  symbol  JSError	145	None	replace
1286	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()  +  1));  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()  +  1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()  +  1));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getSimpleName()));    	non-compiled	[CE]  ';'  expected	81	None	replace
1287	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()  +  1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()  +  1));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    	compilable	  [FE]  IllegalStateException  	199	3	replace
1288	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()  +  1));  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()  +  1));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()  +  1));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    	compilable	  [FE]  IllegalStateException  	199	3	replace
1289	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(Token.BLOCK),  new  String[]  {  }  );  [CE]  no  suitable  method  found  for  newString(int,String,String[])  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(Token.BLOCK),  new  String[]  {  }  );  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(Token.BLOCK),  new  String[]  {  }  );	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    String[]    {    }    );    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String[])	231	None	replace
1290	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  block);  [CE]  no  suitable  method  found  for  newString(int,int,String[],Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  block);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    String[]    {    }    );    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,String[],Node)	231	None	replace
1291	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  null  :  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	101	None	replace
1292	[BUG]  [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block  ==  null?  null  :  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block  ==  null?  null  :  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	101	None	replace
1293	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  missing  return  statement  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  missing  return  statement	43	None	replace
1294	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Block  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
1295	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	43	None	replace
1296	[BUG]  [BUGGY]  return  block!=  null?  BLOCK.cloneTree()  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  BLOCK  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  BLOCK.cloneTree()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  BLOCK.cloneTree()  :  Node.newString(Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	24	None	replace
1297	[BUG]  [BUGGY]  return  block!=  null?  key.cloneTree()  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  key  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  key.cloneTree()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  key.cloneTree()  :  Node.newString(Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  key	24	None	replace
1298	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  missing  return  statement  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block!=  null?  null  :  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  missing  return  statement	45	None	replace
1299	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
1300	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
1301	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getLastChild();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	99	None	replace
1302	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.SCRIPT);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.SCRIPT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.SCRIPT);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.SEMI);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	148	None	replace
1303	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.ASSIGN);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.ASSIGN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.ASSIGN);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.SEMI);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	148	None	replace
1304	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  name);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  name);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
1305	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
1306	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  MOVED);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  MOVED);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  MOVED);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
1307	[BUG]  [BUGGY]  return  block!=  null?  null  :  block;  block  ==  null?  null  :  block;  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block;  block  ==  null?  null  :  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block;  block  ==  null?  null  :  block;	  return    block    ==    null?    null    :    block;    block    ==    null?    null    :    block;    	non-compiled	[CE]  not  a  statement	185	None	replace
1308	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block;  block  ==  null?  null  :  Node.newString(Token.NAME);  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block;  block  ==  null?  null  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block;  block  ==  null?  null  :  Node.newString(Token.NAME);	  return    block    ==    null?    null    :    block;    block    ==    null?    null    :    block;    	non-compiled	[CE]  not  a  statement	185	None	replace
1309	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block;  block  ==  null?  null  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block;  block  ==  null?  null  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block;  block  ==  null?  null  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    null    :    block;    block    ==    null?    null    :    block;    	non-compiled	[CE]  not  a  statement	185	None	replace
1310	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRNode(Token.TRUE));  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IRNode(Token.TRUE));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  root,  new  IRNode(Token.TRUE));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
1311	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  key,  new  IRNode(Token.TRUE));  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  key,  new  IRNode(Token.TRUE));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  key,  new  IRNode(Token.TRUE));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
1312	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  IRNode(Token.TRUE));  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  new  IRNode(Token.TRUE));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  new  IRNode(Token.TRUE));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
1313	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,double,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Integer.MAX_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,double,int)	16	None	replace
1314	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Double.NEGATIVE_INFINITY);  [CE]  no  suitable  method  found  for  newString(int,int,double,double)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Double.NEGATIVE_INFINITY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Double.POSITIVE_INFINITY,  Double.NEGATIVE_INFINITY);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,double,double)	16	None	replace
1315	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	163	None	replace
1316	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	163	None	replace
1317	[BUG]  [BUGGY]  return  block!=  null?  block.getType()  :  Token.NAME?  block.getType()  :  Token.CALL;  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getType()  :  Token.NAME?  block.getType()  :  Token.CALL;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getType()  :  Token.NAME?  block.getType()  :  Token.CALL;	  return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.CALL;    	non-compiled	[CE]  incompatible  types	225	None	replace
1318	[BUG]  [BUGGY]  return  block  ==  null?  block.getType()  :  Token.NAME?  block.getType()  :  Token.CALL;  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.getType()  :  Token.NAME?  block.getType()  :  Token.CALL;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.getType()  :  Token.NAME?  block.getType()  :  Token.CALL;	  return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.CALL;    	non-compiled	[CE]  incompatible  types	225	None	replace
1319	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getName()  :  Token.CALL;  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getName()  :  Token.CALL;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  block.getName()  :  Token.CALL;	  return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.CALL;    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1320	[BUG]  [BUGGY]  return  block!=  null?  getTree().cloneTree()  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  getTree().cloneTree()  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  getTree().cloneTree()  :  Node.newString(Token.NAME,  getName());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1321	[BUG]  [BUGGY]  return  block!=  null?  new  Node.NAME.cloneTree()  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node.NAME.cloneTree()  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node.NAME.cloneTree()  :  Node.newString(Token.NAME,  getName());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1322	[BUG]  [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.cloneTree()  :  Node.newString(Token.NAME,  getName());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1323	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	238	None	replace
1324	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.EMPTY):  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.EMPTY):  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.EMPTY):  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	238	None	replace
1325	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
1326	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
1327	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  }  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1328	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  }  [CE]  missing  return  statement  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.EMPTY));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.EMPTY));    	non-compiled	[CE]  missing  return  statement	186	None	replace
1329	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.LP);  [CE]  cannot  find  symbol  LP  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.LP);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.LP);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  LP	169	None	replace
1330	[BUG]  [BUGGY]  result.getType()  ==  Token.NAME?  block.getType()  :  Token.STRING;  [CE]  not  a  statement  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  result.getType()  ==  Token.NAME?  block.getType()  :  Token.STRING;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	result.getType()  ==  Token.NAME?  block.getType()  :  Token.STRING;	  result.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  not  a  statement	67	None	replace
1331	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1332	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  missing  return  statement  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  missing  return  statement	73	None	replace
1333	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  Integer.MAX_VALUE);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	12	None	replace
1334	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  TOKEN_BLOCK):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  Node.newString(Token.NAME,  TOKEN_BLOCK):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	compilable	  [FE]  IllegalStateException  	12	3	replace
1335	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  TOKEN_BLOCK):  Node.newString(Token.NAME,  block);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  TOKEN_BLOCK):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  TOKEN_BLOCK):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	compilable	  [FE]  IllegalStateException  	12	3	replace
1336	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	59	None	replace
1337	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	59	None	replace
1338	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getMessage()):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getMessage()):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getMessage()):  Node.newString(Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
1339	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  null?  null  :  block.cloneTree();  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  null?  null  :  block.cloneTree();  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  null?  null  :  block.cloneTree();  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    null?    null    :    block.cloneTree();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	115	None	replace
1340	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	120	None	replace
1341	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1342	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	120	None	replace
1343	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  false):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  constructor  found  for  Node(int,Node,boolean)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  false):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  false):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Node,boolean)	14	None	replace
1344	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  true):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  constructor  found  for  Node(int,Node,boolean)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  true):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  true):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Node,boolean)	14	None	replace
1345	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.FUNCTION):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  constructor  found  for  Node(int,Node,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.FUNCTION):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.FUNCTION):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Node,int)	14	None	replace
1346	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int,int,Node)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  Token.BLOCK,  block);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,Node)	14	None	replace
1347	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	211	None	replace
1348	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  else  {  Block  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  else  {  Block  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  else  {  Block  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	211	None	replace
1349	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	211	None	replace
1350	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  Block  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  Block  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  Block  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	211	None	replace
1351	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  getClass(),  block,  new  MockImpl());  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  getClass(),  block,  new  MockImpl());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  getClass(),  block,  new  MockImpl());	  NodeTraversal.traverse(compiler,    block,    new    MockImpl());    	non-compiled	[CE]  cannot  find  symbol  compiler	193	None	replace
1352	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
1353	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	128	None	add
1354	[BUG]  [BUGGY]  return  this.block  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  this.block  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  this.block  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  this);	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	155	None	replace
1355	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  this,  block);  [CE]  cannot  find  symbol  compiler  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  this,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.cloneTree();  NodeTraversal.traverse(compiler,  this,  block);	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	155	None	replace
1356	[BUG]  [BUGGY]  return  block!=  null?  block.getType()  ==  Token.FUNCTION  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));  [CE]  cannot  find  symbol  Locale  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getType()  ==  Token.FUNCTION  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getType()  ==  Token.FUNCTION  :  Node.newString(Token.NAME,  JSError.make(Locale.ENGLISH));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	171	None	replace
1357	[BUG]  [BUGGY]  Node  block  =  block!=  null?  null  :  block.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block!=  null?  null  :  block.getFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block!=  null?  null  :  block.getFirstChild();	  Node    block    =    block!=    null?    null    :    block.getType();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	105	None	replace
1358	[BUG]  [BUGGY]  Node  block  =  block!=  null?  null  :  block.getParent();  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block!=  null?  null  :  block.getParent();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block!=  null?  null  :  block.getParent();	  Node    block    =    block!=    null?    null    :    block.getType();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	105	None	replace
1359	[BUG]  [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.VAR;  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.VAR;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block.getType()  ==  Token.NAME?  block.getType()  :  Token.VAR;	  Node    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	65	None	replace
1360	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.GETPROP));  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.GETPROP));    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
1361	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  block.cloneTree()  :  Token.BLOCK;  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  block.cloneTree()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  block.cloneTree()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getName()    :    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	68	None	replace
1362	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  new  Node(Token.BLOCK):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToFront(this);    	compilable	  [FE]  IllegalStateException  	248	3	replace
1363	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  block;  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.BLOCK):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToFront(this);    	compilable	  [FE]  IllegalStateException  	248	3	replace
1364	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.CALL):  Block.EMPTY;  [CE]  no  suitable  constructor  found  for  Node(int,int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.CALL):  Block.EMPTY;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.CALL):  Block.EMPTY;	  return    block    ==    null?    new    Node(Token.NAME):    Block.EMPTY;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int)	137	None	replace
1365	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild().getNext().getType();  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild().getNext().getType();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getFirstChild().getNext().getType();	  return    block!=    null?    null    :    block.getFirstChild().getType();    	non-compiled	[CE]  incompatible  types	241	None	replace
1366	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	39	None	replace
1367	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.BLOCK,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	39	None	replace
1368	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.BLOCK):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  token  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  token.BLOCK):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  token.BLOCK):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  token	39	None	replace
1369	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.LONG,  token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.LONG,  token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME):  Node.newString(Token.NAME,  token.LONG,  token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	39	None	replace
1370	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME,  name);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_NAME):  Node.newString(Token.NAME,  name);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	175	None	replace
1371	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block;  node  =  null?  null  :  block;  [CE]  cannot  find  symbol  node  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block;  node  =  null?  null  :  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block;  node  =  null?  null  :  block;	  return    block    ==    null?    null    :    block;    Node    block    =    null?    null    :    block;    	non-compiled	[CE]  cannot  find  symbol  node	72	None	replace
1372	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getLastChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	167	None	replace
1373	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  return  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [CE]  cannot  find  symbol  NodeUtil  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  return  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  return  NodeUtil.newString(Token.NAME,  block.getLastChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	167	None	replace
1374	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getLastChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getLastChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	167	None	replace
1375	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	153	None	replace
1376	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
1377	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(this);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	153	None	replace
1378	[BUG]  [BUGGY]  if(block  ==  null)  {  return  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());  }  [CE]  cannot  find  symbol  compiler  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block  ==  null)  {  return  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block  ==  null)  {  return  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  Runnable());  }	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	156	None	replace
1379	[BUG]  [BUGGY]  Node  block  =  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  block.getType()  ==  Token.NAME?  block.getType()  :  Token.BLOCK;	  Return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	69	None	replace
1380	[BUG]  [BUGGY]  Return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FUNCTION;  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FUNCTION;	  Return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	69	None	replace
1381	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  rootNode,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  rootNode,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  rootNode,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
1382	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  builder,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
1383	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  object,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  object,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  object,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
1384	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorHandler,  new  JSErrorHandler());  [CE]  cannot  find  symbol  compiler  [FE]                                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  errorHandler,  new  JSErrorHandler());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  errorHandler,  new  JSErrorHandler());	  NodeTraversal.traverse(compiler,    block,    new    JSErrorHandler());    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
1385	[BUG]  [BUGGY]  Node  block  =  new  Node(Token.BLOCK,  block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  Node  block  =  new  Node(Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	Node  block  =  new  Node(Token.BLOCK,  block);	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	97	None	replace
1386	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	97	None	replace
1387	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
1388	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getFirstChild().getNext();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	209	None	add
1389	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block  ==  null?  new  Node(Token.NAME):  block;  }  [CE]  not  a  statement  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block  ==  null?  new  Node(Token.NAME):  block;  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block;  block  ==  null?  new  Node(Token.NAME):  block;  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    block    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  not  a  statement	247	None	replace
1390	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block  ==  null?  new  Node(Token.BLOCK):  block;  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  block  ==  null?  new  Node(Token.BLOCK):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block;  block  ==  null?  new  Node(Token.BLOCK):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    block    ==    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  not  a  statement	247	None	replace
1391	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  str):  block.clone();  [CE]  cannot  find  symbol  str  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  str):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  str):  block.clone();	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  cannot  find  symbol  str	149	None	replace
1392	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getMessage()):  block.clone();  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getMessage()):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getMessage()):  block.clone();	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
1393	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  block.clone();  [CE]  no  suitable  method  found  for  newString(int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  block.clone();	  return    block!=    null?    Node.newString(Token.NAME):    block.clone();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	149	None	replace
1394	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  node  =  null?  new  Node(Token.NAME):  block;  [CE]  cannot  find  symbol  node  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  node  =  null?  new  Node(Token.NAME):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block;  node  =  null?  new  Node(Token.NAME):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  cannot  find  symbol  node	122	None	replace
1395	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  Block  block  =  null?  new  Node(Token.BLOCK):  block;  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  block;  Block  block  =  null?  new  Node(Token.BLOCK):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  block;  Block  block  =  null?  new  Node(Token.BLOCK):  block;	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1396	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()  + ") ");  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()  + ") ");  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getLocalName()  + ") ");	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getLocalName()));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	79	None	replace
1397	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getLocalName()):  Node.newString(Token.NAME,  getName()));  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getLocalName()):  Node.newString(Token.NAME,  getName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getLocalName()):  Node.newString(Token.NAME,  getName()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getLocalName()));    	non-compiled	[CE]  ';'  expected	79	None	replace
1398	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.VALUE):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  VALUE  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.VALUE):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.VALUE):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    String.valueOf):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  VALUE	173	None	replace
1399	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  if(block!=  null)  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  if(block!=  null)  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    if(block!=  null)  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	1	None	add
1400	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  block!=  null?  null  :  block.getFirstChild();  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getFirstChild();  block!=  null?  null  :  block.getFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getFirstChild();    block!=  null?  null  :  block.getFirstChild();	  	non-compiled	[CE]  not  a  statement	1	None	add
1401	[BUG]  [BUGGY]  return  block!=  null?  block.getType()  :  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [CE]  incompatible  types  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getType()  :  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getType()  :  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    	non-compiled	[CE]  incompatible  types	96	None	replace
1402	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  value);  [CE]  cannot  find  symbol  value  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  value);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  value);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  value	179	None	replace
1403	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  4);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  4);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MAX_VALUE,  4);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	179	None	replace
1404	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  0,  Integer.MAX_VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	179	None	replace
1405	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRNode(Token.TRUE));  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRNode(Token.TRUE));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  constructor,  new  IRNode(Token.TRUE));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
1406	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  token,  new  IRNode(Token.TRUE));  [CE]  cannot  find  symbol  compiler  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  token,  new  IRNode(Token.TRUE));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  token,  new  IRNode(Token.TRUE));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
1407	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  IRNode(Token.TRUE));  [CE]  cannot  find  symbol  compiler  [FE]                                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  IRNode(Token.TRUE));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  builder,  new  IRNode(Token.TRUE));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.TRUE));    	non-compiled	[CE]  cannot  find  symbol  compiler	196	None	replace
1408	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  str):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  str  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  str):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  str):  Node.newString(Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  str	22	None	replace
1409	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.SCRIPT):  Node.newString(Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.SCRIPT):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.SCRIPT):  Node.newString(Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	22	None	replace
1410	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getMessage()):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getMessage()):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getMessage()):  Node.newString(Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1411	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  block):  Node.newString(Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  block):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  block):  Node.newString(Token.NAME,  block);	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	123	None	replace
1412	[BUG]  [BUGGY]  return  block!=  null?  block.getType()  :  Token.NAME?  block.getString()  :  Token.BLOCK;  [CE]  incompatible  types  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getType()  :  Token.NAME?  block.getString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getType()  :  Token.NAME?  block.getString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.getString()    :    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	223	None	replace
1413	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.STRING,  this);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.STRING);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	145	None	replace
1414	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  PROPERTY);  [CE]  cannot  find  symbol  PROPERTY  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  PROPERTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  PROPERTY);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	178	None	replace
1415	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT_LOCK);  [CE]  cannot  find  symbol  DEFAULT_LOCK  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT_LOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT_LOCK);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOCK	178	None	replace
1416	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT_VAR);  [CE]  cannot  find  symbol  DEFAULT_VAR  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT_VAR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  DEFAULT_VAR);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VAR	178	None	replace
1417	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	238	None	replace
1418	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DEFAULT):  Node.newString(Token.NAME,  Token.DECEMBER);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DEFAULT):  Node.newString(Token.NAME,  Token.DECEMBER);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.DEFAULT):  Node.newString(Token.NAME,  Token.DECEMBER);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	238	None	replace
1419	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_LIST);  [CE]  cannot  find  symbol  DEFAULT_LIST  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_LIST);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_LIST);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LIST	203	None	replace
1420	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_VAR);  [CE]  cannot  find  symbol  DEFAULT_VAR  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_VAR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_VAR);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VAR	203	None	replace
1421	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_ARRAY);  [CE]  cannot  find  symbol  DEFAULT_ARRAY  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_ARRAY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_ARRAY);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_ARRAY	203	None	replace
1422	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_THRESHOLD);  [CE]  cannot  find  symbol  DEFAULT_THRESHOLD  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_THRESHOLD);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  DEFAULT_THRESHOLD);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_THRESHOLD	203	None	replace
1423	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.LP));  [CE]  unreachable  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.LP));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  block;  block.addChildToBack(new  Node(Token.LP));	  return    block    ==    null?    new    Node(Token.NAME):    block;    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  unreachable  statement	165	None	replace
1424	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.SCRIPT):  Node.newString(Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.SCRIPT):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.SCRIPT):  Node.newString(Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	32	None	replace
1425	[BUG]  [BUGGY]  return  block!=  null  &&  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.NAME);  [CE]  clone()  has  protected  access  in  Object  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null  &&  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null  &&  block.clone()?  Node.newString(Token.NAME):  Node.newString(Token.NAME);	  return    block.clone()?    Node.newString(Token.NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	63	None	replace
1426	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getParent());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getParent());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK,  block.getParent());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
1427	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
1428	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	140	None	add
1429	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	236	None	replace
1430	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
1431	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToFront(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	236	None	replace
1432	[BUG]  [BUGGY]  return  block.clone()  &&  NodeUtil.isStatementBlock(block);  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  &&  NodeUtil.isStatementBlock(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  &&  NodeUtil.isStatementBlock(block);	  return    block.clone()    &&    NodeUtil.isFunctionDeclaration(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	62	None	replace
1433	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  charEncoding):  Node.newString(Token.NAME,  charEncoding);  [CE]  cannot  find  symbol  charEncoding  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  charEncoding):  Node.newString(Token.NAME,  charEncoding);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  charEncoding):  Node.newString(Token.NAME,  charEncoding);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  charEncoding	55	None	replace
1434	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	55	None	replace
1435	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  0);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  0);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  0);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	55	None	replace
1436	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.VAR;  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.VAR;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.VAR;	  return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.CALL;    	non-compiled	[CE]  incompatible  types	225	None	replace
1437	[BUG]  [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FOR;  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FOR;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.NAME?  block.getType()  :  Token.FOR;	  return    block.getType()    ==    Token.NAME?    block.getType()    :    Token.CALL;    	non-compiled	[CE]  incompatible  types	225	None	replace
1438	[BUG]  [BUGGY]  return  block!=  null?  block.getType()  :  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [CE]  incompatible  types  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getType()  :  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getType()  :  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    	non-compiled	[CE]  incompatible  types	94	None	replace
1439	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.NAME,  name);  [CE]  cannot  find  symbol  name  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.NAME,  name);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  name	189	None	replace
1440	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.SCRIPT);  [CE]  cannot  find  symbol  Block  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.SCRIPT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.SCRIPT);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  Block	189	None	replace
1441	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setLastChild();  }  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setLastChild();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setLastChild();  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setLastChild();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
1442	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setLastChild();  }  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setLastChild();  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setLastChild();  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setLastChild();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
1443	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.clonePsitiveNode();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.clonePsitiveNode();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.clonePsitiveNode();	  return    block!=    null?    null    :    block.cloneNode();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1444	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	237	None	replace
1445	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
1446	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	237	None	replace
1447	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	237	None	replace
1448	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getMessage()));  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getMessage()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getMessage()));	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getClass()));    	non-compiled	[CE]  ';'  expected	80	None	replace
1449	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getClass()):  Node.newString(Token.NAME,  getClass());  [CE]  non-static  method  getClass()  cannot  be  referenced  from  a  static  context  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getClass()):  Node.newString(Token.NAME,  getClass());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getClass()):  Node.newString(Token.NAME,  getClass());	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getClass()));    	non-compiled	[CE]  non-static  method  getClass()  cannot  be  referenced  from  a  static  context	80	None	replace
1450	[BUG]  [BUGGY]  return  block  ==  null?  block.getType()  :  Token.NAME?  block.getString()  :  Token.BLOCK;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  block.getType()  :  Token.NAME?  block.getString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  block.getType()  :  Token.NAME?  block.getString()  :  Token.BLOCK;	  return    block    ==    null?    block.getType()    :    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	158	None	replace
1451	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  block.toString();  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  block.toString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.BLOCK):  block.toString();	  return    block!=    null?    new    Node(Token.BLOCK):    block.clone();    	non-compiled	[CE]  incompatible  types	151	None	replace
1452	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  block.removeFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  new  Node(Token.BLOCK):  block.removeFirstChild();	  return    block!=    null?    new    Node(Token.BLOCK):    block.clone();    	compilable	  [FE]  IllegalStateException  	151	3	replace
1453	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  block.removeFirstChild();  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.BLOCK):  block.removeFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.BLOCK):  block.removeFirstChild();	  return    block!=    null?    new    Node(Token.BLOCK):    block.clone();    	compilable	  [FE]  IllegalStateException  	151	3	replace
1454	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getString();  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getFirstChild().getString();	  return    block    ==    null?    null    :    block.getFirstChild().getType();    	non-compiled	[CE]  incompatible  types	208	None	replace
1455	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext().getType();  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getFirstChild().getNext().getType();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getFirstChild().getNext().getType();	  return    block    ==    null?    null    :    block.getFirstChild().getType();    	non-compiled	[CE]  incompatible  types	208	None	replace
1456	[BUG]  [BUGGY]  return  block!=  null?  tokens.cloneTree()  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  tokens  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  tokens.cloneTree()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  tokens.cloneTree()  :  Node.newString(Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  tokens	24	None	replace
1457	[BUG]  [BUGGY]  return  block!=  null?  new  Node.cloneTree()  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node.cloneTree()  :  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node.cloneTree()  :  Node.newString(Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
1458	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  builder,  block);  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  builder,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  builder,  block);	  NodeTraversal.traverse(compiler,    block);    	non-compiled	[CE]  cannot  find  symbol  compiler	50	None	replace
1459	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.blocks);  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.blocks);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.blocks);	  NodeTraversal.traverse(compiler,    block);    	non-compiled	[CE]  cannot  find  symbol  compiler	50	None	replace
1460	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  block):  Token.BLOCK  +  1;  [CE]  incompatible  types  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  block):  Token.BLOCK  +  1;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  block):  Token.BLOCK  +  1;	  return    block    ==    null?    new    Node(Token.NAME,    block):    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	214	None	replace
1461	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  blockName):  Token.BLOCK;  [CE]  cannot  find  symbol  blockName  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  blockName):  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  blockName):  Token.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME,    block):    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  blockName	214	None	replace
1462	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  block,  Token.BLOCK):  Token.BLOCK;  [CE]  no  suitable  constructor  found  for  Node(int,Node,int)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  block,  Token.BLOCK):  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  block,  Token.BLOCK):  Token.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME,    block):    Token.BLOCK;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Node,int)	214	None	replace
1463	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getLastChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	166	None	replace
1464	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  }  else  {  throw  new  IllegalStateException( " ");  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK,    block.getLastChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	166	None	replace
1465	[BUG]  [BUGGY]  NodeUtil.checkState(block.getType()  ==  Token.BLOCK  &&  block.hasChildren());  [CE]  cannot  find  symbol  NodeUtil  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block.getType()  ==  Token.BLOCK  &&  block.hasChildren());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block.getType()  ==  Token.BLOCK  &&  block.hasChildren());	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
1466	[BUG]  [BUGGY]  NodeUtil.checkState(block.getType()  ==  Token.EMPTY);  [CE]  cannot  find  symbol  NodeUtil  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeUtil.checkState(block.getType()  ==  Token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeUtil.checkState(block.getType()  ==  Token.EMPTY);	  NodeUtil.checkState(block.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	51	None	replace
1467	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	37	None	replace
1468	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  0);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  0);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  0);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	37	None	replace
1469	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	37	None	replace
1470	[BUG]  [BUGGY]  return  block  ==  null?  Node.newNumber(Token.NAME):  Node.newString(Token.NAME,  getName()));  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newNumber(Token.NAME):  Node.newString(Token.NAME,  getName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newNumber(Token.NAME):  Node.newString(Token.NAME,  getName()));	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	78	None	replace
1471	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder( " "));  [CE]  no  suitable  method  found  for  newString(int,int,StringBuilder)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder( " "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder( " "));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,StringBuilder)	232	None	replace
1472	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuffer(32));  [CE]  no  suitable  method  found  for  newString(int,int,StringBuffer)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuffer(32));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuffer(32));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,StringBuffer)	232	None	replace
1473	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuffer(64));  [CE]  no  suitable  method  found  for  newString(int,int,StringBuffer)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuffer(64));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuffer(64));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,StringBuffer)	232	None	replace
1474	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder( ", "));  [CE]  no  suitable  method  found  for  newString(int,int,StringBuilder)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder( ", "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder( ", "));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,StringBuilder)	232	None	replace
1475	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder(tokenType));  [CE]  cannot  find  symbol  tokenType  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder(tokenType));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  StringBuilder(tokenType));	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    StringBuilder());    	non-compiled	[CE]  cannot  find  symbol  tokenType	232	None	replace
1476	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
1477	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	101	None	replace
1478	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]                    NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	101	None	replace
1479	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()),  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()),  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()),  this);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	199	None	replace
1480	[BUG]  [BUGGY]  return  block!=  null?  block.getType()  ==  Token.FUNCTION  :  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getType()  ==  Token.FUNCTION  :  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getType()  ==  Token.FUNCTION  :  Node.newString(Token.NAME,  getName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1481	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName()));  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  getName()));	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  ';'  expected	202	None	replace
1482	[BUG]  [BUGGY]  return  block!=  null?  block.getType()  :  Token.NAME?  block.toString()  :  Token.BLOCK;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getType()  :  Token.NAME?  block.toString()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getType()  :  Token.NAME?  block.toString()  :  Token.BLOCK;	  return    block.getType()    ==    Token.NAME?    block.toString()    :    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	224	None	replace
1483	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()  + ") ");  [CE]  no  suitable  method  found  for  newString(int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()  + ") ");  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getSimpleName()  + ") ");	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getSimpleName()));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	81	None	replace
1484	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.NAME,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	35	None	replace
1485	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.FOR):  Node.newString(Token.NAME,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.FOR):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.FOR):  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	35	None	replace
1486	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DELPROP):  Node.newString(Token.NAME,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DELPROP):  Node.newString(Token.NAME,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.DELPROP):  Node.newString(Token.NAME,  Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	35	None	replace
1487	[BUG]  [BUGGY]  return  block  ==  null  &&  block.clone()?  null  :  block.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null  &&  block.clone()?  null  :  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null  &&  block.clone()?  null  :  block.clone();	  return    block.clone()?    null    :    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	60	None	replace
1488	[BUG]  [BUGGY]  return  block.clone()?  null  :  block.cloneTree();  [CE]  clone()  has  protected  access  in  Object  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()?  null  :  block.cloneTree();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()?  null  :  block.cloneTree();	  return    block.clone()?    null    :    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	60	None	replace
1489	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.VAR);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.VAR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.VAR);	  return    block!=    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
1490	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  this);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  this);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()),    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	206	None	replace
1491	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  this);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  getName(),  this);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    getName()),    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	206	None	replace
1492	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.removeFirst();  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.removeFirst();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.removeFirst();	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1493	[BUG]  [BUGGY]  if(block!=  null)  {  return  new  Node(Token.NAME);  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  missing  return  statement  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  new  Node(Token.NAME);  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  new  Node(Token.NAME);  }  else  {  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  missing  return  statement	164	None	replace
1494	[BUG]  [BUGGY]  if(block!=  null)  {  return  new  Node(Token.NAME);  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  new  Node(Token.NAME);  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  new  Node(Token.NAME);  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(new  Node(Token.NAME));  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.NAME));    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
1495	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
1496	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  block  =  new  Node(Token.BLOCK);  block.setParentNode(null);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
1497	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  symbol	220	None	replace
1498	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getClass()):  Node.newString(Token.NAME,  getName()));  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getClass()):  Node.newString(Token.NAME,  getName()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getClass()):  Node.newString(Token.NAME,  getName()));	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	205	None	replace
1499	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName()  + ") ");  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName()  + ") ");  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getName()  + ") ");	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1500	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getLabel()));  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getLabel()));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  getLabel()));	  return    block    ==    null?    Node.newString(Token.NAME,    getName()):    Node.newString(Token.NAME,    getName()));    	non-compiled	[CE]  ';'  expected	205	None	replace
1501	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  1,  block.toString());  [CE]  no  suitable  method  found  for  newString(int,int,int,String)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  1,  block.toString());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  1,  block.toString());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,String)	230	None	replace
1502	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.removeChild(Token.BLOCK);  [CE]  method  removeChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.removeChild(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.removeChild(Token.BLOCK);	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(this);    	non-compiled	[CE]  method  removeChild  in  class  Node  cannot  be  applied  to  given  types;	41	None	replace
1503	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  block);  [CE]  no  suitable  method  found  for  newString(int,int,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  block);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,Node)	146	None	replace
1504	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  DEFAULT);  [CE]  cannot  find  symbol  DEFAULT  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  DEFAULT);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  DEFAULT);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	146	None	replace
1505	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  new  String[]  {  }  );  [CE]  no  suitable  method  found  for  newString(int,int,String[])  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  new  String[]  {  }  );  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.FOR,  new  String[]  {  }  );	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.FOR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,String[])	146	None	replace
1506	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block):  block.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block):  block.clone();	  return    block!=    null?    new    Node(Token.NAME):    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	150	None	replace
1507	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.clone()):  block.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.clone()):  block.clone();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.clone()):  block.clone();	  return    block!=    null?    new    Node(Token.NAME):    block.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	150	None	replace
1508	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block.toString();  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME):  block.toString();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME):  block.toString();	  return    block!=    null?    new    Node(Token.NAME):    block.clone();    	non-compiled	[CE]  incompatible  types	150	None	replace
1509	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  null?  null  :  block.getFirstChild();  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  null?  null  :  block.getFirstChild();  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  null?  null  :  block.getFirstChild();  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getFirstChild();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	98	None	replace
1510	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  null?  null  :  block.getFirstChild();  block.addChildToFront(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  null?  null  :  block.getFirstChild();  block.addChildToFront(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  null?  null  :  block.getFirstChild();  block.addChildToFront(block);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getFirstChild();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	98	None	replace
1511	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  block);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
1512	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.NAME,  block);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	240	None	replace
1513	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK,  block);  block.setString(Token.NAME);  }  [CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK,  block);  block.setString(Token.NAME);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.BLOCK,  block);  block.setString(Token.NAME);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setString(Token.NAME);    	non-compiled	[CE]  method  setString  in  class  Node  cannot  be  applied  to  given  types;	42	None	replace
1514	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getLastChild();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	99	None	replace
1515	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  Node  block  =  null?  null  :  block.getLastChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToFront(block);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    null?    null    :    block.getLastChild();    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	99	None	replace
1516	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK,  block.cloneTree());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK,  block.cloneTree());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  new  Node(Token.BLOCK,  block.cloneTree());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
1517	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneTree();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	5	None	add
1518	[BUG]  [BUGGY]  return  this.block!=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  this.block!=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  this.block!=  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    null    :    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  ';'  expected	87	None	replace
1519	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneTree()  +  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneTree()  +  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.cloneTree()  +  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    null    :    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	87	None	replace
1520	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.ARRAY);  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.ARRAY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.cloneTree()  :  Node.newString(Token.NAME,  Token.ARRAY);	  return    block!=    null?    null    :    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  ';'  expected	87	None	replace
1521	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
1522	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DELPROP):  Node.newString(Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DELPROP):  Node.newString(Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.DELPROP):  Node.newString(Token.CALL);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	30	None	replace
1523	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	162	None	replace
1524	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_TYPE):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_TYPE):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_TYPE):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	162	None	replace
1525	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_TOKEN):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_TOKEN):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	compilable	  [FE]  IllegalStateException  	162	3	replace
1526	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_TOKEN):  Node.newString(Token.NAME);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_TOKEN):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_TOKEN):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	compilable	  [FE]  IllegalStateException  	162	3	replace
1527	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_ARRAY):  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  DEFAULT_ARRAY  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_ARRAY):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  DEFAULT_ARRAY):  Node.newString(Token.NAME);	  return    block    ==    null?    Node.newString(Token.NAME,    DEFAULT_NAME):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_ARRAY	162	None	replace
1528	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  valueOf  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  valueOf	36	None	replace
1529	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME,  JSON_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  JSON_BLOCK  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME,  JSON_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME,  JSON_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  JSON_BLOCK	36	None	replace
1530	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	36	None	replace
1531	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.removeFirst();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.removeFirst();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.removeFirst();	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1532	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  name);  [CE]  cannot  find  symbol  name  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  name);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  name	28	None	replace
1533	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	28	None	replace
1534	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block;  block  ==  null?  null  :  block;  }  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block;  block  ==  null?  null  :  block;  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block;  block  ==  null?  null  :  block;  }	  return    block    ==    null?    null    :    block;    block    ==    null?    null    :    block;    	non-compiled	[CE]  not  a  statement	185	None	replace
1535	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  [CE]  missing  return  statement  [FE]                  NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  missing  return  statement	45	None	replace
1536	[BUG]  [BUGGY]  return  block.clone()  &&  NodeUtil.isLhs(block);  [CE]  clone()  has  protected  access  in  Object  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.clone()  &&  NodeUtil.isLhs(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.clone()  &&  NodeUtil.isLhs(block);	  return    block.clone()    &&    NodeUtil.isFunctionAnonymous(block);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	64	None	replace
1537	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  if(block!=  null)  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  if(block!=  null)  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    if(block!=  null)  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
1538	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  block!=  null?  null  :  block.cloneNode();  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  block!=  null?  null  :  block.cloneNode();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    block!=  null?  null  :  block.cloneNode();	  	non-compiled	[CE]  not  a  statement	9	None	add
1539	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK,  block.cloneNode());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK,  block.cloneNode());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK,  block.cloneNode());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	9	None	add
1540	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.BLOCK);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  new  Node(Token.BLOCK);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
1541	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.NAME,  String.valueOf(false));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.NAME,  String.valueOf(false));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  new  Node(Token.NAME,  String.valueOf(false));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
1542	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.BLOCK,  String.valueOf(false));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(true));  Node  block  =  new  Node(Token.BLOCK,  String.valueOf(false));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(true));    Node  block  =  new  Node(Token.BLOCK,  String.valueOf(false));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	93	None	add
1543	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME,  DEFAULT_NAME);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME,  DEFAULT_NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_NAME,  DEFAULT_NAME);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_NAME);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	233	None	replace
1544	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	130	None	add
1545	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  block!=  null?  null  :  block.getLastChild();  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getLastChild();  block!=  null?  null  :  block.getLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getLastChild();    block!=  null?  null  :  block.getLastChild();	  	non-compiled	[CE]  not  a  statement	130	None	add
1546	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  symbol):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  symbol	111	None	replace
1547	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.FUNCTION):  Node.newString(Token.NAME,  Token.NAME);  [CE]  no  suitable  constructor  found  for  Node(int,Node,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.FUNCTION):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.FUNCTION):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Node,int)	86	None	replace
1548	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  no  suitable  constructor  found  for  Node(int,Node,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.NAME):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Node,int)	86	None	replace
1549	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  false):  Node.newString(Token.NAME,  Token.NAME);  [CE]  no  suitable  constructor  found  for  Node(int,Node,boolean)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  false):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  false):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Node,boolean)	86	None	replace
1550	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.NAME):  Node.newString(Token.NAME,  Token.NAME);  [CE]  no  suitable  constructor  found  for  Node(int,Node,int)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.NAME):  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree(),  Token.NAME):  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    new    Node(Token.NAME,    block.cloneTree()):    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,Node,int)	86	None	replace
1551	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK,  block);  [CE]  clone()  has  protected  access  in  Object  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK,  block);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	245	None	replace
1552	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK,  this);  [CE]  clone()  has  protected  access  in  Object  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK,  this);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	245	None	replace
1553	[BUG]  [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK,  name);  [CE]  clone()  has  protected  access  in  Object  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.clone()  :  Node.newString(Token.NAME,  Token.BLOCK,  name);	  return    block!=    null?    block.clone()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	245	None	replace
1554	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  Token.BLOCK);  [CE]  cannot  find  symbol  Block  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.valueOf(block,  Token.BLOCK);	  return    block    ==    null?    new    Node(Token.NAME):    Block.valueOf(block);    	non-compiled	[CE]  cannot  find  symbol  Block	134	None	replace
1555	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.newString(Token.BLOCK);  [CE]  no  suitable  method  found  for  newString(int)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.newString(Token.BLOCK);	  return    block    ==    null?    null    :    block.newString();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	142	None	replace
1556	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.blockBlock() "));  [CE]  cannot  find  symbol  compiler  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.blockBlock() "));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.blockBlock() "));	  NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "NodeTraversal.block()       "));    	non-compiled	[CE]  cannot  find  symbol  compiler	194	None	replace
1557	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block()),  this);  [CE]  unclosed  string  literal  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block()),  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block()),  this);	  NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "NodeTraversal.block()       "));    	non-compiled	[CE]  unclosed  string  literal	194	None	replace
1558	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block()),  null);  [CE]  unclosed  string  literal  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block()),  null);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  block,  new  IllegalStateException( "NodeTraversal.block()),  null);	  NodeTraversal.traverse(compiler,    block,    new    IllegalStateException(   "NodeTraversal.block()       "));    	non-compiled	[CE]  unclosed  string  literal	194	None	replace
1559	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getType()!=  Token.NAME?  block.getType()  :  Token.BLOCK;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getType()!=  Token.NAME?  block.getType()  :  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getType()!=  Token.NAME?  block.getType()  :  Token.BLOCK;	  return    block.getType()!=    Token.NAME?    block.getType()    :    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	66	None	replace
1560	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getNext();  block!=  null?  null  :  block.getNext();  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getNext();  block!=  null?  null  :  block.getNext();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getNext();    block!=  null?  null  :  block.getNext();	  	non-compiled	[CE]  not  a  statement	3	None	add
1561	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  valueOf  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  valueOf	239	None	replace
1562	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  BLOCK  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	239	None	replace
1563	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getMessage()):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getMessage()):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getMessage()):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1564	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  tokenName  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  tokenName):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  cannot  find  symbol  tokenName	197	None	replace
1565	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  this);  [CE]  cannot  find  symbol  Locale  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  this);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	183	None	replace
1566	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  true);  [CE]  cannot  find  symbol  Locale  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  true);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  true);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	183	None	replace
1567	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  false);  [CE]  cannot  find  symbol  Locale  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  false);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  JSError.make(Locale.ENGLISH),  false);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    JSError.make(Locale.ENGLISH));    	non-compiled	[CE]  cannot  find  symbol  Locale	183	None	replace
1568	[BUG]  [BUGGY]  return  this.block!=  null?  null  :  block.getLastChild();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  this.block!=  null?  null  :  block.getLastChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  this.block!=  null?  null  :  block.getLastChild();	  return    block!=    null?    null    :    block.getLastChild();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	131	None	replace
1569	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.EMPTY);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.BLOCK,  Token.EMPTY);	  return    block    ==    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	57	None	replace
1570	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block);  block.setParentNode(null);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block);  block.setParentNode(null);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.BLOCK,  block);  block.setParentNode(null);  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	219	None	replace
1571	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  JSErrorDialog(this));  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  this.block,  new  JSErrorDialog(this));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  this.block,  new  JSErrorDialog(this));	  NodeTraversal.traverse(compiler,    block,    new    JSErrorDialog(this));    	non-compiled	[CE]  cannot  find  symbol  compiler	52	None	replace
1572	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	222	None	replace
1573	[BUG]  [BUGGY]  return  block!=  null  &&  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null  &&  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null  &&  Node.newString(Token.NAME,  Token.CALL):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.CALL):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  ';'  expected	222	None	replace
1574	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  }  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Block  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  }	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
1575	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  IRNode(Token.BLOCK));  [CE]  cannot  find  symbol  compiler  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  builder,  new  IRNode(Token.BLOCK));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  builder,  new  IRNode(Token.BLOCK));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.BLOCK));    	non-compiled	[CE]  cannot  find  symbol  compiler	191	None	replace
1576	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.getNext();    Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	138	None	add
1577	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  if(block.getType()  ==  Token.NAME)  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  if(block.getType()  ==  Token.NAME)  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  if(block.getType()  ==  Token.NAME)  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	125	None	replace
1578	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK,  block));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK,  block));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK,  block));  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	125	None	replace
1579	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.VALUE);  [CE]  cannot  find  symbol  VALUE  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.VALUE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  String.VALUE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    String.valueOf);    	non-compiled	[CE]  cannot  find  symbol  VALUE	18	None	replace
1580	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  PAR);  [CE]  cannot  find  symbol  PAR  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  PAR);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  PAR);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  PAR	180	None	replace
1581	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  PENDING);  [CE]  cannot  find  symbol  PENDING  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  PENDING);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  PENDING);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  PENDING	180	None	replace
1582	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  2);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  2);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  2);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	182	None	replace
1583	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  4);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  4);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  4);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	182	None	replace
1584	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  20);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  20);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  20);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	182	None	replace
1585	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  10);  [CE]  no  suitable  method  found  for  newString(int,int,int,int)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  10);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Integer.MIN_VALUE,  10);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int,int)	182	None	replace
1586	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRReference  <  Node>());  [CE]  cannot  find  symbol  compiler  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  constructor,  new  IRReference  <  Node>());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  constructor,  new  IRReference  <  Node>());	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
1587	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRReference  <  Node>());  [CE]  cannot  find  symbol  compiler  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  IRReference  <  Node>());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  node,  new  IRReference  <  Node>());	  NodeTraversal.traverse(compiler,    block,    new    IRReference    <    Node>());    	non-compiled	[CE]  cannot  find  symbol  compiler	195	None	replace
1588	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());  }  [CE]  cannot  find  symbol  compiler  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  NodeTraversal.traverse(compiler,  block,  new  IllegalStateException());  }	  return    block    ==    null?    null    :    block.cloneTree();    NodeTraversal.traverse(compiler,    block,    new    IllegalStateException());    	non-compiled	[CE]  cannot  find  symbol  compiler	152	None	replace
1589	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.VAR):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	27	None	replace
1590	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.BLOCK,  Token.NAME);  [CE]  cannot  find  symbol  DECEMBER  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.BLOCK,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.DECEMBER):  Node.newString(Token.BLOCK,  Token.NAME);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	27	None	replace
1591	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.TRY);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	235	None	replace
1592	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.TRY);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	235	None	replace
1593	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block):  Token.CALL;  [CE]  incompatible  types  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block):  Token.CALL;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block):  Token.CALL;	  return    block!=    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  incompatible  types	133	None	replace
1594	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block):  Token.FOR;  [CE]  incompatible  types  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block):  Token.FOR;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block):  Token.FOR;	  return    block!=    null?    new    Node(Token.NAME):    block;    	non-compiled	[CE]  incompatible  types	133	None	replace
1595	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.TRY);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.TRY);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	119	None	replace
1596	[BUG]  [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  getName());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  getName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  new  Node(Token.NAME,  block.cloneTree()):  Node.newString(Token.NAME,  getName());	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    getName());    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1597	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  BLOCK,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  BLOCK,  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	163	None	replace
1598	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  BLOCK);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1599	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  BLOCK,  Block.EMPTY);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  BLOCK,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.NAME,  BLOCK,  Block.EMPTY);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	163	None	replace
1600	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  block);  [CE]  no  suitable  method  found  for  newString(int,int,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  block);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,Node)	84	None	replace
1601	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.CALL,  this);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	84	None	replace
1602	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Token.CALL);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Token.CALL);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  Token.CALL);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.CALL);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	84	None	replace
1603	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  typeHandler,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  typeHandler,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  typeHandler,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
1604	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  IRNode(Token.EMPTY));  [CE]  cannot  find  symbol  compiler  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  new  IRNode(Token.EMPTY));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  new  IRNode(Token.EMPTY));	  NodeTraversal.traverse(compiler,    block,    new    IRNode(Token.EMPTY));    	non-compiled	[CE]  cannot  find  symbol  compiler	192	None	replace
1605	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME,  block);  block.addChildToBack(this);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME,  block);  block.addChildToBack(this);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME,  block);  block.addChildToBack(this);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(this);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	124	None	replace
1606	[BUG]  [BUGGY]  return  block!=  null?  key.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);  [CE]  cannot  find  symbol  key  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  key.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  key.cloneTree()  :  Node.newString(Token.NAME,  Token.NAME);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  key	85	None	replace
1607	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  getName()):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
1608	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME,  block);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME,  block);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  Node  block  =  new  Node(Token.NAME,  block);  block.addChildToBack(block);  }	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	127	None	replace
1609	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.GETPROP);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.GETPROP);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  Node  block  =  new  Node(Token.GETPROP);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.GETPROP);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	118	None	replace
1610	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.GETPROP);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.GETPROP);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.cloneTree();  }  else  {  Node  block  =  new  Node(Token.GETPROP);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.cloneTree();    Node    block    =    new    Node(Token.GETPROP);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	118	None	replace
1611	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  block!=  null?  null  :  block.getParent();  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  block!=  null?  null  :  block.getParent();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    block!=  null?  null  :  block.getParent();	  	non-compiled	[CE]  not  a  statement	143	None	add
1612	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getParent());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getParent());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK,  block.getParent());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
1613	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK,  block.getFirstChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
1614	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParent();  Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    null    :    block.getParent();    Node  block  =  new  Node(Token.BLOCK,  block.getLastChild());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	143	None	add
1615	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  sourceName,  block,  new  Runnable());  [CE]  cannot  find  symbol  compiler  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  sourceName,  block,  new  Runnable());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  sourceName,  block,  new  Runnable());	  NodeTraversal.traverse(compiler,    block,    new    Runnable());    	non-compiled	[CE]  cannot  find  symbol  compiler	207	None	replace
1616	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	212	None	replace
1617	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Block  block  =  new  Node(Token.BLOCK);  block.addChildToBack(block);  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    new    Node(Token.BLOCK);    block.addChildToBack(block);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1618	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(0));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(0));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(0));  }	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
1619	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(0));  }  else  {  block.addChildToBack(Node.newString(Token.NAME,  String.valueOf  [CE]  ')'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(0));  }  else  {  block.addChildToBack(Node.newString(Token.NAME,  String.valueOf  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(0));  }  else  {  block.addChildToBack(Node.newString(Token.NAME,  String.valueOf	  	non-compiled	[CE]  ')'  expected	95	None	add
1620	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.addChildToBack(new  Node(Token.NAME,  String.valueOf(0)));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.addChildToBack(new  Node(Token.NAME,  String.valueOf(0)));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.addChildToBack(new  Node(Token.NAME,  String.valueOf(0)));  }	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
1621	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(1));  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(1));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    if(block.getType()  ==  Token.FUNCTION)  {  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(1));  }	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
1622	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(0));  [CE]  variable  block  is  already  defined  in  method  block()  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  String.valueOf(0));  Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(0));  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    String.valueOf(0));    Node  block  =  new  Node(Token.FUNCTION);  block.setString(Token.NAME,  String.valueOf(0));	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	95	None	add
1623	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_SPACE);  [CE]  cannot  find  symbol  DEFAULT_SPACE  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_SPACE);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_SPACE);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SPACE	234	None	replace
1624	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_THRESHOLD);  [CE]  cannot  find  symbol  DEFAULT_THRESHOLD  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_THRESHOLD);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  DEFAULT_THRESHOLD);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_THRESHOLD	234	None	replace
1625	[BUG]  [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [CE]  missing  return  statement  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block;  }  else  {  block  =  new  Node(Token.NAME);  block.addChildToBack(new  Node(Token.BLOCK));  }	  return    block    ==    null?    null    :    block;    Node    block    =    new    Node(Token.NAME);    block.addChildToBack(new    Node(Token.BLOCK));    	non-compiled	[CE]  missing  return  statement	184	None	replace
1626	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  block):  Token.BLOCK;  [CE]  no  suitable  constructor  found  for  Node(int,int,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  block):  Token.BLOCK;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  block):  Token.BLOCK;	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int,Node)	215	None	replace
1627	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  block):  Block.newString(Token.NAME);  [CE]  no  suitable  constructor  found  for  Node(int,int,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  block):  Block.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  block):  Block.newString(Token.NAME);	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int,Node)	215	None	replace
1628	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  block):  token;  [CE]  no  suitable  constructor  found  for  Node(int,int,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  block):  token;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  block):  token;	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(int,int,Node)	215	None	replace
1629	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  blockName):  block;  [CE]  cannot  find  symbol  blockName  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  blockName):  block;  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME,  Token.BLOCK,  blockName):  block;	  return    block    ==    null?    new    Node(Token.NAME,    Token.BLOCK):    block;    	non-compiled	[CE]  cannot  find  symbol  blockName	215	None	replace
1630	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  BLOCK  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.NAME,  BLOCK):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  BLOCK	221	None	replace
1631	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  BLOCK);  [CE]  cannot  find  symbol  valueOf  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  String.valueOf):  Node.newString(Token.NAME,  BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    Token.NAME):    Node.newString(Token.NAME,    BLOCK);    	non-compiled	[CE]  cannot  find  symbol  valueOf	221	None	replace
1632	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  if(block!=  null)  {  Node  block  =  new  Node(Token.BLOCK);  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  }  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  if(block!=  null)  {  Node  block  =  new  Node(Token.BLOCK);  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    if(block!=  null)  {  Node  block  =  new  Node(Token.BLOCK);  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  }	  	non-compiled	[CE]  ';'  expected	198	None	add
1633	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  if(block!=  null)  {  Node  block  =  new  Node(Token.NAME);  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  }  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  if(block!=  null)  {  Node  block  =  new  Node(Token.NAME);  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    if(block!=  null)  {  Node  block  =  new  Node(Token.NAME);  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  }	  	non-compiled	[CE]  ';'  expected	198	None	add
1634	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  if(block!=  null)  {  Node  block  =  new  Node(Token.NAME);  block.cloneTree()  :  Node.newString(Token.BLOCK,  String.valueOf(block.toString()));  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  if(block!=  null)  {  Node  block  =  new  Node(Token.NAME);  block.cloneTree()  :  Node.newString(Token.BLOCK,  String.valueOf(block.toString()));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    if(block!=  null)  {  Node  block  =  new  Node(Token.NAME);  block.cloneTree()  :  Node.newString(Token.BLOCK,  String.valueOf(block.toString()));  }	  	non-compiled	[CE]  ';'  expected	198	None	add
1635	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  if(block!=  null)  {  Node  block  =  new  Node(Token.NAME);  block.cloneTree()  :  Node.newString(Token.STRING,  String.valueOf(block.toString()));  }  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  String.valueOf(block.toString()));  if(block!=  null)  {  Node  block  =  new  Node(Token.NAME);  block.cloneTree()  :  Node.newString(Token.STRING,  String.valueOf(block.toString()));  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    String.valueOf(block.toString()));    if(block!=  null)  {  Node  block  =  new  Node(Token.NAME);  block.cloneTree()  :  Node.newString(Token.STRING,  String.valueOf(block.toString()));  }	  	non-compiled	[CE]  ';'  expected	198	None	add
1636	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.setString(Token.NAME);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
1637	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.NAME);  block.addChildToBack(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
1638	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(block);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(block);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
1639	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [CE]  variable  block  is  already  defined  in  method  block()  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.cloneNode();  Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return    block    ==    null?    null    :    block.cloneNode();    Node  block  =  new  Node(Token.BLOCK);  block.addChildToFront(this);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	7	None	add
1640	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME),  block  =  new  Node(Token.BLOCK);  [CE]  :  expected  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME),  block  =  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME),  block  =  new  Node(Token.BLOCK);	  return    block    ==    null?    new    Node(Token.NAME):    block;    Node    block    =    new    Node(Token.NAME);    	non-compiled	[CE]  :  expected	121	None	replace
1641	[BUG]  [BUGGY]  return  block  ==  null?  null  :  block.getNext().clonePath();  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  null  :  block.getNext().clonePath();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  null  :  block.getNext().clonePath();	  return    block    ==    null?    null    :    block.clonePath();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
1642	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  label);  [CE]  cannot  find  symbol  label  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  label);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  label);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    name);    	non-compiled	[CE]  cannot  find  symbol  label	88	None	replace
1643	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  Arrays.asList(block))  :  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  Arrays  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  Arrays.asList(block))  :  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  Arrays.asList(block))  :  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  cannot  find  symbol  Arrays	12	None	replace
1644	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  block);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	12	None	replace
1645	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  block,  0);  [CE]  no  suitable  method  found  for  newString(int,int,int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  block,  0);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  0):  Node.newString(Token.NAME,  block,  0);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,int)	12	None	replace
1646	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  new  String[]  {  }  );  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  new  String[]  {  }  );  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK):  Node.newString(Token.NAME,  block,  new  String[]  {  }  );	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	12	None	replace
1647	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  block,  name);  [CE]  cannot  find  symbol  name  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  block,  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  Token.BLOCK,  name):  Node.newString(Token.NAME,  block,  name);	  return    block!=    null?    Node.newString(Token.NAME,    Token.BLOCK):    Node.newString(Token.NAME,    block);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
1648	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  block);  [CE]  cannot  find  symbol  Block  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  block);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  Block	26	None	replace
1649	[BUG]  [BUGGY]  return  block!=  null?  Block.newString(Token.NAME):  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  Block  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.newString(Token.NAME):  Node.newString(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.newString(Token.NAME):  Node.newString(Token.BLOCK);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  Block	26	None	replace
1650	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.BLOCK):  Node.newString(Token.NAME);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.BLOCK):  Node.newString(Token.NAME);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.BLOCK):  Node.newString(Token.NAME);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	26	None	replace
1651	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  nameNode());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  nameNode());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.toString(block,  nameNode());	  return    block    ==    null?    new    Node(Token.NAME):    Block.toString(block);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
1652	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.removeFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  null  :  block.removeFirstChild();	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	compilable	  [FE]  NullPointerException  	229	3	replace
1653	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.removeFirstChild();  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.removeFirstChild();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.removeFirstChild();	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	compilable	  [FE]  NullPointerException  	229	3	replace
1654	[BUG]  [BUGGY]  return  block!=  null?  null  :  block.getParentNode();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  null  :  block.getParentNode();  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  null  :  block.getParentNode();	  return    block!=    null?    null    :    block;    Node    block    =    new    Node(Token.BLOCK);    block.setParentNode(null);    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
1655	[BUG]  [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.ASSIGN);  [CE]  cannot  find  symbol  Block  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.ASSIGN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  new  Node(Token.NAME):  Block.newString(Token.ASSIGN);	  return    block    ==    null?    new    Node(Token.NAME):    Block.newString(Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol  Block	188	None	replace
1656	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  value);  [CE]  cannot  find  symbol  value  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  value);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  value);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    this);    	non-compiled	[CE]  cannot  find  symbol  value	181	None	replace
1657	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Block.EMPTY);  [CE]  cannot  find  symbol  Block  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Block.EMPTY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Block.EMPTY);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  cannot  find  symbol  Block	204	None	replace
1658	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Double.NaN);  [CE]  no  suitable  method  found  for  newString(int,int,double)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Double.NaN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Double.NaN);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,double)	204	None	replace
1659	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Double.POSITIVE_INFINITY);  [CE]  no  suitable  method  found  for  newString(int,int,double)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Double.POSITIVE_INFINITY);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  Double.POSITIVE_INFINITY);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,double)	204	None	replace
1660	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  new  String[]  {  }  );  [CE]  no  suitable  method  found  for  newString(int,int,String[])  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  new  String[]  {  }  );  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.VAR,  new  String[]  {  }  );	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.VAR);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int,String[])	204	None	replace
1661	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  return  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }  [CE]  cannot  find  symbol  NodeUtil  [FE]            NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  return  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  return  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  NodeUtil	168	None	replace
1662	[BUG]  [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }  [CE]  variable  block  is  already  defined  in  method  block()  [FE]              NullPointerException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	if(block!=  null)  {  return  block.getFirstChild();  }  else  {  Node  block  =  NodeUtil.newString(Token.NAME,  block.getFirstChild());  }	  return    block    ==    null?    null    :    block.getFirstChild();    Node    block    =    NodeUtil.newString(Token.NAME,    block.getFirstChild());    	non-compiled	[CE]  variable  block  is  already  defined  in  method  block()	168	None	replace
1663	[BUG]  [BUGGY]  return  block!=  null?  block.getType()  ==  Token.FUNCTION  :  Node.newString(Token.NAME,  getSourceName());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.getType()  ==  Token.FUNCTION  :  Node.newString(Token.NAME,  getSourceName());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.getType()  ==  Token.FUNCTION  :  Node.newString(Token.NAME,  getSourceName());	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    getSourceName());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
1664	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	31	None	replace
1665	[BUG]  [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  block);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block  ==  null?  Node.newString(Token.NAME):  Node.newString(Token.BLOCK,  Token.NAME,  block);	  return    block    ==    null?    Node.newString(Token.NAME):    Node.newString(Token.BLOCK,    Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	31	None	replace
1666	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  name);  [CE]  cannot  find  symbol  name  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  name);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  new  String[]  {  },  name);	  return    block!=    null?    block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK,    new    String[]    {    }    );    	non-compiled	[CE]  cannot  find  symbol  name	231	None	replace
1667	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  TOKEN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  TOKEN);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    EXPR_RESULT);    	compilable	  [FE]  NullPointerException  	90	3	replace
1668	[BUG]  [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  TOKEN);  [FE]  NullPointerException  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  TOKEN);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block.getType()  ==  Token.FUNCTION?  block  :  Node.newString(Token.NAME,  TOKEN);	  return    block.getType()    ==    Token.FUNCTION?    block    :    Node.newString(Token.NAME,    EXPR_RESULT);    	compilable	  [FE]  NullPointerException  	90	3	replace
1669	[BUG]  [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  DEFAULT_BLOCK  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Node.newString(Token.NAME,  DEFAULT_BLOCK):  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Node.newString(Token.NAME,    name):    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BLOCK	38	None	replace
1670	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	return  block!=  null?  block.cloneTree()  :  new  Node(Token.BLOCK);	  return    block!=    null?    block.clone()    :    new    Node(Token.BLOCK);    	compilable	  [FE]  IllegalStateException  	246	3	replace
1671	[BUG]  [BUGGY]  return  block!=  null?  block.cloneTree()  :  new  Node(Token.BLOCK);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  block.cloneTree()  :  new  Node(Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  block.cloneTree()  :  new  Node(Token.BLOCK);	  return    block!=    null?    block.clone()    :    new    Node(Token.BLOCK);    	compilable	  [FE]  IllegalStateException  	246	3	replace
1672	[BUG]  [BUGGY]  return  node!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  cannot  find  symbol  node  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  node!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  node!=  null?  block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    node.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  node	15	None	replace
1673	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  sourceFile,  new  IRNodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  sourceFile,  new  IRNodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  sourceFile,  new  IRNodeTraversal());	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
1674	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  getClass(),  block,  new  IRNodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  NodeTraversal.traverse(compiler,  getClass(),  block,  new  IRNodeTraversal());  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	NodeTraversal.traverse(compiler,  getClass(),  block,  new  IRNodeTraversal());	  NodeTraversal.traverse(compiler,    block,    new    IRNodeTraversal());    	non-compiled	[CE]  cannot  find  symbol  compiler	48	None	replace
1675	[BUG]  [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  block);  [CE]  cannot  find  symbol  Block  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  block);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Block.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK,  block);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  cannot  find  symbol  Block	17	None	replace
1676	[BUG]  [BUGGY]  return  block!=  null?  Token.BLOCK.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [CE]  int  cannot  be  dereferenced  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  block()  {  Node  block  =  new  Node(Token.BLOCK);      [BUGGY]  return  block!=  null?  Token.BLOCK.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);  [BUGGY]      }  [CLASS]  IR  [METHOD]  block  [RETURN_TYPE]  Node  [VARIABLES]  boolean  Node  block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	return  block!=  null?  Token.BLOCK.cloneTree()  :  Node.newString(Token.NAME,  Token.BLOCK);	  return    block!=    null?    Block.cloneTree()    :    Node.newString(Token.NAME,    Token.BLOCK);    	non-compiled	[CE]  int  cannot  be  dereferenced	17	None	replace
