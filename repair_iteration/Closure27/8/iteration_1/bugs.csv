bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isCatch());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	add	Preconditions.checkState(body.isCatch());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(body.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isCatch());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	Preconditions.checkState(body.isCatch());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
3	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isEmpty());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	add	Preconditions.checkState(body.isEmpty());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(body.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isEmpty());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	Preconditions.checkState(body.isEmpty());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
5	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isFunction());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	add	Preconditions.checkState(body.isFunction());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(body.isFunction());  [FE]  IllegalStateException  [FE]        IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isFunction());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	Preconditions.checkState(body.isFunction());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(body.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]          IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isAssignmentOp());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	Preconditions.checkState(body.isAssignmentOp());	Preconditions.checkState(body.isBlock());  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(body.isNode());  [CE]  cannot  find  symbol  [FE]            IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isNode());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	Preconditions.checkState(body.isNode());	Preconditions.checkState(body.isBlock());  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
9	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body!=  null  &&  body.isBlock());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	add	Preconditions.checkState(body!=  null  &&  body.isBlock());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(body!=  null  &&  body.isBlock());  [FE]  IllegalStateException  [FE]              IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body!=  null  &&  body.isBlock());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	Preconditions.checkState(body!=  null  &&  body.isBlock());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
11	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]    [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	add	  	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
12	[BUG]  [BUGGY]    [FE]  IllegalStateException  [FE]                IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]    [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	  	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
13	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body  ==  null  ||  body.isBlock());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	add	Preconditions.checkState(body  ==  null  ||  body.isBlock());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(body  ==  null  ||  body.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body  ==  null  ||  body.isBlock());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	Preconditions.checkState(body  ==  null  ||  body.isBlock());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
15	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body  ==  null  &&  body.isBlock());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	add	Preconditions.checkState(body  ==  null  &&  body.isBlock());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
16	[BUG]  [BUGGY]  Preconditions.checkState(body  ==  null  &&  body.isBlock());  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body  ==  null  &&  body.isBlock());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	Preconditions.checkState(body  ==  null  &&  body.isBlock());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
17	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isName());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	add	Preconditions.checkState(body.isName());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
18	[BUG]  [BUGGY]  Preconditions.checkState(body.isName());  [FE]  IllegalStateException  [FE]        IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isName());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	Preconditions.checkState(body.isName());	Preconditions.checkState(body.isBlock());  	compilable	  [FE]  IllegalStateException  	15	3	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(body.isTree());  [CE]  cannot  find  symbol  [FE]    IllegalStateException  [CONTEXT]  public  static  Node  catchNode(Node  expr,  Node  body)  {  Preconditions.checkState(expr.isName());  [BUGGY]  Preconditions.checkState(body.isTree());  [BUGGY]  return  new  Node(Token.CATCH,  expr,  body);  }  [CLASS]  IR  [METHOD]  catchNode  [RETURN_TYPE]  Node  Node  expr  Node  body  [VARIABLES]  boolean  Node  body  expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	Preconditions.checkState(body.isTree());	Preconditions.checkState(body.isBlock());  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
