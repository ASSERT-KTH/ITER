bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] Node block = new Node(Token.BLOCK); [FE] IllegalStateException [CONTEXT] public static Node block() { [BUGGY] Node block = new Node(Token.BLOCK); [BUGGY] return block; } [CLASS] IR [METHOD] block [RETURN_TYPE] Node  [VARIABLES] boolean Node block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	92	92	3	replace	
2	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node block() { [BUGGY] [BUGGY] Node block = new Node(Token.BLOCK); return block; } [CLASS] IR [METHOD] block [RETURN_TYPE] Node  [VARIABLES] boolean Node block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	92	92	3	add	
3	[BUG] [BUGGY] return block; [FE] IllegalStateException [CONTEXT] public static Node block() { Node block = new Node(Token.BLOCK); [BUGGY] return block; [BUGGY] } [CLASS] IR [METHOD] block [RETURN_TYPE] Node  [VARIABLES] boolean Node block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	replace	
4	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node block() { Node block = new Node(Token.BLOCK); [BUGGY] [BUGGY] return block; } [CLASS] IR [METHOD] block [RETURN_TYPE] Node  [VARIABLES] boolean Node block  	projects/Closure27/src/com/google/javascript/rhino/IR.java	1.0	93	93	3	add	
5	[BUG] [BUGGY] Preconditions.checkState(mayBeStatement(stmt)); [FE] IllegalStateException [CONTEXT] public static Node block(Node stmt) { [BUGGY] Preconditions.checkState(mayBeStatement(stmt)); [BUGGY] Node block = new Node(Token.BLOCK, stmt); return block; } [CLASS] IR [METHOD] block [RETURN_TYPE] Node  Node stmt [VARIABLES] boolean Node block stmt  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	97	97	3	replace	
6	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node block(Node stmt) { [BUGGY] [BUGGY] Preconditions.checkState(mayBeStatement(stmt)); Node block = new Node(Token.BLOCK, stmt); return block; } [CLASS] IR [METHOD] block [RETURN_TYPE] Node  Node stmt [VARIABLES] boolean Node block stmt  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	97	97	3	add	
7	[BUG] [BUGGY] Preconditions.checkState(tryBody.isBlock()); [FE] IllegalStateException [CONTEXT] public static Node tryCatch(Node tryBody, Node catchNode) { [BUGGY] Preconditions.checkState(tryBody.isBlock()); [BUGGY] Preconditions.checkState(catchNode.isCatch()); Node catchBody = block(catchNode).copyInformationFrom(catchNode); return new Node(Token.TRY, tryBody, catchBody); } [CLASS] IR [METHOD] tryCatch [RETURN_TYPE] Node  Node tryBody Node catchNode [VARIABLES] boolean Node catchBody catchNode tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	
8	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node tryCatch(Node tryBody, Node catchNode) { [BUGGY] [BUGGY] Preconditions.checkState(tryBody.isBlock()); Preconditions.checkState(catchNode.isCatch()); Node catchBody = block(catchNode).copyInformationFrom(catchNode); return new Node(Token.TRY, tryBody, catchBody); } [CLASS] IR [METHOD] tryCatch [RETURN_TYPE] Node  Node tryBody Node catchNode [VARIABLES] boolean Node catchBody catchNode tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	
9	[BUG] [BUGGY] Preconditions.checkState(catchNode.isCatch()); [FE] IllegalStateException [CONTEXT] public static Node tryCatch(Node tryBody, Node catchNode) { Preconditions.checkState(tryBody.isBlock()); [BUGGY] Preconditions.checkState(catchNode.isCatch()); [BUGGY] Node catchBody = block(catchNode).copyInformationFrom(catchNode); return new Node(Token.TRY, tryBody, catchBody); } [CLASS] IR [METHOD] tryCatch [RETURN_TYPE] Node  Node tryBody Node catchNode [VARIABLES] boolean Node catchBody catchNode tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	232	232	3	replace	
10	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node tryCatch(Node tryBody, Node catchNode) { Preconditions.checkState(tryBody.isBlock()); [BUGGY] [BUGGY] Preconditions.checkState(catchNode.isCatch()); Node catchBody = block(catchNode).copyInformationFrom(catchNode); return new Node(Token.TRY, tryBody, catchBody); } [CLASS] IR [METHOD] tryCatch [RETURN_TYPE] Node  Node tryBody Node catchNode [VARIABLES] boolean Node catchBody catchNode tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	232	232	3	add	
11	[BUG] [BUGGY] Node catchBody = block(catchNode).copyInformationFrom(catchNode); [FE] IllegalStateException [CONTEXT] public static Node tryCatch(Node tryBody, Node catchNode) { Preconditions.checkState(tryBody.isBlock()); Preconditions.checkState(catchNode.isCatch()); [BUGGY] Node catchBody = block(catchNode).copyInformationFrom(catchNode); [BUGGY] return new Node(Token.TRY, tryBody, catchBody); } [CLASS] IR [METHOD] tryCatch [RETURN_TYPE] Node  Node tryBody Node catchNode [VARIABLES] boolean Node catchBody catchNode tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	233	233	3	replace	
12	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node tryCatch(Node tryBody, Node catchNode) { Preconditions.checkState(tryBody.isBlock()); Preconditions.checkState(catchNode.isCatch()); [BUGGY] [BUGGY] Node catchBody = block(catchNode).copyInformationFrom(catchNode); return new Node(Token.TRY, tryBody, catchBody); } [CLASS] IR [METHOD] tryCatch [RETURN_TYPE] Node  Node tryBody Node catchNode [VARIABLES] boolean Node catchBody catchNode tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	233	233	3	add	
13	[BUG] [BUGGY] Preconditions.checkState(expr.isName()); [FE] IllegalStateException [CONTEXT] public static Node catchNode(Node expr, Node body) { [BUGGY] Preconditions.checkState(expr.isName()); [BUGGY] Preconditions.checkState(body.isBlock()); return new Node(Token.CATCH, expr, body); } [CLASS] IR [METHOD] catchNode [RETURN_TYPE] Node  Node expr Node body [VARIABLES] boolean Node body expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	246	246	3	replace	
14	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node catchNode(Node expr, Node body) { [BUGGY] [BUGGY] Preconditions.checkState(expr.isName()); Preconditions.checkState(body.isBlock()); return new Node(Token.CATCH, expr, body); } [CLASS] IR [METHOD] catchNode [RETURN_TYPE] Node  Node expr Node body [VARIABLES] boolean Node body expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	246	246	3	add	
15	[BUG] [BUGGY] Preconditions.checkState(body.isBlock()); [FE] IllegalStateException [CONTEXT] public static Node catchNode(Node expr, Node body) { Preconditions.checkState(expr.isName()); [BUGGY] Preconditions.checkState(body.isBlock()); [BUGGY] return new Node(Token.CATCH, expr, body); } [CLASS] IR [METHOD] catchNode [RETURN_TYPE] Node  Node expr Node body [VARIABLES] boolean Node body expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	replace	
16	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node catchNode(Node expr, Node body) { Preconditions.checkState(expr.isName()); [BUGGY] [BUGGY] Preconditions.checkState(body.isBlock()); return new Node(Token.CATCH, expr, body); } [CLASS] IR [METHOD] catchNode [RETURN_TYPE] Node  Node expr Node body [VARIABLES] boolean Node body expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	247	247	3	add	
17	[BUG] [BUGGY] return new Node(Token.CATCH, expr, body); [FE] IllegalStateException [CONTEXT] public static Node catchNode(Node expr, Node body) { Preconditions.checkState(expr.isName()); Preconditions.checkState(body.isBlock()); [BUGGY] return new Node(Token.CATCH, expr, body); [BUGGY] } [CLASS] IR [METHOD] catchNode [RETURN_TYPE] Node  Node expr Node body [VARIABLES] boolean Node body expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	248	248	3	replace	
18	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node catchNode(Node expr, Node body) { Preconditions.checkState(expr.isName()); Preconditions.checkState(body.isBlock()); [BUGGY] [BUGGY] return new Node(Token.CATCH, expr, body); } [CLASS] IR [METHOD] catchNode [RETURN_TYPE] Node  Node expr Node body [VARIABLES] boolean Node body expr  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	248	248	3	add	
19	[BUG] [BUGGY] return Node.newString(Token.NAME, name); [FE] IllegalStateException [CONTEXT] public static Node name(String name) { [BUGGY] return Node.newString(Token.NAME, name); [BUGGY] } [CLASS] IR [METHOD] name [RETURN_TYPE] Node  String name [VARIABLES] boolean String name  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	293	293	3	replace	
20	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node name(String name) { [BUGGY] [BUGGY] return Node.newString(Token.NAME, name); } [CLASS] IR [METHOD] name [RETURN_TYPE] Node  String name [VARIABLES] boolean String name  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	293	293	3	add	
21	[BUG] [BUGGY] switch (n.getType()) { [FE] IllegalStateException [CONTEXT] private static boolean mayBeStatement(Node n) { [BUGGY] switch (n.getType()) { [BUGGY] case Token.EMPTY: case Token.FUNCTION:   return true; case Token.BLOCK: case Token.BREAK: case Token.CONST: case Token.CONTINUE: [CLASS] IR [METHOD] mayBeStatement [RETURN_TYPE] boolean  Node n [VARIABLES] boolean Node n  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	474	474	3	replace	
22	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] private static boolean mayBeStatement(Node n) { [BUGGY] [BUGGY] switch (n.getType()) { case Token.EMPTY: case Token.FUNCTION:   return true; case Token.BLOCK: case Token.BREAK: case Token.CONST: case Token.CONTINUE: [CLASS] IR [METHOD] mayBeStatement [RETURN_TYPE] boolean  Node n [VARIABLES] boolean Node n  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	474	474	3	add	
23	[BUG] [BUGGY] return false; [FE] IllegalStateException [CONTEXT] case Token.RETURN: case Token.SWITCH: case Token.THROW: case Token.TRY: case Token.VAR: case Token.WHILE: case Token.WITH: return true; default: [BUGGY] return false; [BUGGY] } } [CLASS] IR [METHOD] mayBeStatement [RETURN_TYPE] boolean  Node n [VARIABLES] boolean Node n  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	501	501	3	replace	
24	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] case Token.RETURN: case Token.SWITCH: case Token.THROW: case Token.TRY: case Token.VAR: case Token.WHILE: case Token.WITH: return true; default: [BUGGY] [BUGGY] return false; } } [CLASS] IR [METHOD] mayBeStatement [RETURN_TYPE] boolean  Node n [VARIABLES] boolean Node n  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	501	501	3	add	
25	[BUG] [BUGGY] Preconditions.checkState(tryBody.isLabelName()); [FE] IllegalStateException [CONTEXT] public static Node tryFinally(Node tryBody, Node finallyBody) { [BUGGY] Preconditions.checkState(tryBody.isLabelName()); [BUGGY] Preconditions.checkState(finallyBody.isLabelName()); Node catchBody = block().copyInformationFrom(tryBody); return new Node(Token.TRY, tryBody, catchBody, finallyBody); } [CLASS] IR [METHOD] tryFinally [RETURN_TYPE] Node  Node tryBody Node finallyBody [VARIABLES] boolean Node catchBody finallyBody tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.5773502691896258	224	224	3	replace	
26	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node tryFinally(Node tryBody, Node finallyBody) { [BUGGY] [BUGGY] Preconditions.checkState(tryBody.isLabelName()); Preconditions.checkState(finallyBody.isLabelName()); Node catchBody = block().copyInformationFrom(tryBody); return new Node(Token.TRY, tryBody, catchBody, finallyBody); } [CLASS] IR [METHOD] tryFinally [RETURN_TYPE] Node  Node tryBody Node finallyBody [VARIABLES] boolean Node catchBody finallyBody tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.5773502691896258	224	224	3	add	
27	[BUG] [BUGGY] Preconditions.checkState(finallyBody.isBlock()); [FE] IllegalStateException [CONTEXT] public static Node tryCatchFinally( Node tryBody, Node catchNode, Node finallyBody) { [BUGGY] Preconditions.checkState(finallyBody.isBlock()); [BUGGY] Node tryNode = tryCatch(tryBody, catchNode); tryNode.addChildToBack(finallyBody); return tryNode; } [CLASS] IR [METHOD] tryCatchFinally [RETURN_TYPE] Node  Node tryBody Node catchNode Node finallyBody [VARIABLES] boolean Node catchNode finallyBody tryBody tryNode  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.5773502691896258	239	239	3	replace	
28	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node tryCatchFinally( Node tryBody, Node catchNode, Node finallyBody) { [BUGGY] [BUGGY] Preconditions.checkState(finallyBody.isBlock()); Node tryNode = tryCatch(tryBody, catchNode); tryNode.addChildToBack(finallyBody); return tryNode; } [CLASS] IR [METHOD] tryCatchFinally [RETURN_TYPE] Node  Node tryBody Node catchNode Node finallyBody [VARIABLES] boolean Node catchNode finallyBody tryBody tryNode  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.5773502691896258	239	239	3	add	
29	[BUG] [BUGGY] Node tryNode = tryCatch(tryBody, catchNode); [FE] IllegalStateException [CONTEXT] public static Node tryCatchFinally( Node tryBody, Node catchNode, Node finallyBody) { Preconditions.checkState(finallyBody.isBlock()); [BUGGY] Node tryNode = tryCatch(tryBody, catchNode); [BUGGY] tryNode.addChildToBack(finallyBody); return tryNode; } [CLASS] IR [METHOD] tryCatchFinally [RETURN_TYPE] Node  Node tryBody Node catchNode Node finallyBody [VARIABLES] boolean Node catchNode finallyBody tryBody tryNode  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.5773502691896258	240	240	3	replace	
30	[BUG] [BUGGY] [FE] IllegalStateException [CONTEXT] public static Node tryCatchFinally( Node tryBody, Node catchNode, Node finallyBody) { Preconditions.checkState(finallyBody.isBlock()); [BUGGY] [BUGGY] Node tryNode = tryCatch(tryBody, catchNode); tryNode.addChildToBack(finallyBody); return tryNode; } [CLASS] IR [METHOD] tryCatchFinally [RETURN_TYPE] Node  Node tryBody Node catchNode Node finallyBody [VARIABLES] boolean Node catchNode finallyBody tryBody tryNode  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.5773502691896258	240	240	3	add	
